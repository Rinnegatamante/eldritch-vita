[LizardmanProjectile]
Extends			= "ProxyProjectile"
EldMesh			= "LizardmanProjectileMesh"
PEMap			= "LizardmanProjectilePEMap"

	[LizardmanProjectilePEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "ProjectileDamage"
	@@^Def	= "LizardmanProjectileDamagePE"

		[LizardmanProjectileDamagePE]
		PEType	= "ConstantInt"
		Value	= 2

	[LizardmanProjectileMesh]
	Extends				= "ProxyProjectileMesh"
	TextureOverride	= "Textures/projectile-lizardman_NODXT.tga"

[ProxyProjectile]
#ShouldDebugRender	= true
EldTransform	= "."
EldCollision	= "ProxyProjectileCollision"
EldMesh			= "ProxyProjectileMesh"
EldParticles	= "ProxyProjectileParticles"
EldSound		= "ProxyProjectileSound"
EldHealth		= "ProxyProjectileHealth"
Reactions		= "ProxyProjectileReactions"
Owner			= "."
PEMap			= "ProxyProjectilePEMap"

	[ProxyProjectilePEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "ProjectileDamage"
	@@^Def	= "ProxyProjectileDamagePE"

		[ProxyProjectileDamagePE]
		PEType	= "ConstantInt"
		Value	= 1

	[ProxyProjectileCollision]
	HalfExtentsXY	= 0.25
	HalfExtentsZ	= 0.25
	# Disabled to prevent confusion because bullets don't overpenetrate projectiles.
	# It's cool to shoot fireballs out of the air, but not when it wastes a bullet.
	#BlocksTrace		= true

	[ProxyProjectileMesh]
	Mesh				= "Meshes/projectile.cms"
	MaterialOverride	= "Material_EntityStaticAlphaTest"
	ConstantIrradianceR	= 0.8
	ConstantIrradianceG	= 0.8
	ConstantIrradianceB	= 0.8

	[ProxyProjectileSound]
	Sound	= "ProjectileSound"

	[ProxyProjectileParticles]
	Particles = "PS_Projectile"

	[ProxyProjectileHealth]
	Health	= 1

	[ProxyProjectileReactions]
	NumReactions = &
	@ Reaction
	@@& = "ProxyProjectileOnAnyCollisionReaction"
	@@& = "ProxyProjectileOnTouchedOwnerReaction"
	@@& = "ProxyProjectileOnTouchedReaction"
	@@&	= "ProxyProjectileOnDiedReaction"

		[ProxyProjectileOnDiedReaction]
		Rule		= "OnDiedRule"
		NumActions	= &
		@ Action
		@@&			= "ProjectileStopComposite"

			[ProjectileStopComposite]
			ActionType	= "Composite"
			NumActions	= &
			@ Action
			@@&			= "StopMotionAction"
			@@&			= "HideMeshAction"
			@@&			= "StopTouchingAction"
			@@&			= "PlayExplosionFXAction"
			@@&			= "StopProjectileSFX"
			@@&			= "PlayExplosionSound"
			@@&			= "ProjectileQueueDestroySelf"

				[HideMeshAction]
				ActionType	= "SendEvent"
				EventName	= "HideMesh"
				Recipient	= "SelfPE"

				[PlayExplosionFXAction]
				ActionType		= "SendEvent"
				EventName		= "PlayParticleSystem"
				Recipient		= "SelfPE"
				NumParameters	= &
				@ Parameter
				@@&Name			= "ParticleSystem"
				@@^Value		= "ExplosionFXPE"

					[ExplosionFXPE]
					PEType		= "ConstantString"
					Value		= "PS_Explosion"

				[StopProjectileSFX]
				ActionType		= "SendEvent"
				EventName		= "StopSound"
				Recipient		= "SelfPE"
				NumParameters	= &
				@ Parameter
				@@&Name			= "Category"
				@@^Value		= "SFXPE"

				[PlayExplosionSound]
				ActionType		= "SendEvent"
				EventName		= "PlaySound"
				Recipient		= "SelfPE"
				NumParameters	= &
				@ Parameter
				@@&Name			= "Sound"
				@@^Value		= "ExplosionSoundPE"

					[ExplosionSoundPE]
					PEType	= "ConstantString"
					Value	= "ExplosionSound"

				# Give the particle system time to play
				[ProjectileQueueDestroySelf]
				ActionType		= "SendEvent"
				EventName		= "Destroy"
				Recipient		= "SelfPE"
				QueueEvent		= true
				DispatchDelay	= 3.0

		[ProxyProjectileOnAnyCollisionReaction]
		Rule		= "OnAnyCollisionRule"
		NumActions	= &
		@ Action
		@@&			= "ProjectileStopComposite"

		# Dummy reaction so that owners don't get damaged by their own projectiles
		[ProxyProjectileOnTouchedOwnerReaction]
		Rule = "ProxyProjectileOnTouchedOwnerRule"
		NumActions = 0

			[ProxyProjectileOnTouchedOwnerRule]
			Event = "OnTouched"
			NumCriteria = &
			@ Criterion
			@@&Name = "Touched"
			@@^Min = "OwnerPE"

		[ProxyProjectileOnTouchedReaction]
		Rule		= "OnTouchedRule"
		NumActions	= &
		@ Action
		@@&			= "ProxyProjectileOnTouchedDealDamage"
		@@&			= "ProxyProjectileOnTouchedApplyImpulse"
		@@&			= "ProjectileStopComposite"

			[OnTouchedRule]
			Event = "OnTouched"

			[ProxyProjectileOnTouchedDealDamage]
			ActionType		= "SendEvent"
			EventName		= "TakeDamage"
			Recipient		= "TouchedPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "DamageAmount"
			@@^Value		= "ProjectileDamagePE"
			@@&Name			= "Damager"
			@@^Value		= "OwnerPE"
			@@&Name			= "DamageType"
			@@^Value		= "BurningDamageTypePE"

				[ProjectileDamagePE]
				PEType	= "Lookup"
				Key		= "ProjectileDamage"

				[BurningDamageTypePE]
				PEType	= "ConstantString"
				Value	= "Burning"

			[ProxyProjectileOnTouchedApplyImpulse]
			ActionType		= "SendEvent"
			EventName		= "ApplyImpulse"
			Recipient		= "TouchedPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Impulse"
			@@^Value		= "ProjectileImpulsePE"

				[ProjectileImpulsePE]
				PEType	= "Mul"
				InputA	= "VelocityPE"
				InputB	= "ProjectileImpulseScalar"

					[ProjectileImpulseScalar]
					PEType	= "ConstantFloat"
					Value	= 1.0

[SleepingSquidman]
Extends				= "Squidman"
EldSleeper			= "SleepingSquidmanSleeper"
Reactions			= "SleepingSquidmanReactions"

	[SleepingSquidmanSleeper]
	NoiseThreshold	= 0.6

	[SleepingSquidmanReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "NPCProxyOnSetHardModeReaction"
	@@&				= "NPCProxyOnInitializedQueuedHardModeReaction"
	@@&				= "NPCProxyDeathReaction"
	@@&				= "NPCProxyOnFrobbedReaction"
	@@&				= "NPCProxyOnFrobbedHeldReaction"
	@@&				= "EdibleOnBecameFrobTargetReaction"
	@@&				= "NPCProxyDamagedReaction"
	@@&				= "NPCProxyProjectileFireReaction"
	@@&				= "NPCProxyMeleeConeCheckReaction"
	@@&				= "NPCProxyOnHypnotizedReaction"
	@@&				= "NPCProxyOnEndHypnotizedReaction"
	@@&				= "NPCProxyOnSoulTrappedReaction"
	@@&				= "SetSpawnPointReaction"
	@@&				= "OnLandedHardReaction"
	# NOTE: Keep in sync with base NPC and shopkeeper reactions
	@@&				= "SleepingSquidmanOnSpawnedReaction"
	@@&				= "SleepingSquidmanOnWokenReaction"
	@@&				= "SleepingSquidmanOnRiseAnimFinishedReaction"
	@@&				= "SleepingSquidmanOnSnoreReaction"

	[SleepingSquidmanOnSpawnedReaction]
	Rule		= "OnSpawnedRule"
	NumActions	= &
	@ Action
	@@&			= "CommonAIPauseBT"
	@@&			= "CommonAIPauseAIMotion"
	@@&			= "PlaySleepingAnim"

		[PlaySleepingAnim]
		ActionType	= "EldPlayAnim"
		Animation	= "Sleeping"
		Loop		= true

	[SleepingSquidmanOnSnoreReaction]
	Rule		= "OnSnoreRule"
	NumActions	= &
	@ Action
	@@&			= "PlaySquidmanSleepingVO"

		[OnSnoreRule]
		Event			= "OnSnore"
		NumConditions	= &
		@ Condition
		@@&				= "SnoreChancePE"

			[SnoreChancePE]
			PEType		= "RandomBool"
			Probability	= 0.2

		[PlaySquidmanSleepingVO]
		ActionType		= "SendEvent"
		EventName		= "PlayBark"
		Recipient		= "SelfPE"
		NumParameters	= &
		@ Parameter
		@@&Name			= "Sound"
		@@^Value		= "SquidmanSleepingVOPE"
		@@&Name			= "Category"
		@@^Value		= "VOPE"

			[SquidmanSleepingVOPE]
			PEType	= "ConstantString"
			Value	= "VO_Squidman_Sleeping"

	[SleepingSquidmanOnWokenReaction]
	Rule		= "OnWokenRule"
	NumActions	= &
	@ Action
	@@&			= "PlayRiseAnim"
	@@&			= "CommonAIPlaySearchVO"

		[OnWokenRule]
		Event	= "OnWoken"

		[PlayRiseAnim]
		ActionType	= "EldPlayAnim"
		Animation	= "Rise"

		[CommonAIPlaySearchVO]
		ActionType		= "SendEvent"
		EventName		= "PlayBark"
		Recipient		= "SelfPE"
		NumParameters	= &
		@ Parameter
		@@&Name			= "Sound"
		@@^Value		= "SearchBarkLookupPE"
		@@&Name			= "Category"
		@@^Value		= "VOPE"

	[SleepingSquidmanOnRiseAnimFinishedReaction]
	Rule		= "OnRiseAnimFinishedRule"
	NumActions	= &
	@ Action
	@@&			= "CommonAIUnpauseAIMotion"
	@@&			= "CommonAIUnpauseBT"

		[OnRiseAnimFinishedRule]
		Event	= "OnRiseAnimFinished"

[SquidmanShopkeeper]
Extends				= "Squidman"
EldDamager			= "ShopkeeperDamager"
EldMesh				= "SquidmanShopkeeperMesh"
EldHealth			= "SquidmanShopkeeperHealth"
EldFrobbable		= "ShopkeeperFrobbable"
EldSensorTheft		= "."
EldFaction			= "Faction_Shopkeeper"
EldRespawner		= ""	# Shopkeepers don't respawn!
EldAIMotion			= "ShopkeeperAIMotion"
RodinBehaviorTree	= "ShopkeeperBehaviorTree"
Reactions			= "ShopkeeperReactions"
StatMod				= "ShopkeeperStatMod"
PEMap				= "SquidmanShopkeeperPEMap"

	[ShopkeeperFrobbable]
	ExtentsX		= 0.5
	ExtentsY		= 0.5
	ExtentsZ		= 1.0
	OffsetZ			= 0.0
	IsFrobbable		= true
	FriendlyName	= "Shopkeeper"
	FrobVerb		= "Talk"
	HoldVerb		= "EatCorpse"

	[SquidmanShopkeeperMesh]
	Extends	= "SquidmanMesh"
	Mesh	= "Meshes/squidman-shopkeeper.cms"

	[SquidmanShopkeeperHealth]
	Extends	= "SquidmanHealth"
	Health	= 30

	[ShopkeeperBehaviorTree]
	RootNode		= "CommonBT_Root"
	NumLookupNodes	= &
	@ LookupNode
	@@&Key			= "Behave"
	@@^Value		= "ShopkeeperBT_Behave"
	@@&Key			= "React"
	@@^Value		= "ProxyBT_React"
	@@&Key			= "PursueCombatTarget"
	@@^Value		= "ProxyBT_PursueCombatTarget"

	[SquidmanShopkeeperPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "IsEdible"
	@@^Def	= "TruePE"
	@@&Key	= "HypnotizeDuration"
	@@^Def	= "ShopkeeperHypnotizeDurationPE"
	@@&Key	= "MeleeAttackCooldownTime"
	@@^Def	= "ShopkeeperMeleeAttackCooldownTime"
	@@&Key	= "RangedAttackWarmupTime"
	@@^Def	= "ShopkeeperRangedAttackWarmupTimePE"
	@@&Key	= "MeleeImpulse"
	@@^Def	= "SquidmanMeleeImpulsePE"
	@@&Key	= "Projectile"
	@@^Def	= "LizardmanProjectilePE"
	@@&Key	= "MoneyBase"
	@@^Def	= "ShopkeeperMoneyBasePE"
	@@&Key	= "BulletsBase"
	@@^Def	= "ShopkeeperBulletsBasePE"
	@@&Key	= "PatrolBark"
	@@^Def	= "SquidmanPatrolBarkPE"
	@@&Key	= "SearchBark"
	@@^Def	= "SquidmanSearchBarkPE"
	@@&Key	= "CombatBark"
	@@^Def	= "SquidmanCombatBarkPE"
	@@&Key	= "AttackBark"
	@@^Def	= "SquidmanAttackBarkPE"
	@@&Key	= "DamagedBark"
	@@^Def	= "SquidmanDamagedBarkPE"
	@@&Key	= "TalkBook"
	@@^Def	= "SquidmanShopkeeperTalkBookSelectorPE"

		[SquidmanShopkeeperTalkBookSelectorPE]
		PEType			= "Selector"
		NumSelections	= &
		@ Selection
		@@&Condition	= "ShouldShowFriendlySquidmanTalkBookPE"
		@@^Value		= "SquidmanShopkeeperFriendlyTalkBookPE"
		@@&Condition	= "TruePE"
		@@^Value		= "SquidmanShopkeeperTalkBookPE"

			[ShouldShowFriendlySquidmanTalkBookPE]
			PEType		= "StatMod"
			EntityPE	= "PlayerPE"
			StatName	= "HasSoapstone"
			Input		= "FloatZeroPE"

			[SquidmanShopkeeperFriendlyTalkBookPE]
			PEType	= "ConstantString"
			Value	= "SquidmanFriendlyShopkeeperTalk"

			[SquidmanShopkeeperTalkBookPE]
			PEType	= "ConstantString"
			Value	= "SquidmanShopkeeperTalk"

[Squidman]
Extends				= "NPCProxy"
EldDamager			= "SquidmanDamager"
EldMesh				= "SquidmanMesh"
EldDropShadow		= "SquidmanDropShadow"
EldCollision		= "SquidmanCollision"
EldHealth			= "SquidmanHealth"
EldAIMotion			= "SquidmanAIMotion"
EldHeadTracker		= "SquidmanHeadTracker"
EldSensorVision		= "SquidmanSensorVision"
PEMap				= "SquidmanPEMap"

	[SquidmanDamager]
	DamagerName	= "Squidman"

	[SquidmanMesh]
	Extends	= "NPCProxyMesh"
	Mesh	= "Meshes/squidman.cms"
	OffsetZ	= -1.4

	[SquidmanDropShadow]
	Extends				= "NPCProxyDropShadow"
	Radius				= 1.0
	VoxelCheckOffsetZ	= -1.0

	[SquidmanCollision]
	Extends			= "NPCProxyCollision"
	HalfExtentsXY	= 0.45
	HalfExtentsZ	= 1.4

	[SquidmanHealth]
	Extends				= "NPCProxyHealth"
	Health				= 8

	[SquidmanAIMotion]
	Extends				= "NPCProxyAIMotion"
	LandAcceleration	= 15.0
	TurnSpeed			= 120.0		# Degrees per second

	[SquidmanHeadTracker]
	Extends			= "NPCProxyHeadTracker"
	HeadOffsetY		= -0.04
	HeadOffsetZ		= 1.84		# Offset from mesh
	EyesOffsetY		= -0.04		# Not really! But this makes it work. Needs to be aligned with head offset, I guess.
	EyesOffsetZ		= 0.69		# Offset from transform, not mesh, because hurrr

	# NOTE: Currently the same as lizardman sensor.
	[SquidmanSensorVision]
	Extends	= "NPCProxySensorVision"
	EyeOffsetZ			= 0.72
	Radius				= 15.0
	ConeAngle			= 75.0	# Half angle
	CertaintyVelocity	= 0.85
	CertaintyDecay		= 0.15

	[SquidmanPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "IsEdible"
	@@^Def	= "TruePE"
	@@&Key	= "HypnotizeDuration"
	@@^Def	= "SquidmanHypnotizeDurationPE"
	@@&Key	= "MeleeAttackCooldownTime"
	@@^Def	= "NPCProxyMeleeAttackCooldownTime"
	@@&Key	= "RangedAttackWarmupTime"
	@@^Def	= "SquidmanRangedAttackWarmupTimePE"
	@@&Key	= "MeleeImpulse"
	@@^Def	= "SquidmanMeleeImpulsePE"
	@@&Key	= "Projectile"
	@@^Def	= "LizardmanProjectilePE"
	@@&Key	= "MoneyBase"
	@@^Def	= "NPCProxyMoneyBasePE"
	@@&Key	= "BulletsBase"
	@@^Def	= "NPCProxyBulletsBasePE"
	@@&Key	= "PatrolBark"
	@@^Def	= "SquidmanPatrolBarkPE"
	@@&Key	= "SearchBark"
	@@^Def	= "SquidmanSearchBarkPE"
	@@&Key	= "CombatBark"
	@@^Def	= "SquidmanCombatBarkPE"
	@@&Key	= "AttackBark"
	@@^Def	= "SquidmanAttackBarkPE"
	@@&Key	= "DamagedBark"
	@@^Def	= "SquidmanDamagedBarkPE"

		[SquidmanHypnotizeDurationPE]
		PEType	= "ConstantFloat"
		Value	= 5.0

		[SquidmanRangedAttackWarmupTimePE]
		PEType	= "RandomFloat"
		ValueA	= 0.5
		ValueB	= 1.0

		[SquidmanMeleeImpulsePE]
		PEType	= "ConstantFloat"
		Value	= 15.0

		[SquidmanPatrolBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Squidman_Ambient"

		[SquidmanSearchBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Squidman_Search"
		
		[SquidmanCombatBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Squidman_Combat"
		
		[SquidmanAttackBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Squidman_Attack"

		[SquidmanDamagedBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Squidman_Damaged"

[LizardmanShopkeeper]
Extends				= "Lizardman"
EldDamager			= "ShopkeeperDamager"
EldMesh				= "LizardmanShopkeeperMesh"
EldHealth			= "LizardmanShopkeeperHealth"
EldFrobbable		= "ShopkeeperFrobbable"
EldSensorTheft		= "."
EldFaction			= "Faction_Shopkeeper"
EldRespawner		= ""	# Shopkeepers don't respawn!
EldAIMotion			= "ShopkeeperAIMotion"
RodinBehaviorTree	= "ShopkeeperBehaviorTree"
Reactions			= "ShopkeeperReactions"
StatMod				= "ShopkeeperStatMod"
PEMap				= "LizardmanShopkeeperPEMap"

	[LizardmanShopkeeperMesh]
	Extends	= "LizardmanMesh"
	Mesh	= "Meshes/lizardman-shopkeeper.cms"

	[LizardmanShopkeeperHealth]
	Extends	= "LizardmanHealth"
	Health	= 25

	[LizardmanShopkeeperPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "IsEdible"
	@@^Def	= "TruePE"
	@@&Key	= "HypnotizeDuration"
	@@^Def	= "ShopkeeperHypnotizeDurationPE"
	@@&Key	= "MeleeAttackCooldownTime"
	@@^Def	= "ShopkeeperMeleeAttackCooldownTime"
	@@&Key	= "RangedAttackWarmupTime"
	@@^Def	= "ShopkeeperRangedAttackWarmupTimePE"
	@@&Key	= "CanDodge"
	@@^Def	= "TruePE"
	@@&Key	= "MeleeImpulse"
	@@^Def	= "NPCProxyMeleeImpulsePE"
	@@&Key	= "Projectile"
	@@^Def	= "LizardmanProjectilePE"
	@@&Key	= "MoneyBase"
	@@^Def	= "ShopkeeperMoneyBasePE"
	@@&Key	= "BulletsBase"
	@@^Def	= "ShopkeeperBulletsBasePE"
	@@&Key	= "PatrolBark"
	@@^Def	= "LizardmanPatrolBarkPE"
	@@&Key	= "SearchBark"
	@@^Def	= "LizardmanSearchBarkPE"
	@@&Key	= "CombatBark"
	@@^Def	= "LizardmanCombatBarkPE"
	@@&Key	= "AttackBark"
	@@^Def	= "LizardmanAttackBarkPE"
	@@&Key	= "DamagedBark"
	@@^Def	= "LizardmanDamagedBarkPE"
	@@&Key	= "TalkBook"
	@@^Def	= "LizardmanShopkeeperTalkBookPE"

		[LizardmanShopkeeperTalkBookPE]
		PEType	= "ConstantString"
		Value	= "LizardmanShopkeeperTalk"

[Lizardman]
Extends				= "NPCProxy"
EldDamager			= "LizardmanDamager"
EldMesh				= "LizardmanMesh"
EldCollision		= "LizardmanCollision"
EldHealth			= "LizardmanHealth"
EldHeadTracker		= "LizardmanHeadTracker"
EldSensorVision		= "LizardmanSensorVision"
PEMap				= "LizardmanPEMap"

	[LizardmanDamager]
	DamagerName	= "Lizardman"

	[LizardmanMesh]
	Extends	= "NPCProxyMesh"
	Mesh	= "Meshes/lizardman.cms"
	OffsetZ	= -0.95

	[LizardmanCollision]
	Extends			= "NPCProxyCollision"
	HalfExtentsXY	= 0.45
	HalfExtentsZ	= 0.95

	[LizardmanHealth]
	Extends				= "NPCProxyHealth"
	Health				= 5

	[LizardmanHeadTracker]
	Extends			= "NPCProxyHeadTracker"
	HeadOffsetY		= -0.06
	HeadOffsetZ		= 1.76		# Offset from mesh
	EyesOffsetY		= -0.06		# Not really! But this makes it work. Needs to be aligned with head offset, I guess.
	EyesOffsetZ		= 0.81		# Offset from transform, not mesh, because hurrr

	[LizardmanSensorVision]
	Extends	= "NPCProxySensorVision"
	EyeOffsetZ			= 0.72
	Radius				= 15.0
	ConeAngle			= 75.0	# Half angle
	CertaintyVelocity	= 0.85
	CertaintyDecay		= 0.15

	[LizardmanPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "IsEdible"
	@@^Def	= "TruePE"
	@@&Key	= "HypnotizeDuration"
	@@^Def	= "LizardmanHypnotizeDurationPE"
	@@&Key	= "MeleeAttackCooldownTime"
	@@^Def	= "NPCProxyMeleeAttackCooldownTime"
	@@&Key	= "RangedAttackWarmupTime"
	@@^Def	= "LizardmanRangedAttackWarmupTimePE"
	@@&Key	= "CanDodge"
	@@^Def	= "TruePE"
	@@&Key	= "MeleeImpulse"
	@@^Def	= "NPCProxyMeleeImpulsePE"
	@@&Key	= "Projectile"
	@@^Def	= "LizardmanProjectilePE"
	@@&Key	= "MoneyBase"
	@@^Def	= "NPCProxyMoneyBasePE"
	@@&Key	= "BulletsBase"
	@@^Def	= "NPCProxyBulletsBasePE"
	@@&Key	= "PatrolBark"
	@@^Def	= "LizardmanPatrolBarkPE"
	@@&Key	= "SearchBark"
	@@^Def	= "LizardmanSearchBarkPE"
	@@&Key	= "CombatBark"
	@@^Def	= "LizardmanCombatBarkPE"
	@@&Key	= "AttackBark"
	@@^Def	= "LizardmanAttackBarkPE"
	@@&Key	= "DamagedBark"
	@@^Def	= "LizardmanDamagedBarkPE"

		[LizardmanHypnotizeDurationPE]
		PEType	= "ConstantFloat"
		Value	= 8.0

		[LizardmanRangedAttackWarmupTimePE]
		PEType	= "RandomFloat"
		ValueA	= 0.6
		ValueB	= 1.2

		[LizardmanProjectilePE]
		PEType	= "ConstantString"
		Value	= "LizardmanProjectile"

		[LizardmanPatrolBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Lizardman_Ambient"

		[LizardmanSearchBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Lizardman_Search"
		
		[LizardmanCombatBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Lizardman_Combat"
		
		[LizardmanAttackBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Lizardman_Attack"

		[LizardmanDamagedBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Lizardman_Damaged"

[Mummy]
#ShouldDebugRender	= true
Extends				= "NPCProxy"
EldDamager			= "MummyDamager"
EldMesh				= "MummyMesh"
EldDropShadow		= "MummyDropShadow"
EldCollision		= "MummyCollision"
EldFrobbable		= ""
EldRespawner		= ""
EldAIMotion			= "MummyAIMotion"
EldHealth			= "MummyHealth"
EldHeadTracker		= "MummyHeadTracker"
RodinBehaviorTree	= "MummyBehaviorTree"
PEMap				= "MummyPEMap"
Reactions			= "MummyReactions"

	[MummyDamager]
	DamagerName	= "Mummy"

	[MummyMesh]
	Extends				= "NPCProxyMesh"
	Mesh				= "Meshes/mummy.cms"
	MaterialOverride	= "Material_EntityAnimatedAlphaTest"
	OffsetZ				= -1.45

	[MummyDropShadow]
	Extends				= "NPCProxyDropShadow"
	Radius				= 0.75
	VoxelCheckOffsetZ	= -1.0

	[MummyCollision]
	Extends			= "NPCProxyCollision"
	HalfExtentsXY	= 0.45
	HalfExtentsZ	= 1.45

	[MummyAIMotion]
	Extends				= "NPCProxyAIMotion"
	LandAcceleration	= 24.0
	TurnSpeed			= 120.0		# Degrees per second

	[MummyHealth]
	Extends				= "NPCProxyHealth"
	Health				= 2

	[MummyHeadTracker]
	Extends			= "NPCProxyHeadTracker"
	HeadOffsetY		= -0.04
	HeadOffsetZ		= 2.38		# Offset from mesh
	EyesOffsetY		= -0.04		# Not really! But this makes it work. Needs to be aligned with head offset, I guess.
	EyesOffsetZ		= 1.2		# Offset from transform, not mesh, because hurrr

	[MummyBehaviorTree]
	RootNode		= "CommonBT_Root"
	NumLookupNodes	= &
	@ LookupNode
	@@&Key			= "Behave"
	@@^Value		= "MummyBT_Behave"
	@@&Key			= "React"
	@@^Value		= "ProxyBT_React"
	@@&Key			= "PursueCombatTarget"
	@@^Value		= "ProxyBT_PursueCombatTarget"

	[MummyPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "HypnotizeDuration"
	@@^Def	= "MummyHypnotizeDurationPE"
	@@&Key	= "MeleeImpulse"
	@@^Def	= "NPCProxyMeleeImpulsePE"
	@@&Key	= "PatrolBark"
	@@^Def	= "MummyPatrolBarkPE"
	@@&Key	= "SearchBark"
	@@^Def	= "MummySearchBarkPE"
	@@&Key	= "CombatBark"
	@@^Def	= "MummyCombatBarkPE"
	@@&Key	= "AttackBark"
	@@^Def	= "MummyAttackBarkPE"
	@@&Key	= "DamagedBark"
	@@^Def	= "MummyDamagedBarkPE"
	@@&Key	= "ReviveBark"
	@@^Def	= "MummyReviveBarkPE"

		[MummyHypnotizeDurationPE]
		PEType	= "ConstantFloat"
		Value	= 8.0

		[MummyPatrolBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Mummy_Ambient"

		[MummySearchBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Mummy_Search"
		
		[MummyCombatBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Mummy_Combat"
		
		[MummyAttackBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Mummy_Attack"

		[MummyDamagedBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Mummy_Damaged"

		# Since they're all the same, really, just
		# repurpose search as revive
		[MummyReviveBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Mummy_Search"

	[MummyReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "NPCProxyOnSetHardModeReaction"
	@@&				= "NPCProxyOnInitializedQueuedHardModeReaction"
	@@&				= "MummyMeleeConeCheckReaction"
	@@&				= "NPCProxyOnHypnotizedReaction"
	@@&				= "NPCProxyOnEndHypnotizedReaction"
	@@&				= "NPCProxyOnSoulTrappedReaction"
	@@&				= "OnLandedHardReaction"
	@@&				= "NPCProxyDamagedReaction"
	@@&				= "MummyDeathReaction"
	@@&				= "MummyOnRevivedReaction"
	@@&				= "MummyOnReviveAnimFinishedReaction"

		[MummyMeleeConeCheckReaction]
		Rule		= "MeleeConeCheckRule"
		NumActions	= &
		@ Action
		@@&			= "MummyMeleeDealDamage"
		@@&			= "MeleeApplyImpulse"

			[MummyMeleeDealDamage]
			ActionType		= "SendEvent"
			EventName		= "TakeDamage"
			Recipient		= "CheckedPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "DamageAmount"
			@@^Value		= "MummyDamagePE"
			@@&Name			= "Damager"
			@@^Value		= "SelfPE"
			@@&Name			= "DamageType"
			@@^Value		= "BluntDamageTypePE"

				[MummyDamagePE]
				PEType	= "ConstantInt"
				Value	= 2

		[MummyDeathReaction]
		Rule		= "OnDiedRule"
		NumActions	= &
		@ Action
		@@&			= "CommonAIDeathActions"
		@@&			= "QueueOnRevivedAction"

			[QueueOnRevivedAction]
			ActionType		= "SendEvent"
			EventName		= "OnRevived"
			Recipient		= "SelfPE"
			QueueEvent		= true
			DispatchDelay	= 4.0

		[MummyOnRevivedReaction]
		Rule		= "OnRevivedRule"
		NumActions	= &
		@ Action
		@@&			= "CommonAIPlayReviveVO"
		@@&			= "CommonAIPlayReviveAnim"

			[CommonAIPlayReviveVO]
			ActionType		= "SendEvent"
			EventName		= "PlayBark"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "ReviveBarkLookupPE"
			@@&Name			= "Category"
			@@^Value		= "VOPE"

				[ReviveBarkLookupPE]
				PEType	= "Lookup"
				Key		= "ReviveBark"

			[CommonAIPlayReviveAnim]
			ActionType	= "EldPlayAnim"
			Animation	= "Revive"

		[MummyOnReviveAnimFinishedReaction]
		Rule		= "OnReviveAnimFinishedRule"
		NumActions	= &
		@ Action
		@@&			= "CommonAIReviveActions"

			[OnReviveAnimFinishedRule]
			Event	= "OnReviveAnimFinished"

			[CommonAIReviveActions]
			ActionType	= "Composite"
			NumActions	= &
			@ Action
			@@&			= "RestoreDefaultHealth"
			@@&			= "CommonAIUnpauseBT"
			@@&			= "CommonAIUnpauseAIMotion"
			@@&			= "StartTouchingAction"
			@@&			= "BecomeNonFrobbable"

				[CommonAIUnpauseBT]
				ActionType	= "SendEvent"
				EventName	= "UnpauseBT"
				Recipient	= "SelfPE"
				
				[CommonAIUnpauseAIMotion]
				ActionType	= "SendEvent"
				EventName	= "UnpauseAIMotion"
				Recipient	= "SelfPE"

[Cultist]
#ShouldDebugRender = true
Extends				= "NPCProxy"
EldDamager			= "CultistDamager"
EldMesh				= "CultistMesh"
EldCollision		= "CultistCollision"
EldHeadTracker		= "CultistHeadTracker"
PEMap				= "CultistPEMap"

	[CultistDamager]
	DamagerName	= "NCultist"

	[CultistMesh]
	Extends	= "NPCProxyMesh"
	Mesh	= "Meshes/cultist.cms"
	OffsetZ	= -0.9

	[CultistCollision]
	Extends			= "NPCProxyCollision"
	HalfExtentsXY	= 0.4
	HalfExtentsZ	= 0.9

	[CultistHeadTracker]
	Extends			= "NPCProxyHeadTracker"
	HeadOffsetY		= -0.06
	HeadOffsetZ		= 1.391		# Offset from mesh
	EyesOffsetY		= -0.06		# Not really! But this makes it work. Needs to be aligned with head offset, I guess.
	EyesOffsetZ		= 0.55		# Offset from transform, not mesh, because hurrr

	[CultistPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "IsEdible"
	@@^Def	= "FalsePE"
	@@&Key	= "HypnotizeDuration"
	@@^Def	= "FloatBigNumberPE"
	@@&Key	= "MeleeAttackCooldownTime"
	@@^Def	= "NPCProxyMeleeAttackCooldownTime"
	@@&Key	= "RangedAttackWarmupTime"
	@@^Def	= "NPCProxyRangedAttackWarmupTimePE"
	@@&Key	= "MeleeImpulse"
	@@^Def	= "NPCProxyMeleeImpulsePE"
	@@&Key	= "Projectile"
	@@^Def	= "ProjectileSelectorPE"
	@@&Key	= "MoneyBase"
	@@^Def	= "NPCProxyMoneyBasePE"
	@@&Key	= "BulletsBase"
	@@^Def	= "NPCProxyBulletsBasePE"
	@@&Key	= "PatrolBark"
	@@^Def	= "CultistPatrolBarkPE"
	@@&Key	= "SearchBark"
	@@^Def	= "CultistSearchBarkPE"
	@@&Key	= "CombatBark"
	@@^Def	= "CultistCombatBarkPE"
	@@&Key	= "AttackBark"
	@@^Def	= "CultistAttackBarkPE"
	@@&Key	= "DamagedBark"
	@@^Def	= "CultistDamagedBarkPE"

		[CultistPatrolBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Cultist_Ambient"

		[CultistSearchBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Cultist_Search"
		
		[CultistCombatBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Cultist_Combat"
		
		[CultistAttackBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Cultist_Attack"

		[CultistDamagedBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Cultist_Damaged"
		
[CultistWater]
Extends		= "Cultist"
EldDamager	= "CultistWaterDamager"
EldMesh		= "CultistWaterMesh"

	[CultistWaterDamager]
	DamagerName	= "DCultist"

	[CultistWaterMesh]
	Extends				= "CultistMesh"
	TextureOverride	= "Textures/cultist-water_NODXT.tga"

[CultistSwamp]
Extends		= "Cultist"
EldDamager	= "CultistSwampDamager"
EldMesh		= "CultistSwampMesh"

	[CultistSwampDamager]
	DamagerName	= "RCultist"

	[CultistSwampMesh]
	Extends				= "CultistMesh"
	TextureOverride	= "Textures/cultist-swamp_NODXT.tga"

[CultistYog1]
Extends		= "Cultist"
EldDamager	= "CultistYogDamager"
EldMesh		= "CultistYog1Mesh"
EldFaction	= "Faction_Bug"

	[CultistYogDamager]
	DamagerName	= "YCultist"

	[CultistYog1Mesh]
	Extends			= "CultistMesh"
	TextureOverride	= "Textures/cultist-yog-1_NODXT.tga"

[CultistYog2]
Extends		= "Cultist"
EldDamager	= "CultistYogDamager"
EldMesh		= "CultistYog2Mesh"
EldFaction	= "Faction_Bug"

	[CultistYog2Mesh]
	Extends			= "CultistMesh"
	TextureOverride	= "Textures/cultist-yog-2_NODXT.tga"

[CultistAzathoth]
Extends		= "Cultist"
EldDamager	= "CultistAzathothDamager"
EldMesh		= "CultistAzathothMesh"

	[CultistAzathothDamager]
	DamagerName	= "ACultist"

	[CultistAzathothMesh]
	Extends			= "CultistMesh"
	TextureOverride	= "Textures/cultist-yog-1_NODXT.tga"

[CultistHalloween]
Extends		= "Cultist"
EldDamager	= "CultistHalloween_Damager"
EldMesh		= "CultistHalloween_Mesh"

	[CultistHalloween_Damager]
	DamagerName	= "HCultist"

	[CultistHalloween_Mesh]
	Extends			= "CultistMesh"
	Mesh			= "Meshes/cultist-jack.cms"
	TextureOverride	= "Textures/cultist-hal_NODXT.tga"

[FrogmanShopkeeper]
Extends				= "Fishman"
EldDamager			= "ShopkeeperDamager"
EldMesh				= "FrogmanShopkeeperMesh"
EldHealth			= "FrogmanShopkeeperHealth"
EldFrobbable		= "ShopkeeperFrobbable"
EldSensorTheft		= "."
EldFaction			= "Faction_Shopkeeper"
EldRespawner		= ""	# Shopkeepers don't respawn!
EldAIMotion			= "ShopkeeperAIMotion"
RodinBehaviorTree	= "FishmanShopkeeperBehaviorTree"
Reactions			= "ShopkeeperReactions"
StatMod				= "ShopkeeperStatMod"
PEMap				= "ShopkeeperPEMap"

	[ShopkeeperDamager]
	DamagerName	= "Shopkeeper"

	[FrogmanShopkeeperMesh]
	Extends				= "NPCProxyMesh"
	TextureOverride	= "Textures/frogman-shop_NODXT.tga"

	[FrogmanShopkeeperHealth]
	Extends				= "NPCProxyHealth"
	Health				= 20

	[Faction_Shopkeeper]
	Faction		= "Shopkeeper"

	[ShopkeeperAIMotion]
	Extends			= "NPCProxyAIMotion"
	TurnSpeed		= 540.0
	CanUnlockDoors	= true

	[ShopkeeperStatMod]
	NumModifiers = &
	@ Modifier
	@@& = "ShopkeeperRunning_Acceleration"
	@@& = "ShopkeeperRunning_SpeedLimit"
	@@& = "ShopkeeperRunning_WalkAnimRate"
	@@& = "NPCProxyPatrolling_Acceleration"
	@@& = "NPCProxyPatrolling_SpeedLimit"
	@@& = "NPCProxyPatrolling_WalkAnimRate"
	@@& = "NPCProxyHardMode_Acceleration"
	@@& = "NPCProxyHardMode_SpeedLimit"

		[ShopkeeperRunning_Acceleration]
		Event		= "Running"
		Stat		= "LandAcceleration"
		Function	= "Multiply"
		Value		= 2.5

		[ShopkeeperRunning_SpeedLimit]
		Event		= "Running"
		Stat		= "SpeedLimit"
		Function	= "Multiply"
		Value		= 2.5

		[ShopkeeperRunning_WalkAnimRate]
		Event		= "Running"
		Stat		= "WalkAnimRate"
		Function	= "Multiply"
		Value		= 1.5

	[FishmanShopkeeperBehaviorTree]
	RootNode		= "CommonBT_Root"
	NumLookupNodes	= &
	@ LookupNode
	@@&Key			= "Behave"
	@@^Value		= "FishmanShopkeeperBT_Behave"
	@@&Key			= "React"
	@@^Value		= "ProxyBT_React"
	@@&Key			= "PursueCombatTarget"
	@@^Value		= "ProxyBT_PursueCombatTarget"

	[ShopkeeperPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "IsEdible"
	@@^Def	= "TruePE"
	@@&Key	= "HypnotizeDuration"
	@@^Def	= "ShopkeeperHypnotizeDurationPE"
	@@&Key	= "MeleeAttackCooldownTime"
	@@^Def	= "ShopkeeperMeleeAttackCooldownTime"
	@@&Key	= "RangedAttackWarmupTime"
	@@^Def	= "ShopkeeperRangedAttackWarmupTimePE"
	@@&Key	= "MeleeImpulse"
	@@^Def	= "NPCProxyMeleeImpulsePE"
	@@&Key	= "Projectile"
	@@^Def	= "ProjectileSelectorPE"
	@@&Key	= "MoneyBase"
	@@^Def	= "ShopkeeperMoneyBasePE"
	@@&Key	= "BulletsBase"
	@@^Def	= "ShopkeeperBulletsBasePE"
	@@&Key	= "PatrolBark"
	@@^Def	= "NPCProxyPatrolBarkPE"
	@@&Key	= "SearchBark"
	@@^Def	= "NPCProxySearchBarkPE"
	@@&Key	= "CombatBark"
	@@^Def	= "NPCProxyCombatBarkPE"
	@@&Key	= "AttackBark"
	@@^Def	= "NPCProxyAttackBarkPE"
	@@&Key	= "DamagedBark"
	@@^Def	= "NPCProxyDamagedBarkPE"
	@@&Key	= "TalkBook"
	@@^Def	= "FishmanShopkeeperTalkBookPE"

		[FishmanShopkeeperTalkBookPE]
		PEType	= "ConstantString"
		Value	= "FishmanShopkeeperTalk"

		[ShopkeeperHypnotizeDurationPE]
		PEType	= "ConstantFloat"
		Value	= 2.0

		[ShopkeeperMeleeAttackCooldownTime]
		PEType	= "RandomFloat"
		ValueA	= 0.1
		ValueB	= 0.2

		[ShopkeeperRangedAttackWarmupTimePE]
		PEType	= "RandomFloat"
		ValueA	= 0.4
		ValueB	= 0.8

		[ShopkeeperMoneyBasePE]
		PEType	= "EldHardSwitch"
		Normal	= "ShopkeeperMoneyBaseNormalPE"
		Hard	= "ShopkeeperMoneyBaseHardPE"

			[ShopkeeperMoneyBaseNormalPE]
			PEType	= "RandomInt"
			ValueA	= 10
			ValueB	= 20

			[ShopkeeperMoneyBaseHardPE]
			PEType	= "RandomInt"
			ValueA	= 5
			ValueB	= 10

		[ShopkeeperBulletsBasePE]
		PEType	= "EldHardSwitch"
		Normal	= "ShopkeeperBulletsBaseNormalPE"
		Hard	= "ShopkeeperBulletsBaseHardPE"

			[ShopkeeperBulletsBaseNormalPE]
			PEType	= "RandomInt"
			ValueA	= 4
			ValueB	= 8

			[ShopkeeperBulletsBaseHardPE]
			PEType	= "RandomInt"
			ValueA	= 2
			ValueB	= 4

	[ShopkeeperReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "NPCProxyOnSetHardModeReaction"
	@@&				= "NPCProxyOnInitializedQueuedHardModeReaction"
	@@&				= "ShopkeeperOnTheftSensedReaction"
	@@&				= "ShopkeeperDeathReaction"
	@@&				= "ShopkeeperOnFrobbedAndAliveReaction"
	@@&				= "NPCProxyOnFrobbedReaction"
	@@&				= "NPCProxyOnFrobbedHeldReaction"
	@@&				= "EdibleOnBecameFrobTargetReaction"
	@@&				= "NPCProxyDamagedReaction"
	@@&				= "NPCProxyProjectileFireReaction"
	@@&				= "NPCProxyMeleeConeCheckReaction"
	@@&				= "NPCProxyOnHypnotizedReaction"
	@@&				= "NPCProxyOnEndHypnotizedReaction"
	@@&				= "NPCProxyOnSoulTrappedReaction"
	@@&				= "SetSpawnPointReaction"
	@@&				= "OnLandedHardReaction"
	# NOTE: Keep in sync with base NPC and SleepingSquidman reactions

		[ShopkeeperOnTheftSensedReaction]
		Rule		= "OnTheftSensedRule"
		NumActions	= &
		@ Action
		@@&			= "SendShopkeeperDiedNotification"	# HACK: Shopkeeper isn't dead, but this immediately removes the buy/steal option.

			[OnTheftSensedRule]
			Event	= "OnTheftSensed"

		[ShopkeeperOnFrobbedAndAliveReaction]
		Rule		= "OnFrobbedAndAliveRule"
		NumActions	= &
		@ Action
		@@&			= "Conditional_Award_ACH_Friends"
		@@&			= "ShopkeeperTalkAction"

			[OnFrobbedAndAliveRule]
			Event	= "OnFrobbed"
			NumCriteria	= &
			@ Criterion
			@@&Name		= "IsAlive"
			@@^Min		= "TruePE"

			[Conditional_Award_ACH_Friends]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "IsFriendsPE"
			@@^Action		= "Award_ACH_Friends"

				[IsFriendsPE]
				PEType	= "Conditional"
				Op		= "E"
				InputA	= "ShopkeeperBookPE"
				InputB	= "SquidmanShopkeeperFriendlyTalkBookPE"

				[Award_ACH_Friends]
				ActionType		= "NeonAwardAchievement"
				AchievementTag	= ""

			[ShopkeeperTalkAction]
			ActionType		= "EldShowBook"
			BookStringPE	= "ShopkeeperBookPE"

				[ShopkeeperBookPE]
				PEType	= "Lookup"
				Key		= "TalkBook"

		[ShopkeeperDeathReaction]
		Rule		= "OnDiedRule"
		NumActions	= &
		@ Action
		@@&			= "ShopkeeperAIDeathActions"
		@@&			= "CommonAIDeathActions"
		@@&			= "SendShopkeeperDiedNotification"

			[ShopkeeperAIDeathActions]
			ActionType	= "Composite"
			NumActions	= &
			@ Action
			@@&			= "SetCorpseFrobName"
			@@&			= "SetCorpseFrobVerb"
			@@&			= "SetCorpseFrobExtents"
			@@&			= "SetCorpseFrobOffsetZ"

				[SetCorpseFrobName]
				ActionType		= "SendEvent"
				EventName		= "SetFriendlyName"
				Recipient		= "SelfPE"
				NumParameters	= &
				@ Parameter
				@@&Name			= "FriendlyName"
				@@^Value		= "CorpsePE"

					[CorpsePE]
					PEType	= "ConstantString"
					Value	= "Corpse"

				[SetCorpseFrobVerb]
				ActionType		= "SendEvent"
				EventName		= "SetFrobVerb"
				Recipient		= "SelfPE"
				NumParameters	= &
				@ Parameter
				@@&Name			= "FrobVerb"
				@@^Value		= "LootVerbPE"

					[LootVerbPE]
					PEType	= "ConstantString"
					Value	= "Loot"

				[SetCorpseFrobExtents]
				ActionType		= "SendEvent"
				EventName		= "SetBoundExtents"
				Recipient		= "SelfPE"
				NumParameters	= &
				@ Parameter
				@@&Name			= "BoundExtents"
				@@^Value		= "CorpseExtentsPE"

					[CorpseExtentsPE]
					PEType	= "ConstantVector"
					ValueX	= 1.0
					ValueY	= 1.0
					ValueZ	= 0.25

				[SetCorpseFrobOffsetZ]
				ActionType		= "SendEvent"
				EventName		= "SetBoundOffsetZ"
				Recipient		= "SelfPE"
				NumParameters	= &
				@ Parameter
				@@&Name			= "BoundOffsetZ"
				@@^Value		= "CorpseOffsetZPE"

					[CorpseOffsetZPE]
					PEType	= "ConstantFloat"
					Value	= -0.65

			[SendShopkeeperDiedNotification]
			ActionType	= "SendEvent"
			EventName	= "OnShopkeeperDied"

		[SetSpawnPointReaction]
		Rule		= "OnSpawnedQueuedRule"
		NumActions	= &
		@ Action
		@@&			= "SetSpawnPointAction"

			[OnSpawnedQueuedRule]
			Event	= "OnSpawnedQueued"

			[SetSpawnPointAction]
			ActionType		= "RodinBlackboardWrite"
			BlackboardKey	= "SpawnPoint"
			ValuePE			= "LocationPE"

[Polyp]
#ShouldDebugRender	= true
Extends				= "FlyingNPCProxy"
EldTransform		= "PolypTransform"
EldMesh				= "PolypMesh"
EldCollision		= "PolypCollision"
EldHealth			= "PolypHealth"
EldFrobbable		= "PolypFrobbable"
EldAIMotion			= "PolypAIMotion"
EldHeadTracker		= "PolypHeadTracker"
EldSensorHearing	= "NPCProxySensorHearing"
PEMap				= "PolypPEMap"

	[PolypTransform]
	SpeedLimit	= 0.5

	[PolypMesh]
	Mesh				= "Meshes/polyp.cms"
	OffsetZ				= -1.0
	MaterialOverride	= "Material_EntityAnimatedAlphaTest"

	[PolypCollision]
	HalfExtentsXY					= 0.45
	HalfExtentsZ					= 0.875
	BlocksTrace						= true
	FrictionTargetPercentVelocity	= 1.0	# No friction

	[PolypHealth]
	Health			= 10

	[PolypFrobbable]
	ExtentsX		= 0.625
	ExtentsY		= 0.625
	ExtentsZ		= 0.375
	OffsetZ			= -0.5
	IsFrobbable		= false
	FriendlyName	= "Corpse"
	FrobVerb		= "Loot"
	HoldVerb		= "EatCorpse"

	[PolypAIMotion]
	AirAcceleration			= 7.5
	TurnSpeed				= 180.0		# Degrees per second
	FollowValidateTime		= 1.0
	StepReachedThreshold	= 0.1
	TurnReachedThreshold	= 5.0		# Degrees
	IsFlying				= true
	MaxPathSteps			= 200
	IdleAnimation			= "Idle"
	WalkAnimation			= "Idle"
	AnimationResource		= "Anim"

	[PolypHeadTracker]
	HeadBoneName	= "Head"
	HeadOffsetX		= 0.125		# Asymmetrical mesh!
	HeadOffsetY		= 0.125
	HeadOffsetZ		= 0.625		# Offset from mesh
	EyesOffsetX		= 0.125		# Asymmetrical mesh!
	EyesOffsetY		= 0.125
	EyesOffsetZ		= -0.375	# Offset from transform, not mesh, because hurrr
	MaxRotation		= 45.0		# Degrees
	LookVelocity	= 270.0		# Degrees per second

	[PolypPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "IsEdible"
	@@^Def	= "TruePE"
	@@&Key	= "HypnotizeDuration"
	@@^Def	= "PolypHypnotizeDurationPE"
	@@&Key	= "RangedAttackWarmupTime"
	@@^Def	= "PolypRangedAttackWarmupTimePE"
	@@&Key	= "Projectile"
	@@^Def	= "LizardmanProjectilePE"
	@@&Key	= "MoneyBase"
	@@^Def	= "NPCProxyMoneyBasePE"
	@@&Key	= "BulletsBase"
	@@^Def	= "NPCProxyBulletsBasePE"
	@@&Key	= "PatrolBark"
	@@^Def	= "PolypPatrolBarkPE"
	@@&Key	= "SearchBark"
	@@^Def	= "PolypSearchBarkPE"
	@@&Key	= "CombatBark"
	@@^Def	= "PolypCombatBarkPE"
	@@&Key	= "AttackBark"
	@@^Def	= "PolypAttackBarkPE"
	@@&Key	= "DamagedBark"
	@@^Def	= "PolypDamagedBarkPE"

		[PolypHypnotizeDurationPE]
		PEType	= "ConstantFloat"
		Value	= 8.0

		[PolypRangedAttackWarmupTimePE]
		PEType	= "EldHardSwitch"
		Normal	= "PolypRangedAttackWarmupTimeNormalPE"
		Hard	= "PolypRangedAttackWarmupTimeHardPE"

			[PolypRangedAttackWarmupTimeNormalPE]
			PEType	= "RandomFloat"
			ValueA	= 0.5
			ValueB	= 1.0

			# NOTE: This is a *longer* warmup time,
			# because all warmup times are scaled by 1/3
			# in hard mode, which was overkill for polyps.
			[PolypRangedAttackWarmupTimeHardPE]
			PEType	= "RandomFloat"
			ValueA	= 0.75
			ValueB	= 1.5

		[PolypPatrolBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Polyp_Ambient"

		[PolypSearchBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Polyp_Search"

		[PolypCombatBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Polyp_Combat"

		[PolypAttackBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Polyp_Attack"

		[PolypDamagedBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Polyp_Damaged"

[MoMBug_NoRespawn]
Extends			= "MoMBug"
EldRespawner	= ""

[MoMBug]
Extends				= "Bug"
EldMesh				= "MoMBugMesh"
EldHealth			= "MoMBugHealth"

	[MoMBugMesh]
	Extends			= "BugMesh"
	TextureOverride	= "Textures/bug-mom_NODXT.tga"

	[MoMBugHealth]
	Health	= 3

[RedBug]
Extends				= "Bug"
EldMesh				= "RedBugMesh"
EldHealth			= "RedBugHealth"
RodinBehaviorTree	= "NPCProxyBT"

	[RedBugMesh]
	Extends				= "BugMesh"
	TextureOverride	= "Textures/bug-red_NODXT.tga"

	[RedBugHealth]
	Health	= 4

[BugSmall]
Extends			= "Bug"
EldMesh			= "BugSmallMesh"
EldDropShadow	= ""
EldCollision	= "BugSmallCollision"
EldFrobbable	= ""
EldHealth		= "BugSmallHealth"
EldAIMotion		= "BugSmallAIMotion"
Reactions		= "BugSmallReactions"

	[BugSmallMesh]
	Extends			= "BugMesh"
	Mesh			= "Meshes/bug-small.cms"
	TextureOverride	= "Textures/bug-small_NODXT.tga"

	[BugSmallCollision]
	Extends			= "BugCollision"
	HalfExtentsXY	= 0.1875

	[BugSmallHealth]
	Health	= 1

	[BugSmallAIMotion]
	Extends				= "BugAIMotion"
	LandAcceleration	= 18.0	# Slower than medium bugs, same as normal AIs

	# Pared down from NPCProxyReactions
	[BugSmallReactions]
	NumReactions = &
	@ Reaction
	@@&	= "NPCProxyOnSetHardModeReaction"
	@@&	= "NPCProxyOnInitializedQueuedHardModeReaction"
	@@& = "BugSmallDeathReaction"
	@@& = "NPCProxyDamagedReaction"
	@@& = "NPCProxyMeleeConeCheckReaction"
	@@&	= "NPCProxyOnHypnotizedReaction"
	@@&	= "NPCProxyOnEndHypnotizedReaction"
	@@&	= "OnLandedHardReaction"

		[BugSmallDeathReaction]
		Rule		= "OnDiedRule"
		NumActions	= &
		@ Action
		@@&			= "CommonAIDeathActions"
		@@&			= "BugSplitterQueueDestroySelf"

			[BugSplitterQueueDestroySelf]
			ActionType		= "SendEvent"
			EventName		= "Destroy"
			Recipient		= "SelfPE"
			QueueEvent		= true
			DispatchDelay	= 5.0	# same as the hide time after looting normal enemies

[BugMedium]
Extends			= "Bug"
EldMesh			= "BugMediumMesh"
EldFrobbable	= ""
Reactions		= "BugMediumReactions"

	[BugMediumMesh]
	Extends			= "BugMesh"
	TextureOverride	= "Textures/bug-medium_NODXT.tga"

	# Pared down from NPCProxyReactions
	[BugMediumReactions]
	NumReactions = &
	@ Reaction
	@@&	= "NPCProxyOnSetHardModeReaction"
	@@&	= "NPCProxyOnInitializedQueuedHardModeReaction"
	@@& = "BugMediumDeathReaction"
	@@& = "NPCProxyDamagedReaction"
	@@& = "NPCProxyMeleeConeCheckReaction"
	@@&	= "NPCProxyOnHypnotizedReaction"
	@@&	= "NPCProxyOnEndHypnotizedReaction"
	@@&	= "OnLandedHardReaction"
	@@&	= "OnSpawnBugSmallsReaction"

		[BugMediumDeathReaction]
		Rule		= "OnDiedRule"
		NumActions	= &
		@ Action
		@@&			= "CommonAIDeathActions"
		@@&			= "BugMediumQueueSmallSpawns"
		@@&			= "BugSplitterQueueDestroySelf"

			[BugMediumQueueSmallSpawns]
			ActionType		= "SendEvent"
			EventName		= "SpawnBugSmalls"
			Recipient		= "SelfPE"
			QueueEvent		= true
			DispatchDelay	= 1.0

		[OnSpawnBugSmallsReaction]
		Rule		= "OnSpawnBugSmallsRule"
		NumActions	= &
		@ Action
		@@&			= "SpawnBugSmallA"
		@@&			= "SpawnBugSmallB"

			[OnSpawnBugSmallsRule]
			Event	= "SpawnBugSmalls"

			[SpawnBugSmallA]
			ActionType			= "EldSpawnEntity"
			Entity				= "BugSmall"
			LocationOverridePE	= "BugSmallSpawnALocationPE"

				[BugSmallSpawnALocationPE]
				PEType	= "Add"
				InputA	= "LocationPE"
				InputB	= "BugSmallSpawnOffsetPE"

					[BugSmallSpawnOffsetPE]
					PEType	= "ConstantVector"
					ValueX	= 0.18
					ValueY	= 0.18

			[SpawnBugSmallB]
			ActionType			= "EldSpawnEntity"
			Entity				= "BugSmall"
			LocationOverridePE	= "BugSmallSpawnBLocationPE"

				[BugSmallSpawnBLocationPE]
				PEType	= "Sub"
				InputA	= "LocationPE"
				InputB	= "BugSmallSpawnOffsetPE"

[BugBig]
Extends			= "Bug"
EldMesh			= "BugBigMesh"
EldDropShadow	= "BugBigDropShadow"
EldCollision	= "BugBigCollision"
EldFrobbable	= "BugBigFrobbable"
EldHealth		= "BugBigHealth"
EldAIMotion		= "BugBigAIMotion"
Reactions		= "BugBigReactions"

	[BugBigMesh]
	Extends			= "BugMesh"
	Mesh			= "Meshes/bug-big.cms"
	TextureOverride	= "Textures/bug-big_NODXT.tga"

	[BugBigDropShadow]
	Extends	= "BugDropShadow"
	Radius	= 0.75
	Alpha	= 0.5

	[BugBigCollision]
	Extends			= "BugCollision"
	HalfExtentsXY	= 0.475

	[BugBigFrobbable]
	Extends		= "BugFrobbable"
	ExtentsX	= 0.75
	ExtentsY	= 0.75
	ExtentsZ	= 0.1875

	[BugBigHealth]
	Health	= 3

	[BugBigAIMotion]
	Extends				= "BugAIMotion"
	LandAcceleration	= 24.0	# Faster than medium bugs (which are faster than normal AIs)
	TurnSpeed			= 180.0	# Slower than medium bugs, same as normal AIs
	JumpImpulse			= 10.0
	CanJump				= true
	JumpAnimation		= "Jump"

	# Pared down from NPCProxyReactions
	[BugBigReactions]
	NumReactions = &
	@ Reaction
	@@&	= "NPCProxyOnSetHardModeReaction"
	@@&	= "NPCProxyOnInitializedQueuedHardModeReaction"
	@@& = "BugBigDeathReaction"
	@@& = "NPCProxyOnFrobbedReaction"
	@@&	= "NPCProxyOnFrobbedHeldReaction"
	@@&	= "EdibleOnBecameFrobTargetReaction"
	@@& = "NPCProxyDamagedReaction"
	@@& = "NPCProxyMeleeConeCheckReaction"
	@@&	= "NPCProxyOnHypnotizedReaction"
	@@&	= "NPCProxyOnEndHypnotizedReaction"
	@@&	= "NPCProxyOnSoulTrappedReaction"
	@@&	= "OnLandedHardReaction"
	@@&	= "OnSpawnBugMediumsReaction"

		[BugBigDeathReaction]
		Rule		= "OnDiedRule"
		NumActions	= &
		@ Action
		@@&			= "CommonAIDeathActions"
		@@&			= "BugBigQueueMediumSpawns"

			[BugBigQueueMediumSpawns]
			ActionType		= "SendEvent"
			EventName		= "SpawnBugMediums"
			Recipient		= "SelfPE"
			QueueEvent		= true
			DispatchDelay	= 1.0

		[OnSpawnBugMediumsReaction]
		Rule		= "OnSpawnBugMediumsRule"
		NumActions	= &
		@ Action
		@@&			= "SpawnBugMediumA"
		@@&			= "SpawnBugMediumB"

			[OnSpawnBugMediumsRule]
			Event	= "SpawnBugMediums"

			[SpawnBugMediumA]
			ActionType			= "EldSpawnEntity"
			Entity				= "BugMedium"
			LocationOverridePE	= "BugMediumSpawnALocationPE"

				[BugMediumSpawnALocationPE]
				PEType	= "Add"
				InputA	= "LocationPE"
				InputB	= "BugMediumSpawnOffsetPE"

					[BugMediumSpawnOffsetPE]
					PEType	= "ConstantVector"
					ValueX	= -0.37
					ValueY	= 0.37

			[SpawnBugMediumB]
			ActionType			= "EldSpawnEntity"
			Entity				= "BugMedium"
			LocationOverridePE	= "BugMediumSpawnBLocationPE"

				[BugMediumSpawnBLocationPE]
				PEType	= "Sub"
				InputA	= "LocationPE"
				InputB	= "BugMediumSpawnOffsetPE"

[Bug]
#ShouldDebugRender = true
Extends				= "NPCProxy"
EldDamager			= "BugDamager"
EldFaction			= "Faction_Bug"
EldMesh				= "BugMesh"
EldDropShadow		= "BugDropShadow"
EldCollision		= "BugCollision"
EldFrobbable		= "BugFrobbable"
EldHealth			= "BugHealth"
EldHeadTracker		= "BugHeadTracker"
EldAIMotion			= "BugAIMotion"
RodinBehaviorTree	= "BugBehaviorTree"
PEMap				= "BugPEMap"

	[BugDamager]
	DamagerName	= "Bug"

	[Faction_Bug]
	Faction = "Bug"

	[BugMesh]
	Extends	= "NPCProxyMesh"
	Mesh	= "Meshes/bug.cms"
	OffsetZ	= -0.1875

	[BugDropShadow]
	Extends	= "NPCProxyDropShadow"
	Radius	= 0.375
	Alpha	= 0.75	# Super dark shadow to help them pop

	[BugCollision]
	Extends			= "NPCProxyCollision"
	HalfExtentsXY	= 0.375
	HalfExtentsZ	= 0.1875	# Twice as big as bug appears

	[BugFrobbable]
	ExtentsX		= 0.375
	ExtentsY		= 0.375
	ExtentsZ		= 0.1
	IsFrobbable		= false
	FriendlyName	= "Corpse"
	FrobVerb		= "Loot"
	HoldVerb		= "EatCorpse"

	[BugHealth]
	Health	= 2

	[BugHeadTracker]
	Extends			= "NPCProxyHeadTracker"
	HeadOffsetY		= 0.137
	HeadOffsetZ		= 0.090		# Offset from mesh
	EyesOffsetY		= 0.137		# Not really! But this makes it work. Needs to be aligned with head offset, I guess.
	EyesOffsetZ		= -0.00375	# Offset from transform, not mesh, because hurrr

	[BugAIMotion]
	LandAcceleration		= 20.0
	AirAcceleration			= 10.0
	TurnSpeed				= 225.0		# Degrees per second
	FollowValidateTime		= 1.0
	StepReachedThreshold	= 0.1
	TurnReachedThreshold	= 5.0		# Degrees
	CanJump					= false
	CanOpenDoors			= false
	MaxPathSteps			= 200
	IdleAnimation			= "Idle"
	WalkAnimation			= "Walk"
	AnimationResource		= "Anim"

	[BugBehaviorTree]
	RootNode		= "CommonBT_Root"
	NumLookupNodes	= &
	@ LookupNode
	@@&Key			= "Behave"
	@@^Value		= "BugBT_Behave"
	@@&Key			= "React"
	@@^Value		= "ProxyBT_React"
	@@&Key			= "PursueCombatTarget"
	@@^Value		= "ProxyBT_PursueCombatTarget"

	[BugPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "IsEdible"
	@@^Def	= "TruePE"
	@@&Key	= "HypnotizeDuration"
	@@^Def	= "FloatBigNumberPE"
	@@&Key	= "MeleeAttackCooldownTime"
	@@^Def	= "BugMeleeAttackCooldownTime"
	@@&Key	= "RangedAttackWarmupTime"
	@@^Def	= "BugRangedAttackWarmupTimePE"
	@@&Key	= "MeleeImpulse"
	@@^Def	= "FloatZeroPE"
	@@&Key	= "Projectile"
	@@^Def	= "ProxyProjectilePE"
	@@&Key	= "MoneyBase"
	@@^Def	= "NPCProxyMoneyBasePE"
	@@&Key	= "BulletsBase"
	@@^Def	= "NPCProxyBulletsBasePE"

		[BugMeleeAttackCooldownTime]
		PEType	= "RandomFloat"
		ValueA	= 0.75
		ValueB	= 1.0

		[BugRangedAttackWarmupTimePE]
		PEType	= "RandomFloat"
		ValueA	= 0.7
		ValueB	= 1.4

[FlyingNPCProxy]
#ShouldDebugRender	= true
Extends				= "NPCProxy"
EldTransform		= "FlyingNPCProxyTransform"
EldMesh				= "FlyingNPCProxyMesh"
EldCollision		= "FlyingNPCProxyCollision"
EldFrobbable		= "FlyingNPCProxyFrobbable"
EldAIMotion			= "FlyingNPCProxyAIMotion"
EldHeadTracker		= "FlyingNPCProxyHeadTracker"
EldSensorVision		= "FlyingNPCProxySensorVision"
EldSensorHearing	= ""	# It's an eyeball, it can't hear!
RodinBehaviorTree	= "FlyingNPCProxyBehaviorTree"
Reactions			= "FlyingNPCProxyReactions"
PEMap				= "FlyingNPCProxyPEMap"

	[FlyingNPCProxyTransform]
	SpeedLimit	= 1.5

	[FlyingNPCProxyMesh]
	Mesh				= "Meshes/eye.cms"
	MaterialOverride	= "Material_EntityAnimatedAlphaTest"

	[FlyingNPCProxyCollision]
	HalfExtentsXY					= 0.375
	HalfExtentsZ					= 0.375
	BlocksTrace						= true
	FrictionTargetPercentVelocity	= 1.0	# No friction

	[FlyingNPCProxyFrobbable]
	ExtentsX		= 0.5
	ExtentsY		= 0.5
	ExtentsZ		= 0.5
	IsFrobbable		= false
	FriendlyName	= "Corpse"
	FrobVerb		= "Loot"
	HoldVerb		= "EatCorpse"

	[FlyingNPCProxyAIMotion]
	AirAcceleration			= 10.0
	TurnSpeed				= 180.0		# Degrees per second
	FollowValidateTime		= 1.0
	StepReachedThreshold	= 0.1
	TurnReachedThreshold	= 5.0		# Degrees
	IsFlying				= true
	MaxPathSteps			= 200
	IdleAnimation			= "Idle"
	WalkAnimation			= "Idle"
	AnimationResource		= "Anim"

	[FlyingNPCProxyHeadTracker]
	HeadBoneName	= "Head"
	MaxRotation		= 60.0		# Degrees
	LookVelocity	= 270.0		# Degrees per second

	[FlyingNPCProxySensorVision]
	Extends		= "NPCProxySensorVision"
	ConeScaleZ	= 0.5

	[FlyingNPCProxyBehaviorTree]
	RootNode		= "CommonBT_Root"
	NumLookupNodes	= &
	@ LookupNode
	@@&Key			= "Behave"
	@@^Value		= "EyeBT_Behave"
	@@&Key			= "React"
	@@^Value		= "ProxyBT_React"
	@@&Key			= "PursueCombatTarget"
	@@^Value		= "EyesBT_PursueCombatTarget"

	[FlyingNPCProxyPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "IsEdible"
	@@^Def	= "TruePE"
	@@&Key	= "HypnotizeDuration"
	@@^Def	= "FloatBigNumberPE"
	@@&Key	= "MeleeAttackCooldownTime"
	@@^Def	= "NPCProxyMeleeAttackCooldownTime"
	@@&Key	= "RangedAttackWarmupTime"
	@@^Def	= "NPCProxyRangedAttackWarmupTimePE"
	@@&Key	= "Projectile"
	@@^Def	= "ProxyProjectilePE"
	@@&Key	= "MoneyBase"
	@@^Def	= "NPCProxyMoneyBasePE"
	@@&Key	= "BulletsBase"
	@@^Def	= "NPCProxyBulletsBasePE"
	@@&Key	= "PatrolBark"
	@@^Def	= "FlyingNPCProxyPatrolBarkPE"
	@@&Key	= "SearchBark"
	@@^Def	= "FlyingNPCProxySearchBarkPE"
	@@&Key	= "CombatBark"
	@@^Def	= "FlyingNPCProxyCombatBarkPE"
	@@&Key	= "AttackBark"
	@@^Def	= "FlyingNPCProxyAttackBarkPE"
	@@&Key	= "DamagedBark"
	@@^Def	= "FlyingNPCProxyDamagedBarkPE"

		[FlyingNPCProxyPatrolBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Eye_Ambient"

		[FlyingNPCProxySearchBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Eye_Search"

		[FlyingNPCProxyCombatBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Eye_Combat"

		[FlyingNPCProxyAttackBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Eye_Attack"

		[FlyingNPCProxyDamagedBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Eye_Damaged"

	[FlyingNPCProxyReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "NPCProxyOnSetHardModeReaction"
	@@&				= "NPCProxyOnInitializedQueuedHardModeReaction"
	@@&				= "FlyingNPCProxyDeathReaction"
	@@&				= "NPCProxyOnFrobbedReaction"
	@@&				= "NPCProxyOnFrobbedHeldReaction"
	@@&				= "EdibleOnBecameFrobTargetReaction"
	@@&				= "FlyingNPCProxyDamagedReaction"
	@@&				= "NPCProxyProjectileFireReaction"
	@@&				= "NPCProxyOnHypnotizedReaction"
	@@&				= "NPCProxyOnEndHypnotizedReaction"
	@@&				= "NPCProxyOnSoulTrappedReaction"

		[FlyingNPCProxyDeathReaction]
		Rule		= "OnDiedRule"
		NumActions	= &
		@ Action
		@@& 		= "CommonAIDeathActions"
		@@&			= "SetDefaultGravityAction"
		@@&			= "SetDefaultFrictionAction"
		@@&			= "ZeroAccelerationAction"

			[SetDefaultGravityAction]
			ActionType		= "SendEvent"
			EventName		= "SetDefaultGravity"
			Recipient		= "SelfPE"

			[SetDefaultFrictionAction]
			ActionType		= "SendEvent"
			EventName		= "SetDefaultFriction"
			Recipient		= "SelfPE"

			[ZeroAccelerationAction]
			ActionType	= "SendEvent"
			EventName	= "SetAcceleration"
			Recipient	= "SelfPE"

		[FlyingNPCProxyDamagedReaction]
		Rule		= "OnDamagedRule"
		NumActions	= &
		@ Action
		@@&			= "NPCProxyPlayDamagedFX"
		@@&			= "EyePlayDamagedSFX"
		@@&			= "NPCProxyPlayDamagedAINoise"

			[EyePlayDamagedSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "EyeDamagedSoundPE"

				[EyeDamagedSoundPE]
				PEType	= "ConstantString"
				Value	= "EyeDamagedSound"

[Fishman]
Extends				= "NPCProxy"
RodinBehaviorTree	= "FishmanBehaviorTree"

	[FishmanBehaviorTree]
	RootNode		= "CommonBT_Root"
	NumLookupNodes	= &
	@ LookupNode
	@@&Key			= "Behave"
	@@^Value		= "FishmanBT_Behave"
	@@&Key			= "React"
	@@^Value		= "ProxyBT_React"
	@@&Key			= "PursueCombatTarget"
	@@^Value		= "ProxyBT_PursueCombatTarget"

[NPCProxy]
#ShouldDebugRender	= true
EldTransform		= "NPCProxyTransform"
EldCollision		= "NPCProxyCollision"
EldFrobbable		= "NPCProxyFrobbable"
EldMesh				= "NPCProxyMesh"
EldSound			= "."
EldParticles		= "."
EldDropShadow		= "NPCProxyDropShadow"
EldHealth			= "NPCProxyHealth"
EldVisible			= "."
EldFaction			= "Faction_Dagon"
EldRespawner		= "NPCProxyRespawn"
EldAIMotion			= "NPCProxyAIMotion"
EldHeadTracker		= "NPCProxyHeadTracker"
EldSensorVision		= "NPCProxySensorVision"
EldSensorHearing	= "NPCProxySensorHearing"
EldSensorDamage		= "."
EldThinkerTarget	= "NPCProxyThinkerTarget"
EldHardListener		= "."
RodinBehaviorTree	= "NPCProxyBT"
RodinBlackboard		= "."
RodinKnowledge		= "NPCProxyKnowledge"
RodinResourceMap	= "."
Reactions			= "NPCProxyReactions"
StatMod				= "NPCProxyStatMod"
PEMap				= "NPCProxyPEMap"

	[NPCProxyTransform]
	UseGravity	= true
	SpeedLimit	= 3.0

	[NPCProxyStatMod]
	NumModifiers = &
	@ Modifier
	@@& = "NPCProxyRunning_Acceleration"
	@@& = "NPCProxyRunning_SpeedLimit"
	@@& = "NPCProxyRunning_WalkAnimRate"
	@@& = "NPCProxyPatrolling_Acceleration"
	@@& = "NPCProxyPatrolling_SpeedLimit"
	@@& = "NPCProxyPatrolling_WalkAnimRate"
	@@& = "NPCProxyHardMode_Acceleration"
	@@& = "NPCProxyHardMode_SpeedLimit"
	@@& = "NPCProxyUnaware_DamageTaken"

		[NPCProxyUnaware_DamageTaken]
		Event		= "Unaware"
		Stat		= "DamageTaken"
		Function	= "Add"
		Value		= 2.0

		[NPCProxyRunning_Acceleration]
		Event		= "Running"
		Stat		= "LandAcceleration"
		Function	= "Multiply"
		Value		= 1.6

		[NPCProxyRunning_SpeedLimit]
		Event		= "Running"
		Stat		= "SpeedLimit"
		Function	= "Multiply"
		Value		= 1.6

		[NPCProxyRunning_WalkAnimRate]
		Event		= "Running"
		Stat		= "WalkAnimRate"
		Function	= "Multiply"
		Value		= 1.1

		[NPCProxyPatrolling_Acceleration]
		Event		= "Patrolling"
		Stat		= "LandAcceleration"
		Function	= "Multiply"
		Value		= 0.6

		[NPCProxyPatrolling_SpeedLimit]
		Event		= "Patrolling"
		Stat		= "SpeedLimit"
		Function	= "Multiply"
		Value		= 0.6

		[NPCProxyPatrolling_WalkAnimRate]
		Event		= "Patrolling"
		Stat		= "WalkAnimRate"
		Function	= "Multiply"
		Value		= 0.8

		[NPCProxyHardMode_Acceleration]
		Event		= "HardMode"
		Stat		= "LandAcceleration"
		Function	= "Multiply"
		Value		= 1.5

		[NPCProxyHardMode_SpeedLimit]
		Event		= "HardMode"
		Stat		= "SpeedLimit"
		Function	= "Multiply"
		Value		= 1.5

	[NPCProxyPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "IsEdible"
	@@^Def	= "TruePE"
	@@&Key	= "HypnotizeDuration"
	@@^Def	= "FloatBigNumberPE"
	@@&Key	= "MeleeAttackCooldownTime"
	@@^Def	= "NPCProxyMeleeAttackCooldownTime"
	@@&Key	= "RangedAttackWarmupTime"
	@@^Def	= "NPCProxyRangedAttackWarmupTimePE"
	@@&Key	= "MeleeImpulse"
	@@^Def	= "NPCProxyMeleeImpulsePE"
	@@&Key	= "Projectile"
	@@^Def	= "ProjectileSelectorPE"
	@@&Key	= "MoneyBase"
	@@^Def	= "NPCProxyMoneyBasePE"
	@@&Key	= "BulletsBase"
	@@^Def	= "NPCProxyBulletsBasePE"
	@@&Key	= "PatrolBark"
	@@^Def	= "NPCProxyPatrolBarkPE"
	@@&Key	= "SearchBark"
	@@^Def	= "NPCProxySearchBarkPE"
	@@&Key	= "CombatBark"
	@@^Def	= "NPCProxyCombatBarkPE"
	@@&Key	= "AttackBark"
	@@^Def	= "NPCProxyAttackBarkPE"
	@@&Key	= "DamagedBark"
	@@^Def	= "NPCProxyDamagedBarkPE"

		[NPCProxyMeleeAttackCooldownTime]
		PEType	= "RandomFloat"
		ValueA	= 0.25
		ValueB	= 0.5

		[NPCProxyRangedAttackWarmupTimePE]
		PEType	= "RandomFloat"
		ValueA	= 0.8
		ValueB	= 1.6

		[NPCProxyMeleeImpulsePE]
		PEType	= "ConstantFloat"
		Value	= 5.0

		[ProjectileSelectorPE]
		PEType	= "EldHardSwitch"
		Normal	= "ProxyProjectilePE"
		Hard	= "LizardmanProjectilePE"

			[ProxyProjectilePE]
			PEType	= "ConstantString"
			Value	= "ProxyProjectile"

		[NPCProxyMoneyBasePE]
		PEType	= "EldHardSwitch"
		Normal	= "NPCProxyMoneyBaseNormalPE"
		Hard	= "NPCProxyMoneyBaseHardPE"

			[NPCProxyMoneyBaseNormalPE]
			PEType	= "RandomInt"
			ValueA	= 1
			ValueB	= 3

			[NPCProxyMoneyBaseHardPE]
			PEType	= "RandomInt"
			ValueA	= 1
			ValueB	= 2

		[NPCProxyBulletsBasePE]
		PEType	= "EldHardSwitch"
		Normal	= "NPCProxyBulletsBaseNormalPE"
		Hard	= "NPCProxyBulletsBaseHardPE"

			[NPCProxyBulletsBaseNormalPE]
			PEType	= "RandomInt"
			ValueA	= 1
			ValueB	= 2

			[NPCProxyBulletsBaseHardPE]
			PEType	= "ConstantInt"
			Value	= 1

		[NPCProxyPatrolBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Fishman_Ambient"

		[NPCProxySearchBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Fishman_Search"

		[NPCProxyCombatBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Fishman_Combat"

		[NPCProxyAttackBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Fishman_Attack"

		[NPCProxyDamagedBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Fishman_Damaged"

	[NPCProxyCollision]
	HalfExtentsXY	= 0.3
	HalfExtentsZ	= 0.8
	BlocksTrace		= true

	[NPCProxyFrobbable]
	ExtentsX		= 1.0
	ExtentsY		= 1.0
	ExtentsZ		= 0.25
	OffsetZ			= -0.65
	IsFrobbable		= false
	FriendlyName	= "Corpse"
	FrobVerb		= "Loot"
	HoldVerb		= "EatCorpse"

	[NPCProxyMesh]
	Mesh = "Meshes/frogman.cms"
	OffsetZ = -0.8
	IrradianceOffsetZ = 0.7

	[NPCProxyDropShadow]
	Radius				= 0.5
	VoxelCheckOffsetZ	= 0.0
	Alpha				= 0.5
	ShadowFloatZ		= 0.06

	[NPCProxyHealth]
	Health			= 3

	[Faction_Dagon]
	Faction = "Dagon"

	[NPCProxyRespawn]
	RetryRespawnTime			= 5.0
	RespawnMinPlayerDistance	= 15.0
	
	[NPCProxyBT]
	RootNode		= "CommonBT_Root"
	NumLookupNodes	= &
	@ LookupNode
	@@&Key			= "Behave"
	@@^Value		= "ProxyBT_Behave"
	@@&Key			= "React"
	@@^Value		= "ProxyBT_React"
	@@&Key			= "PursueCombatTarget"
	@@^Value		= "ProxyBT_PursueCombatTarget"

	[NPCProxyKnowledge]
	ExpireTime		= 5.0
	StaleSeenTime	= 3.0		# How long after target is last seen does sound become more relevant

	[NPCProxyHeadTracker]
	HeadBoneName	= "Head"
	HeadOffsetY		= -0.13
	HeadOffsetZ		= 1.08		# Offset from mesh
	EyesOffsetY		= -0.13		# Not really! But this makes it work. Needs to be aligned with head offset, I guess.
	EyesOffsetZ		= 0.54		# Offset from transform, not mesh, because hurrr
	MaxRotation		= 60.0		# Degrees
	LookVelocity	= 270.0		# Degrees per second

	[NPCProxyAIMotion]
	LandAcceleration		= 18.0
	AirAcceleration			= 10.0
	JumpImpulse				= 10.0
	TurnSpeed				= 180.0		# Degrees per second
	FollowValidateTime		= 1.0
	StepReachedThreshold	= 0.1
	TurnReachedThreshold	= 5.0		# Degrees
	CanJump					= true
	CanOpenDoors			= true
	MaxPathSteps			= 200
	IdleAnimation			= "Idle"
	WalkAnimation			= "Walk"
	JumpAnimation			= "Jump"
	AnimationResource		= "Anim"

	[NPCProxySensorVision]
	TickDeltaMin			= 0.2
	TickDeltaMax			= 0.4
	EyeOffsetZ				= 0.575
	Radius					= 15.0
	ConeAngle				= 60.0	# Half angle
	ConeScaleZ				= 0.333
	CertaintyFalloffRadius	= 10.0	# Distance factor of certainty is half at this radius
	DistanceCertaintyFactor	= 1.0	# Distance factor of certainty is worth this much in total score
	CertaintyVelocity		= 0.8
	CertaintyDecay			= 0.2

	[NPCProxySensorHearing]
	# Added to noise radius, it's fine if this is 0.
	# More than 0 means this AI can detect 0-radius sounds like crouched footsteps!
	Radius						= 0.0
	CertaintyFalloffRadius		= 10.0	# Distance factor of certainty is half at this radius
	DistanceCertaintyFactor		= 1.0	# Distance factor of certainty is worth this much in total score
	OcclusionCertaintyFactor	= 0.5	# Occlusion factor of certainty is worth this much in total score

	[NPCProxyThinkerTarget]
	OutputCombatTargetBlackboardKey	= "BestCombatTarget"
	OutputSearchTargetBlackboardKey	= "BestSearchTarget"
	CombatTargetScoreThreshold		= 0.5
	SearchTargetScoreThreshold		= 0.25

	[NPCProxyReactions]
	NumReactions = &
	@ Reaction
	@@&	= "NPCProxyOnSetHardModeReaction"
	@@&	= "NPCProxyOnInitializedQueuedHardModeReaction"
	@@& = "NPCProxyDeathReaction"
	@@& = "NPCProxyOnFrobbedReaction"
	@@&	= "NPCProxyOnFrobbedHeldReaction"
	@@&	= "EdibleOnBecameFrobTargetReaction"
	@@& = "NPCProxyDamagedReaction"
	@@& = "NPCProxyProjectileFireReaction"
	@@& = "NPCProxyMeleeConeCheckReaction"
	@@&	= "NPCProxyOnHypnotizedReaction"
	@@&	= "NPCProxyOnEndHypnotizedReaction"
	@@&	= "NPCProxyOnSoulTrappedReaction"
	@@&	= "OnLandedHardReaction"
	# NOTE: Keep in sync with ShopkeeperReactions and SleepingSquidmanReactions

		[NPCProxyOnInitializedQueuedHardModeReaction]
		Rule		= "OnInitializedQueuedHardModeRule"
		NumActions	= &
		@ Action
		@@&			= "SetHardModeStatModAction"

			[OnInitializedQueuedHardModeRule]
			Event			= "OnInitializedQueued"
			NumConditions	= &
			@ Condition
			@@&				= "IsHardModePE"

		[NPCProxyOnSetHardModeReaction]
		Rule		= "OnSetHardModeRule"
		NumActions	= &
		@ Action
		@@&			= "SetHardModeStatModAction"

			[OnSetHardModeRule]
			Event	= "OnSetHardMode"

			[SetHardModeStatModAction]
			ActionType		= "TriggerStatMod"
			StatModEvent	= "HardMode"

		[EdibleOnBecameFrobTargetReaction]
		Rule		= "OnBecameFrobTargetRule"
		NumActions	= &
		@ Action
		@@&			= "SetEdibleHoldReleaseMode"
		@@&			= "SetEdibleHoldVerbDisabledStatus"

			[SetEdibleHoldVerbDisabledStatus]
			ActionType		= "SendEvent"
			EventName		= "SetWidgetDisabled"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Screen"
			@@^Value		= "HUDScreenPE"
			@@&Name			= "Widget"
			@@^Value		= "FrobHoldPE"
			@@&Name			= "Disabled"
			@@^Value		= "CannotAffordTinPE"

				[CannotAffordTinPE]
				PEType	= "Conditional"
				Op		= "LT"
				InputA	= "FrobberMoneyPE"
				InputB	= "TinningKitCostPE"

					[FrobberMoneyPE]
					PEType		= "PushContext"
					EntityPE	= "FrobberPE"
					Input		= "MoneyPE"

					[TinningKitCostPE]
					PEType	= "ConstantInt"
					Value	= 20

					# Also satisfy the UI string lookup.
					[TinningKit]
					TinPriceTag	= 20

			[SetEdibleHoldReleaseMode]
			ActionType		= "SendEvent"
			EventName		= "SetHoldReleaseMode"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "HoldReleaseMode"
			@@^Value		= "ShouldShowTinningScreen"

				[ShouldShowTinningScreen]
				PEType		= "AND"
				InputA		= "IsEdibleAndDead"
				InputB		= "CanShowTinningScreen"

					[IsEdibleAndDead]
					PEType	= "AND"
					InputA	= "IsEdible"
					InputB	= "IsDeadPE"

						[IsEdible]
						PEType	= "Lookup"
						Key		= "IsEdible"

						[IsDeadPE]
						PEType	= "QueryActionStack"
						Key		= "IsDead"

					[CanShowTinningScreen]
					PEType		= "StatMod"
					EntityPE	= "FrobberPE"
					StatName	= "ShowTinningScreen"
					Input		= "FloatZeroPE"

		[NPCProxyOnEndHypnotizedReaction]
		Rule		= "OnEndHypnotizedRule"
		NumActions	= &
		@ Action
		@@&			= "BecomeUnHypnotized"
		@@&			= "NotifyFactionChanged"
		@@&			= "StopHypnotizedVFX"

			[OnEndHypnotizedRule]
			Event	= "OnEndHypnotized"

			[BecomeUnHypnotized]
			ActionType		= "SendEvent"
			EventName		= "SetFaction"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Faction"
			@@^Value		= "GetOriginalFactionPE"

				[GetOriginalFactionPE]
				PEType	= "QueryActionStack"
				Key		= "OriginalFaction"

			[StopHypnotizedVFX]
			ActionType		= "SendEvent"
			EventName		= "StopParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "PS_HypnotizedPE"

		[NPCProxyOnSoulTrappedReaction]
		Rule		= "OnSoulTrappedRule"
		NumActions	= &
		@ Action
		@@&			= "SpawnTrappedSouls"
		@@&			= "DestroySelfAction"

			[OnSoulTrappedRule]
			Event			= "OnSoulTrapped"
			NumConditions	= &
			@ Condition
			@@&				= "IsNotDeadPE"	# So this works even for enemies that don't have health, like Mummies and Shoggoths

				[IsNotDeadPE]
				PEType	= "NOT"
				Input	= "IsDeadPE"

			[SpawnTrappedSouls]
			ActionType			= "EldSpawnEntity"
			Entity				= "TrappedSouls_Small_Spawned"
			LocationOverridePE	= "LocationPE"

		[NPCProxyOnHypnotizedReaction]
		Rule		= "OnHypnotizedRule"
		NumActions	= &
		@ Action
		@@&			= "QueueEndHypnotizedEvent"
		@@&			= "BecomeHypnotized"
		@@&			= "NotifyFactionChanged"
		@@&			= "PlayHypnotizedVFX"

			[OnHypnotizedRule]
			Event	= "OnHypnotized"

			[QueueEndHypnotizedEvent]
			ActionType		= "SendEvent"
			EventName		= "OnEndHypnotized"
			Recipient		= "SelfPE"
			QueueEvent		= true
			DispatchDelayPE	= "HypnotizeDurationPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "OriginalFaction"
			@@^Value		= "GetSelfFactionPE"

				[HypnotizeDurationPE]
				PEType		= "Lookup"
				Key			= "HypnotizeDuration"

				[GetSelfFactionPE]
				PEType		= "EldGetFaction"
				EntityPE	= "SelfPE"

			[BecomeHypnotized]
			ActionType		= "SendEvent"
			EventName		= "SetFaction"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Faction"
			@@^Value		= "GetNewFactionPE"

				[GetNewFactionPE]
				PEType	= "QueryActionStack"
				Key		= "NewFaction"

			[NotifyFactionChanged]
			ActionType	= "SendEvent"
			EventName	= "OnFactionChanged"
			Recipient	= "SelfPE"

			[PlayHypnotizedVFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "PS_HypnotizedPE"
			@@&Name			= "Attached"
			@@^Value		= "TruePE"

				[PS_HypnotizedPE]
				PEType	= "ConstantString"
				Value	= "PS_Hypnotized"

		[NPCProxyDamagedReaction]
		Rule = "OnDamagedRule"
		NumActions = &
		@ Action
		@@& = "NPCProxyPlayDamagedFX"
		@@& = "NPCProxyPlayDamagedAINoise"

			[NPCProxyPlayDamagedFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "NPCProxyDamagedFXPE"

				[NPCProxyDamagedFXPE]
				PEType		= "ConstantString"
				Value		= "PS_NPCBlood"

			[NPCProxyPlayDamagedAINoise]
			ActionType		= "SendEvent"
			EventName		= "OnAINoise"
			NumParameters	= &
			@ Parameter
			# NOTE: Report the damager as the source; note that this stomps
			# the last known location of actual damager noises. Meh?
			@@&Name			= "NoiseEntity"
			@@^Value		= "DamagerPE"
			@@&Name			= "NoiseLocation"
			@@^Value		= "LocationPE"
			@@&Name			= "NoiseRadius"
			@@^Value		= "NPCProxyDamagedNoiseRadiusPE"

				[NPCProxyDamagedNoiseRadiusPE]
				PEType	= "ConstantFloat"
				Value	= 8.0

		[NPCProxyDeathReaction]
		Rule = "OnDiedRule"
		NumActions = &
		@ Action
		@@& = "CommonAIDeathActions"

			[CommonAIDeathActions]
			ActionType	= "Composite"
			NumActions	= &
			@ Action
			@@&			= "CommonAIPauseBT"
			@@&			= "CommonAIPauseAIMotion"
			@@&			= "NPCProxyDeathStopLooking"
			@@&			= "StopTouchingAction"
			@@&			= "NPCProxyDeathPlayDamagedVO"
			@@&			= "NPCProxyDeathPlayAnim"
			@@&			= "BecomeFrobbable"

				[CommonAIPauseBT]
				ActionType	= "SendEvent"
				EventName	= "PauseBT"
				Recipient	= "SelfPE"
				
				[CommonAIPauseAIMotion]
				ActionType	= "SendEvent"
				EventName	= "PauseAIMotion"
				Recipient	= "SelfPE"

				[NPCProxyDeathStopLooking]
				ActionType	= "SendEvent"
				EventName	= "StopLooking"
				Recipient	= "SelfPE"

				[NPCProxyDeathPlayDamagedVO]
				ActionType		= "SendEvent"
				EventName		= "PlayBark"
				Recipient		= "SelfPE"
				NumParameters	= &
				@ Parameter
				@@&Name			= "Sound"
				@@^Value		= "DamagedBarkLookupPE"
				@@&Name			= "Category"
				@@^Value		= "VOPE"
				
				[NPCProxyDeathPlayAnim]
				ActionType	= "EldPlayAnim"
				Animation	= "Death"

				[BecomeFrobbable]
				ActionType		= "SendEvent"
				EventName		= "BecomeFrobbable"
				Recipient		= "SelfPE"

		[NPCProxyOnFrobbedHeldReaction]
		Rule		= "OnFrobbedHeldRule"
		NumActions	= &
		@ Action
		@@&			= "NPCProxyConditionalEat"

			[NPCProxyConditionalEat]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "CanAffordTinPE"
			@@^Action		= "NPCProxyEatComposite"

				[CanAffordTinPE]
				PEType	= "Conditional"
				Op		= "GTE"
				InputA	= "FrobberMoneyPE"
				InputB	= "TinningKitCostPE"

				[NPCProxyEatComposite]
				ActionType	= "Composite"
				NumActions	= &
				@ Action
				@@&			= "ConditionalShowFoodBook"
				@@&			= "PlayMeatSFX"
				@@&			= "SendOnEatEvent"
				@@&			= "NPCProxyLootComposite"

					[SendOnEatEvent]
					ActionType	= "SendEvent"
					EventName	= "OnEat"
					EventOwner	= "FrobberPE"
					Recipient	= "FrobberPE"

			[NPCProxyLootComposite]
			ActionType	= "Composite"
			NumActions	= &
			@ Action
			@@&			= "NPCProxyGiveLootAction"
			@@&			= "ConditionalShowLootBook"
			@@&			= "PlayLootSFX"
			@@&			= "BecomeNonFrobbable"
			@@&			= "NPCProxyQueueHide"
			@@&			= "NPCProxyQueueStopBlockingWorld"
			@@&			= "NPCProxyQueueRespawn"

				[NPCProxyGiveLootAction]
				ActionType		= "Selector"
				NumSelections	= &
				@ Selection
				@@&Condition	= "LootChance_KeyPE"
				@@^Action		= "NPCProxyGiveKeyAction"
				@@&Condition	= "LootChance_AmmoPE"
				@@^Action		= "NPCProxyGiveBulletsAction"
				@@&Condition	= "TruePE"
				@@^Action		= "NPCProxyGiveMoneyAction"

					# 1:10 chance to get a key
					[LootChance_KeyPE]
					PEType		= "RandomBool"
					Probability	= 0.1

					# 1:3 (* 9:10 == 3:10) chance to get ammo
					[LootChance_AmmoPE]
					PEType		= "RandomBool"
					Probability	= 0.333

					[NPCProxyGiveKeyAction]
					ActionType		= "SendEvent"
					EventName		= "AddKey"
					Recipient		= "FrobberPE"
					QueueEvent		= true
					NumParameters	= &
					@ Parameter
					@@&Name			= "ShowPickupScreen"
					@@^Value		= "TruePE"

					[NPCProxyGiveBulletsAction]
					ActionType		= "SendEvent"
					EventName		= "AddAmmo"
					Recipient		= "FrobberPE"
					QueueEvent		= true
					NumParameters	= &
					@ Parameter
					@@&Name			= "AmmoType"
					@@^Value		= "BulletsTypePE"
					@@&Name			= "AmmoValue"
					@@^Value		= "NPCProxyBulletsValuePE"

						[NPCProxyBulletsValuePE]
						PEType		= "StatMod"
						EntityPE	= "FrobberPE"
						StatName	= "LootAmount"
						Input		= "NPCProxyBulletsBaseLookupPE"

							[NPCProxyBulletsBaseLookupPE]
							PEType	= "Lookup"
							Key		= "BulletsBase"

					[NPCProxyGiveMoneyAction]
					ActionType		= "SendEvent"
					EventName		= "AddMoney"
					Recipient		= "FrobberPE"
					QueueEvent		= true
					NumParameters	= &
					@ Parameter
					@@&Name			= "Money"
					@@^Value		= "NPCProxyMoneyPE"
					@@&Name			= "ShowPickupScreen"
					@@^Value		= "TruePE"

						[NPCProxyMoneyPE]
						PEType		= "StatMod"
						EntityPE	= "FrobberPE"
						StatName	= "LootAmount"
						Input		= "NPCProxyMoneyBaseLookupPE"
						
							[NPCProxyMoneyBaseLookupPE]
							PEType	= "Lookup"
							Key		= "MoneyBase"

				[ConditionalShowLootBook]
				ActionType		= "Selector"
				NumSelections	= &
				@ Selection
				@@&Condition	= "HasNotReadLootBook"
				@@^Action		= "TeachLootBook"

					[HasNotReadLootBook]
					PEType	= "NOT"
					Input	= "HasReadLootBook"

						[HasReadLootBook]
						PEType	= "EldGetPersistentVar"
						Key		= "HasReadLootBook"

					[TeachLootBook]
					ActionType	= "Composite"
					NumActions	= &
					@ Action
					@@&			= "ShowLootBook"
					@@&			= "MarkLootBookRead"

						[MarkLootBookRead]
						ActionType	= "EldSetPersistentVar"
						Key			= "HasReadLootBook"
						ValuePE		= "TruePE"

				[PlayLootSFX]
				ActionType		= "SendEvent"
				EventName		= "PlaySound"
				Recipient		= "FrobberPE"
				NumParameters	= &
				@ Parameter
				@@&Name			= "Sound"
				@@^Value		= "LootSFXPE"

					[LootSFXPE]
					PEType	= "ConstantString"
					Value	= "LootSound"

				[BecomeNonFrobbable]
				ActionType		= "SendEvent"
				EventName		= "BecomeNonFrobbable"
				Recipient		= "SelfPE"

				[NPCProxyQueueHide]
				ActionType		= "SendEvent"
				EventName		= "Hide"
				Recipient		= "SelfPE"
				QueueEvent		= true
				DispatchDelay	= 5.0		# TODO: Configurate

				[NPCProxyQueueStopBlockingWorld]
				ActionType		= "SendEvent"
				EventName		= "StopBlockingWorld"
				Recipient		= "SelfPE"
				QueueEvent		= true
				DispatchDelay	= 5.0		# TODO: Configurate

				[NPCProxyQueueRespawn]
				ActionType		= "SendEvent"
				EventName		= "Respawn"
				Recipient		= "SelfPE"
				QueueEvent		= true
				DispatchDelay	= 45.0		# TODO: Configurate

		[NPCProxyOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "NPCProxyLootComposite"

		[NPCProxyProjectileFireReaction]
		Rule		= "NPCProxyProjectileFireRule"
		NumActions	= &
		@ Action
		@@&			= "NPCProxyFireProjectile"

			[NPCProxyProjectileFireRule]
			Event = "OnProjectileFired"

			[NPCProxyFireProjectile]
			ActionType		= "EldSpawnEntity"
			EntityPE		= "ProjectilePE"
			SpawnImpulsePE	= "ProjectileSpawnImpulsePE"

				[ProjectilePE]
				PEType	= "Lookup"
				Key		= "Projectile"

				[ProjectileSpawnImpulsePE]
				PEType	= "EldHardSwitch"
				Normal	= "ProjectileSpawnImpulseNormalPE"
				Hard	= "ProjectileSpawnImpulseHardPE"

					[ProjectileSpawnImpulseNormalPE]
					PEType	= "ConstantFloat"
					Value	= 8.0

					[ProjectileSpawnImpulseHardPE]
					PEType	= "ConstantFloat"
					Value	= 12.0

		[NPCProxyMeleeConeCheckReaction]
		Rule		= "MeleeConeCheckRule"
		NumActions	= &
		@ Action
		@@&			= "NPCProxyMeleeDealDamage"
		@@&			= "MeleeApplyImpulse"

			[MeleeConeCheckRule]
			Event = "OnConeCheck"
			NumCriteria = &
			@ Criterion
			@@&Name = "CheckTag"
			@@^Min = "MeleeTagPE"

				[MeleeTagPE]
				PEType	= "ConstantString"
				Value	= "Melee"

			[NPCProxyMeleeDealDamage]
			ActionType		= "SendEvent"
			EventName		= "TakeDamage"
			Recipient		= "CheckedPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "DamageAmount"
			@@^Value		= "MeleeDamagePE"
			@@&Name			= "Damager"
			@@^Value		= "SelfPE"
			@@&Name			= "DamageType"
			@@^Value		= "BluntDamageTypePE"

				[MeleeDamagePE]
				PEType	= "ConstantInt"
				Value	= 1

[ShoggothHalloween]
Extends	= "Shoggoth"
EldMesh	= "ShoggothHalloween_Mesh"

	[ShoggothHalloween_Mesh]
	Extends	= "ShoggothMesh"
	Mesh	= "Meshes/shoggoth-candycorn.cms"

[ShoggothShopkeeper]
Extends				= "Shoggoth"
EldDamager			= "ShopkeeperDamager"
EldMesh				= "ShoggothShopkeeperMesh"
EldFrobbable		= "ShoggothShopkeeperFrobbable"
EldSensorTheft		= "."
EldFaction			= "Faction_Shopkeeper"
RodinBehaviorTree	= "ShoggothShopkeeperBehaviorTree"
Reactions			= "ShoggothShopkeeperReactions"
StatMod				= "ShoggothShopkeeperStatMod"
PEMap				= "ShoggothShopkeeperPEMap"

	[ShoggothShopkeeperMesh]
	Extends				= "ShoggothMesh"
	Mesh				= "Meshes/shoggoth-shopkeeper.cms"
	MaterialOverride	= "Material_EntityAnimatedAlphaTest"

	[ShoggothShopkeeperFrobbable]
	ExtentsX		= 1.0
	ExtentsY		= 1.0
	ExtentsZ		= 1.0
	IsFrobbable		= true
	FriendlyName	= "Shopkeeper"
	FrobVerb		= "Talk"
	
	[ShoggothShopkeeperBehaviorTree]
	RootNode		= "CommonBT_Root"
	NumLookupNodes	= &
	@ LookupNode
	@@&Key			= "Behave"
	@@^Value		= "ShoggothShopkeeperBT_Behave"
	@@&Key			= "React"
	@@^Value		= "ShoggothBT_React"

	[ShoggothShopkeeperStatMod]
	NumModifiers = &
	@ Modifier
	@@& = "ShopkeeperRunning_Acceleration"
	@@& = "ShopkeeperRunning_SpeedLimit"
	@@& = "ShopkeeperRunning_WalkAnimRate"
	@@& = "ShoggothPatrolling_Acceleration"
	@@& = "ShoggothPatrolling_SpeedLimit"
	@@& = "ShoggothPatrolling_WalkAnimRate"
	@@& = "NPCProxyHardMode_Acceleration"
	@@& = "NPCProxyHardMode_SpeedLimit"

	[ShoggothShopkeeperPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "HypnotizeDuration"
	@@^Def	= "ShopkeeperHypnotizeDurationPE"
	@@&Key	= "MeleeAttackCooldownTime"
	@@^Def	= "ShopkeeperMeleeAttackCooldownTime"
	@@&Key	= "MeleeImpulse"
	@@^Def	= "NPCProxyMeleeImpulsePE"
	@@&Key	= "TalkBook"
	@@^Def	= "ShoggothShopkeeperTalkBookPE"

		[ShoggothShopkeeperTalkBookPE]
		PEType	= "ConstantString"
		Value	= "ShoggothShopkeeperTalk"

	[ShoggothShopkeeperReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "NPCProxyOnSetHardModeReaction"
	@@&				= "NPCProxyOnInitializedQueuedHardModeReaction"
	@@&				= "ShoggothMeleeConeCheckReaction"
	@@&				= "NPCProxyOnHypnotizedReaction"
	@@&				= "NPCProxyOnEndHypnotizedReaction"
	@@&				= "NPCProxyOnSoulTrappedReaction"
	@@&				= "ShopkeeperOnTheftSensedReaction"
	@@&				= "ShoggothShopkeeperOnFrobbedReaction"
	@@&				= "SetSpawnPointReaction"

		[ShoggothShopkeeperOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "ShopkeeperTalkAction"

[SummonedShoggoth]
Extends	= "Shoggoth"
Label	= "SummonedShoggothLabel"

	[SummonedShoggothLabel]
	Label	= "SummonedShoggoth"

[Shoggoth]
#ShouldDebugRender	= true
EldTransform		= "ShoggothTransform"
EldMesh				= "ShoggothMesh"
EldCollision		= "ShoggothCollision"
EldSound			= "ShoggothSound"
EldParticles		= "ShoggothParticles"
EldVisible			= "."
EldFaction			= "Faction_Shoggoth"
EldAIMotion			= "ShoggothAIMotion"
EldSensorVision		= "ShoggothSensorVision"
EldSensorHearing	= "ShoggothSensorHearing"
EldThinkerTarget	= "ShoggothThinkerTarget"
EldHardListener		= "."
RodinBehaviorTree	= "ShoggothBehaviorTree"
RodinBlackboard		= "."
RodinKnowledge		= "ShoggothKnowledge"
RodinResourceMap	= "."
Reactions			= "ShoggothReactions"
StatMod				= "ShoggothStatMod"
PEMap				= "ShoggothPEMap"

	[ShoggothTransform]
	UseGravity		= true
	SpeedLimit		= 5.0
	AllowImpulses	= false	# Removing bullet and dynamite feedback on Shoggoths as much as possible.

	[ShoggothMesh]
	Mesh	= "Meshes/shoggoth.cms"
	OffsetZ	= -0.975

	[ShoggothParticles]
	NumParticleSystems	= &
	@ ParticleSystem
	@@&					= "PS_Shoggoth"

	[Faction_Shoggoth]
	Faction		= "Shoggoth"

	[ShoggothCollision]
	HalfExtentsXY	= 0.475
	HalfExtentsZ	= 0.975
	BlocksTrace		= true

	[ShoggothSound]
	Sound			= "ShoggothAmbientSound"

	[ShoggothBehaviorTree]
	RootNode		= "CommonBT_Root"
	NumLookupNodes	= &
	@ LookupNode
	@@&Key			= "Behave"
	@@^Value		= "ShoggothBT_Behave"
	@@&Key			= "React"
	@@^Value		= "ShoggothBT_React"

	[ShoggothKnowledge]
	ExpireTime		= 30.0
	StaleSeenTime	= 3.0		# How long after target is last seen does sound become more relevant

	[ShoggothAIMotion]
	LandAcceleration		= 25.0
	AirAcceleration			= 10.0
	JumpImpulse				= 10.0
	TurnSpeed				= 135.0		# Degrees per second
	FollowValidateTime		= 1.0
	StepReachedThreshold	= 0.1
	TurnReachedThreshold	= 5.0		# Degrees
	CanJump					= true
	CanOpenDoors			= true
	MaxPathSteps			= 200
	IdleAnimation			= "Idle"
	WalkAnimation			= "Walk"
	AnimationResource		= "Anim"

	[ShoggothSensorVision]
	TickDeltaMin			= 0.2
	TickDeltaMax			= 0.4
	EyeOffsetZ				= 0.25
	Radius					= 15.0
	ConeAngle				= 120.0	# Half angle
	ConeScaleZ				= 0.333
	CertaintyFalloffRadius	= 20.0	# Distance factor of certainty is half at this radius
	DistanceCertaintyFactor	= 1.0	# Distance factor of certainty is worth this much in total score
	CertaintyVelocity		= 0.8
	CertaintyDecay			= 0.2

	[ShoggothSensorHearing]
	# This AI can detect 0-radius sounds like crouched footsteps!
	Radius						= 2.0
	CertaintyFalloffRadius		= 10.0	# Distance factor of certainty is half at this radius
	DistanceCertaintyFactor		= 1.0	# Distance factor of certainty is worth this much in total score
	OcclusionCertaintyFactor	= 0.5	# Occlusion factor of certainty is worth this much in total score

	[ShoggothThinkerTarget]
	OutputCombatTargetBlackboardKey	= "BestCombatTarget"
	OutputSearchTargetBlackboardKey	= "BestSearchTarget"
	CombatTargetScoreThreshold		= 0.5
	SearchTargetScoreThreshold		= 0.25

	[ShoggothStatMod]
	NumModifiers = &
	@ Modifier
	@@& = "ShoggothRunning_Acceleration"
	@@& = "ShoggothRunning_SpeedLimit"
	@@& = "ShoggothRunning_WalkAnimRate"
	@@& = "ShoggothPatrolling_Acceleration"
	@@& = "ShoggothPatrolling_SpeedLimit"
	@@& = "ShoggothPatrolling_WalkAnimRate"
	@@& = "NPCProxyHardMode_Acceleration"
	@@& = "NPCProxyHardMode_SpeedLimit"

		[ShoggothRunning_Acceleration]
		Event		= "Running"
		Stat		= "LandAcceleration"
		Function	= "Multiply"
		Value		= 1.6

		[ShoggothRunning_SpeedLimit]
		Event		= "Running"
		Stat		= "SpeedLimit"
		Function	= "Multiply"
		Value		= 1.6

		[ShoggothRunning_WalkAnimRate]
		Event		= "Running"
		Stat		= "WalkAnimRate"
		Function	= "Multiply"
		Value		= 1.1

		[ShoggothPatrolling_Acceleration]
		Event		= "Patrolling"
		Stat		= "LandAcceleration"
		Function	= "Multiply"
		Value		= 0.6

		[ShoggothPatrolling_SpeedLimit]
		Event		= "Patrolling"
		Stat		= "SpeedLimit"
		Function	= "Multiply"
		Value		= 0.6

		[ShoggothPatrolling_WalkAnimRate]
		Event		= "Patrolling"
		Stat		= "WalkAnimRate"
		Function	= "Multiply"
		Value		= 0.8

	[ShoggothPEMap]
	NumPEs		= &
	@ PE
	@@&Key		= "HypnotizeDuration"
	@@^Def		= "ShoggothHypnotizeDurationPE"
	@@&Key		= "MeleeImpulse"
	@@^Def		= "ShoggothMeleeImpulsePE"

		[ShoggothHypnotizeDurationPE]
		PEType	= "ConstantFloat"
		Value	= 5.0

		[ShoggothMeleeImpulsePE]
		PEType	= "ConstantFloat"
		Value	= 25.0

	[ShoggothReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "NPCProxyOnSetHardModeReaction"
	@@&				= "NPCProxyOnInitializedQueuedHardModeReaction"
	@@&				= "ShoggothMeleeConeCheckReaction"
	@@&				= "NPCProxyOnHypnotizedReaction"
	@@&				= "NPCProxyOnEndHypnotizedReaction"
	@@&				= "NPCProxyOnSoulTrappedReaction"

		[ShoggothMeleeConeCheckReaction]
		Rule		= "MeleeConeCheckRule"
		NumActions	= &
		@ Action
		@@&			= "ShoggothMeleeDealDamage"
		@@&			= "MeleeApplyImpulse"

			[ShoggothMeleeDealDamage]
			ActionType		= "SendEvent"
			EventName		= "TakeDamage"
			Recipient		= "CheckedPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "DamageAmount"
			@@^Value		= "ShoggothDamagePE"
			@@&Name			= "Damager"
			@@^Value		= "SelfPE"
			@@&Name			= "DamageType"
			@@^Value		= "BluntDamageTypePE"

				[ShoggothDamagePE]
				PEType	= "ConstantInt"
				Value	= 2

# Could extend from an AI base class if it saves me much,
# but these guys are very different from combat AIs.
[HearWorm]
EldTransform				= "HearWormTransform"
EldMesh						= "HearWormMesh"
EldCollision				= "HearWormCollision"
EldFrobbable				= "HearWormFrobbable"
EldSound					= "."
EldParticles				= "."
EldDropShadow				= "HearWormDropShadow"
EldHealth					= "HearWormHealth"
EldVisible					= "."
EldFaction					= "Faction_Dagon"
EldRespawner				= "HearWormRespawner"
EldAIMotion					= "HearWormAIMotion"
# TODO: I'll probably want a custom "body tracker" to face noise source
EldSensorHearing			= "HearWormSensorHearing"
EldSensorDamage				= "."
EldThinkerHearWormTarget	= "HearWormThinkerTarget"
RodinBehaviorTree			= "HearWormBehaviorTree"
RodinBlackboard				= "."
RodinKnowledge				= "HearWormKnowledge"
RodinResourceMap			= "."
Reactions					= "HearWormReactions"
PEMap						= "HearWormPEMap"

	[HearWormTransform]
	UseGravity	= true
	SpeedLimit	= 3.0

	[HearWormMesh]
	Mesh = "Meshes/hearworm.cms"

	[HearWormDropShadow]
	Radius				= 0.375
	VoxelCheckOffsetZ	= 0.0
	Alpha				= 0.5
	ShadowFloatZ		= 0.06

	[HearWormCollision]
	HalfExtentsXY	= 0.375
	HalfExtentsZ	= 0.5
	BlocksTrace		= true

	[HearWormFrobbable]
	ExtentsX		= 0.5
	ExtentsY		= 0.5
	ExtentsZ		= 0.125
	OffsetZ			= -0.375
	IsFrobbable		= false
	FriendlyName	= "Corpse"
	FrobVerb		= "Loot"
	HoldVerb		= "EatCorpse"

	[HearWormHealth]
	Health	= 2

	[HearWormRespawner]
	RetryRespawnTime			= 5.0
	RespawnMinPlayerDistance	= 15.0

	[HearWormAIMotion]
	LandAcceleration		= 10.0
	AirAcceleration			= 5.0
	TurnSpeed				= 360.0		# Degrees per second
	FollowValidateTime		= 1.0
	StepReachedThreshold	= 0.1
	TurnReachedThreshold	= 5.0		# Degrees
	CanJump					= false
	CanOpenDoors			= false
	MaxPathSteps			= 200
	IdleAnimation			= "Idle"
	WalkAnimation			= "Idle"
	AnimationResource		= "Anim"

	[HearWormKnowledge]
	ExpireTime		= 5.0

	[HearWormSensorHearing]
	Radius						= 1.5	# This AI can detect 0-radius sounds like crouched footsteps!
	CertaintyFalloffRadius		= 10.0	# Distance factor of certainty is half at this radius
	DistanceCertaintyFactor		= 1.0	# Distance factor of certainty is worth this much in total score
	OcclusionCertaintyFactor	= 0.5	# Occlusion factor of certainty is worth this much in total score

	# TODO: I'll need a custom thinker, or a way to grab certainty in BT
	# so worm can react differently to high certainty threat.
	[HearWormThinkerTarget]
	OutputAlarmTargetBlackboardKey	= "BestAlarmTarget"
	OutputWatchTargetBlackboardKey	= "BestWatchTarget"
	AlarmTargetScoreThreshold		= 0.75
	WatchTargetScoreThreshold		= 0.0

	[HearWormBehaviorTree]
	RootNode		= "CommonBT_Root"
	NumLookupNodes	= &
	@ LookupNode
	@@&Key			= "Behave"
	@@^Value		= "HearWormBT_Behave"
	@@&Key			= "React"
	@@^Value		= "HearWormBT_React"

	[HearWormPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "IsEdible"
	@@^Def	= "TruePE"
	@@&Key	= "HypnotizeDuration"
	@@^Def	= "FloatBigNumberPE"
	@@&Key	= "MoneyBase"
	@@^Def	= "IntOnePE"
	@@&Key	= "DamagedBark"
	@@^Def	= "HearWormDamagedBarkPE"

		[HearWormDamagedBarkPE]
		PEType	= "ConstantString"
		Value	= "Bark_HearWorm_Threaten"

	[HearWormReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "HearWormOnDamagedReaction"
	@@&				= "HearWormOnDiedReaction"
	@@&				= "NPCProxyOnHypnotizedReaction"
	@@&				= "NPCProxyOnEndHypnotizedReaction"
	@@&				= "NPCProxyOnSoulTrappedReaction"
	@@&				= "HearWormOnFrobbedReaction"
	@@&				= "HearWormOnFrobbedHeldReaction"
	@@&				= "EdibleOnBecameFrobTargetReaction"

		[HearWormOnDamagedReaction]
		Rule		= "OnDamagedRule"
		NumActions	= &
		@ Action
		@@&			= "HearWormPlayDamagedAINoise"
		@@&			= "NPCProxyPlayDamagedFX"

			[HearWormPlayDamagedAINoise]
			ActionType		= "SendEvent"
			EventName		= "OnAINoise"
			NumParameters	= &
			@ Parameter
			@@&Name			= "NoiseEntity"
			@@^Value		= "DamagerPE"
			@@&Name			= "NoiseLocation"
			@@^Value		= "LocationPE"
			@@&Name			= "NoiseRadius"
			@@^Value		= "HearWorm_DamagedNoiseRadiusPE"
			@@&Name			= "ExpireTimeBonus"
			@@^Value		= "HearWormWarningExpireTimeBonusPE"

				[HearWorm_DamagedNoiseRadiusPE]
				PEType	= "ConstantFloat"
				Value	= 20.0

		[HearWormOnDiedReaction]
		Rule		= "OnDiedRule"
		NumActions	= &
		@ Action
		@@&			= "CommonAIDeathActions"

		[HearWormOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "HearWormLootComposite"

			[HearWormLootComposite]
			ActionType	= "Composite"
			NumActions	= &
			@ Action
			@@&			= "NPCProxyGiveMoneyAction"
			@@&			= "ConditionalShowLootBook"
			@@&			= "PlayLootSFX"
			@@&			= "BecomeNonFrobbable"
			@@&			= "NPCProxyQueueHide"
			@@&			= "NPCProxyQueueStopBlockingWorld"
			@@&			= "NPCProxyQueueRespawn"
			
		[HearWormOnFrobbedHeldReaction]
		Rule		= "OnFrobbedHeldRule"
		NumActions	= &
		@ Action
		@@&			= "HearWormConditionalEat"

			[HearWormConditionalEat]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "CanAffordTinPE"
			@@^Action		= "HearWormEatComposite"

				[HearWormEatComposite]
				ActionType	= "Composite"
				NumActions	= &
				@ Action
				@@&			= "ConditionalShowFoodBook"
				@@&			= "PlayMeatSFX"
				@@&			= "SendOnEatEvent"
				@@&			= "HearWormLootComposite"

[LizardWatson]
#ShouldDebugRender	= true
EldTransform	= "LizardWatsonTransform"
EldMesh			= "LizardWatsonMesh"
EldCollision	= "LizardWatsonCollision"
EldDropShadow	= "LizardWatsonDropShadow"
EldSensorVision	= "LizardWatsonSensorVision"
EldWatson		= "LizardWatsonWatson"
EldHealth		= "LizardWatsonHealth"
EldParticles	= "."
EldSound		= "."
Reactions		= "LizardWatsonReactions"
PEMap			= "LizardWatsonPEMap"

	[LizardWatsonTransform]
	UseGravity		= true
	AllowImpulses	= false	# Minimize chances of LW encroaching on other entities, since it should be effectively static

	[LizardWatsonMesh]
	Mesh				= "Meshes/lizardman.cms"
	TextureOverride	= "Textures/lizardman-stone_NODXT.tga"
	OffsetZ				= -0.95

	[LizardWatsonCollision]
	IsStatic		= true
	HalfExtentsXY	= 0.35
	HalfExtentsZ	= 0.95
	BlocksEntities	= true
	BlocksTrace		= true

	[LizardWatsonDropShadow]
	Radius				= 0.5
	VoxelCheckOffsetZ	= 0.0
	Alpha				= 0.5
	ShadowFloatZ		= 0.06

	# Vision sensor is used only for initial activation
	[LizardWatsonSensorVision]
	DoPoll					= false
	EyeOffsetZ				= 0.72
	Radius					= 5.0
	ConeAngle				= 60.0	# Half angle
	ConeScaleZ				= 0.333
	DistanceCertaintyFactor	= 1.0	# Distance factor of certainty is worth this much in total score
	CertaintyVelocity		= 0.8
	CertaintyDecay			= 0.2

	[LizardWatsonWatson]
	MinAttackDist	= 2.0	# Won't attack player until it is at least this far
	MaxAttackDist	= 12.0	# Won't attack player beyond this distance
	TeleportDist	= 1.0	# How close do we teleport behind player
	EyeOffsetZ		= 0.72

	[LizardWatsonHealth]
	Health				= 1
	DefaultDamageModMul	= 0.0
	NumDamageTypeMods	= &
	@ DamageTypeMod
	@@&Type				= "Explosive"
	@@^Mul				= 1.0

	[LizardWatsonPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "MeleeImpulse"
	@@^Def	= "NPCProxyMeleeImpulsePE"

	[LizardWatsonReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "LizardWatsonSpawnedReaction"
	@@&				= "OnWatsonTeleportedReaction"
	@@&				= "OnWatsonPrimedReaction"
	@@&				= "OnWatsonActivatedReaction"
	@@&				= "LizardWatsonMeleeConeCheckReaction"
	@@&				= "LizardWatsonOnDiedReaction"

		[LizardWatsonSpawnedReaction]
		Rule		= "OnSpawnedRule"
		NumActions	= &
		@ Action
		@@&			= "LizardWatsonPlayIdleAnim"
		
			[LizardWatsonPlayIdleAnim]
			ActionType	= "EldPlayAnim"
			Animation	= "StatueIdle"

		[LizardWatsonOnDiedReaction]
		Rule		= "OnDiedRule"
		NumActions	= &
		@ Action
		@@&			= "Award_ACH_Watson"
		@@&			= "DestroySelfAction"

			[Award_ACH_Watson]
			ActionType		= "NeonAwardAchievement"
			AchievementTag	= ""

		[OnWatsonTeleportedReaction]
		Rule		= "OnWatsonTeleportedRule"
		NumActions	= &
		@ Action
		@@&			= "LizardWatsonMeleeAttack"
		@@&			= "LizardWatsonPlayAggroAnim"
		@@&			= "PlayWatsonTeleportSound"

			[OnWatsonTeleportedRule]
			Event	= "OnWatsonTeleported"

			[LizardWatsonMeleeAttack]
			ActionType	= "EldCheckCone"
			ConeAngle	= 45.0
			ConeLength	= 1.5
			CheckTag	= "Melee"

			[LizardWatsonPlayAggroAnim]
			ActionType	= "EldPlayAnim"
			Animation	= "StatueAggro"

			[PlayWatsonTeleportSound]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "WatsonTeleportSoundPE"

				[WatsonTeleportSoundPE]
				PEType	= "ConstantString"
				Value	= "WatsonTeleportSound"

		[OnWatsonPrimedReaction]
		Rule		= "OnWatsonPrimedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayWatsonPrimeSound"

			[OnWatsonPrimedRule]
			Event	= "OnWatsonPrimed"

			[PlayWatsonPrimeSound]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "WatsonPrimeSoundPE"

				[WatsonPrimeSoundPE]
				PEType	= "ConstantString"
				Value	= "WatsonPrimeSound"

		[OnWatsonActivatedReaction]
		Rule		= "OnWatsonActivatedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayWatsonActivateSound"
		@@&			= "PlayWatsonActivateVFX"

			[OnWatsonActivatedRule]
			Event	= "OnWatsonActivated"

			[PlayWatsonActivateSound]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "WatsonActivateSoundPE"

				[WatsonActivateSoundPE]
				PEType	= "ConstantString"
				Value	= "WatsonActivateSound"

			[PlayWatsonActivateVFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "WatsonActivateVFXPE"

				[WatsonActivateVFXPE]
				PEType		= "ConstantString"
				Value		= "PS_LizardWatsonDust"

		[LizardWatsonMeleeConeCheckReaction]
		Rule		= "MeleeConeCheckRule"
		NumActions	= &
		@ Action
		@@&			= "LizardWatsonMeleeDealDamage"
		@@&			= "MeleeApplyImpulse"

			[LizardWatsonMeleeDealDamage]
			ActionType		= "SendEvent"
			EventName		= "TakeDamage"
			Recipient		= "CheckedPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "DamageAmount"
			@@^Value		= "LizardWatsonMeleeDamagePE"
			@@&Name			= "Damager"
			@@^Value		= "SelfPE"
			@@&Name			= "DamageType"
			@@^Value		= "BluntDamageTypePE"

				[LizardWatsonMeleeDamagePE]
				PEType	= "EldHardSwitch"
				Normal	= "LizardWatsonMeleeDamageNormalPE"
				Hard	= "LizardWatsonMeleeDamageHardPE"

					[LizardWatsonMeleeDamageNormalPE]
					PEType	= "ConstantInt"
					Value	= 2

					[LizardWatsonMeleeDamageHardPE]
					PEType	= "ConstantInt"
					Value	= 5

# Rm
[Nightgaunt]
#ShouldDebugRender	= true
Extends				= "FlyingNPCProxy"
EldTransform		= "NightgauntTransform"
EldMesh				= "NightgauntMesh"
EldCollision		= "NightgauntCollision"
EldHealth			= "NightgauntHealth"
EldFrobbable		= "NightgauntFrobbable"
EldAIMotion			= "NightgauntAIMotion"
EldHeadTracker		= "NightgauntHeadTracker"
EldSensorHearing	= "NPCProxySensorHearing"
PEMap				= "NightgauntPEMap"

	[NightgauntTransform]
	SpeedLimit	= 1.0

	[NightgauntMesh]
	Mesh				= "Meshes/nightgaunt.cms"
	OffsetZ				= -0.8
	IrradianceOffsetZ	= 0.7
	MaterialOverride	= "Material_EntityAnimatedAlphaTest"

	[NightgauntCollision]
	HalfExtentsXY					= 0.3
	HalfExtentsZ					= 0.8
	BlocksTrace						= true
	FrictionTargetPercentVelocity	= 1.0	# No friction

	[NightgauntHealth]
	Health			= 3

	[NightgauntFrobbable]
	ExtentsX		= 0.875
	ExtentsY		= 0.875
	ExtentsZ		= 0.1875
	OffsetZ			= -0.6125
	IsFrobbable		= false
	FriendlyName	= "Corpse"
	FrobVerb		= "Loot"
	HoldVerb		= "EatCorpse"

	[NightgauntAIMotion]
	AirAcceleration			= 10.0
	TurnSpeed				= 180.0		# Degrees per second
	FollowValidateTime		= 1.0
	StepReachedThreshold	= 0.1
	TurnReachedThreshold	= 5.0		# Degrees
	IsFlying				= true
	MaxPathSteps			= 200
	IdleAnimation			= "Idle"
	WalkAnimation			= "Idle"
	AnimationResource		= "Anim"

	[NightgauntHeadTracker]
	HeadBoneName	= "Head"
	HeadOffsetY		= -0.13
	HeadOffsetZ		= 1.08		# Offset from mesh
	EyesOffsetY		= -0.13		# Not really! But this makes it work. Needs to be aligned with head offset, I guess.
	EyesOffsetZ		= 0.54		# Offset from transform, not mesh, because hurrr
	MaxRotation		= 60.0		# Degrees
	LookVelocity	= 270.0		# Degrees per second

	[NightgauntPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "IsEdible"
	@@^Def	= "TruePE"
	@@&Key	= "HypnotizeDuration"
	@@^Def	= "FloatBigNumberPE"
	@@&Key	= "RangedAttackWarmupTime"
	@@^Def	= "NPCProxyRangedAttackWarmupTimePE"
	@@&Key	= "Projectile"
	@@^Def	= "ProjectileSelectorPE"
	@@&Key	= "MoneyBase"
	@@^Def	= "NPCProxyMoneyBasePE"
	@@&Key	= "BulletsBase"
	@@^Def	= "NPCProxyBulletsBasePE"
# Rm

[InsaneFrogman]
#ShouldDebugRender	= true
EldTransform		= "NPCProxyTransform"
EldCollision		= "NPCProxyCollision"
EldFrobbable		= "NPCProxyFrobbable"
EldMesh				= "NPCProxyMesh"
EldSound			= "."
EldParticles		= "."
EldDropShadow		= "NPCProxyDropShadow"
EldHealth			= "InsaneFrogmanHealth"
Reactions			= "InsaneFrogmanReactions"
PEMap				= "InsaneFrogmanPEMap"

	[InsaneFrogmanPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "IsEdible"
	@@^Def	= "TruePE"
	@@&Key	= "MoneyBase"
	@@^Def	= "NPCProxyMoneyBasePE"
	@@&Key	= "BulletsBase"
	@@^Def	= "NPCProxyBulletsBasePE"
	@@&Key	= "DamagedBark"
	@@^Def	= "NPCProxyDamagedBarkPE"

	[InsaneFrogmanHealth]
	Health			= 1

	[InsaneFrogmanReactions]
	NumReactions = &
	@ Reaction
	@@& = "NPCProxyDeathReaction"
	@@& = "NPCProxyOnFrobbedReaction"
	@@&	= "NPCProxyOnFrobbedHeldReaction"
	@@&	= "EdibleOnBecameFrobTargetReaction"
	@@& = "NPCProxyDamagedReaction"
	@@&	= "OnLandedHardReaction"
	# NOTE: Keep in sync with AI reactions
	@@&	= "InsaneFrogmanOnSpawnReaction"

		[InsaneFrogmanOnSpawnReaction]
		Rule		= "OnSpawnedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayInsaneAnim"

			[PlayInsaneAnim]
			ActionType	= "EldPlayAnim"
			Animation	= "Insane"
			Loop		= true
			PlayRatePE	= "InsanePlayRatePE"

				[InsanePlayRatePE]
				PEType	= "RandomFloat"
				ValueA	= 0.8
				ValueB	= 1.25

[ElderThing]
Extends				= "NPCProxy"
EldDamager			= "ElderThingDamager"
EldMesh				= "ElderThingMesh"
EldDropShadow		= "ElderThingDropShadow"
EldCollision		= "ElderThingCollision"
EldHealth			= "ElderThingHealth"
EldAIMotion			= "ElderThingAIMotion"
EldHeadTracker		= ""
EldSensorVision		= "ElderThingSensorVision"
PEMap				= "ElderThingPEMap"

	[ElderThingDamager]
	DamagerName	= "ElderThing"

	[ElderThingMesh]
	Extends	= "NPCProxyMesh"
	Mesh	= "Meshes/elder-thing.cms"
	OffsetZ	= -1.25

	[ElderThingDropShadow]
	Extends				= "NPCProxyDropShadow"
	Radius				= 1.0
	VoxelCheckOffsetZ	= -1.0

	[ElderThingCollision]
	Extends			= "NPCProxyCollision"
	HalfExtentsXY	= 0.3125
	HalfExtentsZ	= 1.25

	[ElderThingHealth]
	Extends				= "NPCProxyHealth"
	Health				= 7

	[ElderThingAIMotion]
	Extends				= "NPCProxyAIMotion"
	LandAcceleration	= 12.0
	TurnSpeed			= 120.0		# Degrees per second

	[ElderThingSensorVision]
	Extends				= "SquidmanSensorVision"

	[ElderThingPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "IsEdible"
	@@^Def	= "TruePE"
	@@&Key	= "HypnotizeDuration"
	@@^Def	= "ElderThingHypnotizeDurationPE"
	@@&Key	= "MeleeAttackCooldownTime"
	@@^Def	= "NPCProxyMeleeAttackCooldownTime"
	@@&Key	= "RangedAttackWarmupTime"
	@@^Def	= "ElderThingRangedAttackWarmupTimePE"
	@@&Key	= "MeleeImpulse"
	@@^Def	= "ElderThingMeleeImpulsePE"
	@@&Key	= "Projectile"
	@@^Def	= "LizardmanProjectilePE"
	@@&Key	= "MoneyBase"
	@@^Def	= "NPCProxyMoneyBasePE"
	@@&Key	= "BulletsBase"
	@@^Def	= "NPCProxyBulletsBasePE"
	@@&Key	= "PatrolBark"
	@@^Def	= "ElderThingPatrolBarkPE"
	@@&Key	= "SearchBark"
	@@^Def	= "ElderThingSearchBarkPE"
	@@&Key	= "CombatBark"
	@@^Def	= "ElderThingCombatBarkPE"
	@@&Key	= "AttackBark"
	@@^Def	= "ElderThingAttackBarkPE"
	@@&Key	= "DamagedBark"
	@@^Def	= "ElderThingDamagedBarkPE"

		[ElderThingHypnotizeDurationPE]
		PEType	= "ConstantFloat"
		Value	= 10.0

		[ElderThingRangedAttackWarmupTimePE]
		PEType	= "RandomFloat"
		ValueA	= 0.5
		ValueB	= 1.0

		[ElderThingMeleeImpulsePE]
		PEType	= "ConstantFloat"
		Value	= 15.0

		[ElderThingPatrolBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_ElderThing_Ambient"

		[ElderThingSearchBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_ElderThing_Search"
		
		[ElderThingCombatBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_ElderThing_Combat"
		
		[ElderThingAttackBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_ElderThing_Attack"

		[ElderThingDamagedBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_ElderThing_Damaged"

[Migo]
#ShouldDebugRender	= true
Extends				= "NPCProxy"
EldDamager			= "MigoDamager"
EldMesh				= "MigoMesh"
EldDropShadow		= "MigoDropShadow"
EldCollision		= "MigoCollision"
EldFrobbable		= "MigoFrobbable"
EldHealth			= "MigoHealth"
EldAIMotion			= "MigoAIMotion"
EldHeadTracker		= ""
EldSensorVision		= "MigoSensorVision"
EldFaction			= "Faction_Bug"
RodinBehaviorTree	= "MigoBehaviorTree"
PEMap				= "MigoPEMap"
Reactions			= "MigoReactions"

	[MigoDamager]
	DamagerName	= "Migo"

	[MigoMesh]
	Extends	= "NPCProxyMesh"
	Mesh	= "Meshes/mi-go.cms"
	OffsetZ	= -0.95

	[MigoDropShadow]
	Extends	= "NPCProxyDropShadow"
	Radius	= 0.625

	[MigoCollision]
	Extends			= "NPCProxyCollision"
	HalfExtentsXY	= 0.375
	HalfExtentsZ	= 0.95

	[MigoFrobbable]
	Extends			= "NPCProxyFrobbable"
	ExtentsX		= 0.5
	ExtentsY		= 0.5
	ExtentsZ		= 0.75
	OffsetZ			= -0.2

	[MigoHealth]
	Extends	= "NPCProxyHealth"
	Health	= 9

	[MigoAIMotion]
	Extends				= "NPCProxyAIMotion"
	LandAcceleration	= 24.0
	TurnSpeed			= 240.0		# Degrees per second

	[MigoSensorVision]
	Extends		= "SquidmanSensorVision"
	EyeOffsetZ	= 0.8

	[MigoBehaviorTree]
	RootNode		= "CommonBT_Root"
	NumLookupNodes	= &
	@ LookupNode
	@@&Key			= "Behave"
	@@^Value		= "MigoBT_Behave"
	@@&Key			= "React"
	@@^Value		= "ProxyBT_React"
	@@&Key			= "PursueCombatTarget"
	@@^Value		= "MigoBT_PursueCombatTarget"

	[MigoPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "IsEdible"
	@@^Def	= "TruePE"
	@@&Key	= "HypnotizeDuration"
	@@^Def	= "MigoHypnotizeDurationPE"
	@@&Key	= "MeleeAttackCooldownTime"
	@@^Def	= "NPCProxyMeleeAttackCooldownTime"
	@@&Key	= "MeleeImpulse"
	@@^Def	= "MigoMeleeImpulsePE"
	@@&Key	= "MoneyBase"
	@@^Def	= "NPCProxyMoneyBasePE"
	@@&Key	= "BulletsBase"
	@@^Def	= "NPCProxyBulletsBasePE"
	@@&Key	= "PatrolBark"
	@@^Def	= "MigoPatrolBarkPE"
	@@&Key	= "SearchBark"
	@@^Def	= "MigoSearchBarkPE"
	@@&Key	= "CombatBark"
	@@^Def	= "MigoCombatBarkPE"
	@@&Key	= "AttackBark"
	@@^Def	= "MigoAttackBarkPE"
	@@&Key	= "DamagedBark"
	@@^Def	= "MigoDamagedBarkPE"

		[MigoHypnotizeDurationPE]
		PEType	= "ConstantFloat"
		Value	= 8.0

		[MigoMeleeImpulsePE]
		PEType	= "ConstantFloat"
		Value	= 10.0

		[MigoPatrolBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Migo_Ambient"

		[MigoSearchBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Migo_Search"
		
		[MigoCombatBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Migo_Combat"
		
		[MigoAttackBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Migo_Attack"

		[MigoDamagedBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Migo_Damaged"

	# Adapted from NPCProxyReactions, keep in sync
	[MigoReactions]
	NumReactions = &
	@ Reaction
	@@&	= "NPCProxyOnSetHardModeReaction"
	@@&	= "NPCProxyOnInitializedQueuedHardModeReaction"
	@@& = "MigoDeathReaction"
	@@& = "NPCProxyOnFrobbedReaction"
	@@&	= "NPCProxyOnFrobbedHeldReaction"
	@@&	= "EdibleOnBecameFrobTargetReaction"
	@@& = "NPCProxyDamagedReaction"
	@@& = "NPCProxyProjectileFireReaction"
	@@& = "NPCProxyMeleeConeCheckReaction"
	@@&	= "NPCProxyOnHypnotizedReaction"
	@@&	= "NPCProxyOnEndHypnotizedReaction"
	@@&	= "NPCProxyOnSoulTrappedReaction"
	@@&	= "OnLandedHardReaction"
	@@&	= "MigoExplodeReaction"
	@@&	= "MigoExplodeSphereCheckReaction"

		[MigoDeathReaction]
		Rule		= "OnDiedRule"
		NumActions	= &
		@ Action
		@@&			= "CommonAIDeathActions"
		@@&			= "QueueMigoExplode"

			[QueueMigoExplode]
			ActionType		= "SendEvent"
			EventName		= "Explode"
			Recipient		= "SelfPE"
			QueueEvent		= true
			DispatchDelay	= 1.2

		[MigoExplodeReaction]
		Rule		= "OnExplodeRule"
		NumActions	= &
		@ Action
		@@&			= "MigoExplodeSphereCheck"
		@@&			= "PlayMigoExplodeVFX"
		@@&			= "PlayMigoExplodeSFX"

			[OnExplodeRule]
			Event	= "Explode"

			[MigoExplodeSphereCheck]
			ActionType	= "EldCheckSphere"
			Radius		= 1.5
			CheckTag	= "Explode"

			[PlayMigoExplodeVFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "MigoExplodeVFXPE"

				[MigoExplodeVFXPE]
				PEType		= "ConstantString"
				Value		= "PS_MigoExplode"

			[PlayMigoExplodeSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "MigoExplodeSFXPE"

				[MigoExplodeSFXPE]
				PEType	= "ConstantString"
				Value	= "MigoExplodeSound"

		[MigoExplodeSphereCheckReaction]
		Rule		= "ExplodeSphereCheckRule"
		NumActions	= &
		@ Action
		@@&			= "MigoExplodeDealDamage"

			[MigoExplodeDealDamage]
			ActionType		= "SendEvent"
			EventName		= "TakeDamage"
			Recipient		= "CheckedPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "DamageAmount"
			@@^Value		= "MigoExplodeDamagePE"
			@@&Name			= "Damager"
			@@^Value		= "SelfPE"
			@@&Name			= "DamageType"
			@@^Value		= "PoisonDamageTypePE"

				[MigoExplodeDamagePE]
				PEType	= "EldHardSwitch"
				Normal	= "MigoExplodeDamageNormalPE"
				Hard	= "MigoExplodeDamageHardPE"

					[MigoExplodeDamageNormalPE]
					PEType	= "ConstantInt"
					Value	= 1

					[MigoExplodeDamageHardPE]
					PEType	= "ConstantInt"
					Value	= 2

[Yog]
#ShouldDebugRender	= true
EldTransform	= "."
EldParticles	= "YogParticles"
EldSound		= "YogSound"
EldAIMotion		= "YogAIMotion"
Label			= "YogLabel"
Reactions		= "YogReactions"

	[YogParticles]
	NumParticleSystems	= &
	@ ParticleSystem
	@@&					= "PS_Yog1"
	@@&					= "PS_Yog1b"
	@@&					= "PS_Yog2"
	@@&					= "PS_Yog3"
	@@&					= "PS_Yog4"

	[YogSound]
	Sound	= "YogAmbientSound"

	[YogAIMotion]
	AirAcceleration			= 6.0
	TurnSpeed				= 180.0		# Degrees per second
	FollowValidateTime		= 1.0
	StepReachedThreshold	= 0.1
	TurnReachedThreshold	= 5.0		# Degrees
	IsFlying				= true
	MaxPathSteps			= 200

	[YogLabel]
	Label	= "Yog"

	[YogReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "YogOnInitializedQueuedReaction"
	@@&				= "YogOnKeysTakenReaction"

		[YogOnKeysTakenReaction]
		Rule		= "OnKeysTakenRule"
		NumActions	= &
		@ Action
		@@&			= "YogFollowPlayerAction"

			[OnKeysTakenRule]
			Event	= "KeysTaken"

		[YogOnInitializedQueuedReaction]
		Rule		= "OnInitializedQueuedRule"
		NumActions	= &
		@ Action
		@@&			= "YogConditionalFollowPlayerAction"

			[YogConditionalFollowPlayerAction]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "PlayerHasAirplaneKeysPE"
			@@^Action		= "YogFollowPlayerAction"
			@@&Condition	= "TruePE"
			@@^Action		= "YogFollowSelfAction"

				[YogFollowPlayerAction]
				ActionType		= "SendEvent"
				EventName		= "Follow"
				Recipient		= "SelfPE"
				NumParameters	= &
				@ Parameter
				@@&Name			= "FollowEntity"
				@@^Value		= "PlayerPE"
				@@&Name			= "DeflectionRadius"
				@@^Value		= "YogDeflectionRadiusPE"

					[YogDeflectionRadiusPE]
					PEType	= "ConstantFloat"
					Value	= 3.0

				[YogFollowSelfAction]
				ActionType		= "SendEvent"
				EventName		= "Follow"
				Recipient		= "SelfPE"
				NumParameters	= &
				@ Parameter
				@@&Name			= "FollowEntity"
				@@^Value		= "SelfPE"

[YogSpawner]
EldTransform	= "."
Reactions		= "YogSpawnerReactions"

	[YogSpawnerReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "YogSpawnerOnInitializedQueuedReaction"

		[YogSpawnerOnInitializedQueuedReaction]
		Rule		= "OnInitializedQueuedRule"
		NumActions	= &
		@ Action
		@@&			= "ConditionalSpawnYogAction"

			[ConditionalSpawnYogAction]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "ShouldSpawnYogPE"
			@@^Action		= "SpawnYogAction"

				[ShouldSpawnYogPE]
				PEType	= "AND"
				InputA	= "PlayerHasAirplaneKeysPE"
				InputB	= "YogIsNotSpawnedPE"

					[YogIsNotSpawnedPE]
					PEType	= "NOT"
					Input	= "YogPE"

				[SpawnYogAction]
				ActionType			= "EldSpawnEntity"
				Entity				= "Yog"
				LocationOverridePE	= "PlayerLocationPE"

[Penguin_Albino]
Extends			= "Penguin"
EldMesh			= "Penguin_AlbinoMesh"
EldHeadTracker	= ""
EldSensorVision	= "Penguin_AlbinoSensorVision"

	[Penguin_AlbinoMesh]
	Extends			= "PenguinMesh"
	TextureOverride	= "Textures/penguin-albino_NODXT.tga"

	[Penguin_AlbinoSensorVision]
	Extends				= "PenguinSensorVision"
	Radius				= 5.0
	CertaintyVelocity	= 0.8
	CertaintyDecay		= 0.2

[Penguin]
Extends				= "Fishman"
EldDamager			= "PenguinDamager"
EldMesh				= "PenguinMesh"
EldDropShadow		= "PenguinDropShadow"
EldCollision		= "PenguinCollision"
EldHealth			= "PenguinHealth"
EldAIMotion			= "PenguinAIMotion"
EldHeadTracker		= "PenguinHeadTracker"
EldSensorVision		= "PenguinSensorVision"
EldFaction			= "Faction_Bug"
PEMap				= "PenguinPEMap"

	[PenguinDamager]
	DamagerName	= "Penguin"

	[PenguinMesh]
	Extends	= "NPCProxyMesh"
	Mesh	= "Meshes/penguin.cms"
	OffsetZ	= -1.3125

	[PenguinDropShadow]
	Extends				= "NPCProxyDropShadow"
	Radius				= 0.5
	VoxelCheckOffsetZ	= -1.0

	[PenguinCollision]
	Extends			= "NPCProxyCollision"
	HalfExtentsXY	= 0.4375
	HalfExtentsZ	= 1.3125

	[PenguinHealth]
	Extends	= "NPCProxyHealth"
	Health	= 11

	[PenguinAIMotion]
	Extends				= "NPCProxyAIMotion"
	LandAcceleration	= 8.0
	TurnSpeed			= 90.0		# Degrees per second

	[PenguinHeadTracker]
	Extends			= "NPCProxyHeadTracker"
	HeadOffsetY		= 0.059
	HeadOffsetZ		= 2.403		# Offset from mesh
	EyesOffsetY		= 0.059		# Not really! But this makes it work. Needs to be aligned with head offset, I guess.
	EyesOffsetZ		= 1.1875	# Offset from transform, not mesh, because hurrr

	[PenguinSensorVision]
	Extends		= "SquidmanSensorVision"
	EyeOffsetZ	= 1.1875

	[PenguinPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "IsEdible"
	@@^Def	= "TruePE"
	@@&Key	= "HypnotizeDuration"
	@@^Def	= "PenguinHypnotizeDurationPE"
	@@&Key	= "MeleeAttackCooldownTime"
	@@^Def	= "NPCProxyMeleeAttackCooldownTime"
	@@&Key	= "MeleeImpulse"
	@@^Def	= "PenguinMeleeImpulsePE"
	@@&Key	= "MoneyBase"
	@@^Def	= "NPCProxyMoneyBasePE"
	@@&Key	= "BulletsBase"
	@@^Def	= "NPCProxyBulletsBasePE"
	@@&Key	= "PatrolBark"
	@@^Def	= "PenguinPatrolBarkPE"
	@@&Key	= "SearchBark"
	@@^Def	= "PenguinSearchBarkPE"
	@@&Key	= "CombatBark"
	@@^Def	= "PenguinCombatBarkPE"
	@@&Key	= "AttackBark"
	@@^Def	= "PenguinAttackBarkPE"
	@@&Key	= "DamagedBark"
	@@^Def	= "PenguinDamagedBarkPE"

		[PenguinHypnotizeDurationPE]
		PEType	= "ConstantFloat"
		Value	= 20.0

		[PenguinMeleeImpulsePE]
		PEType	= "ConstantFloat"
		Value	= 15.0

		[PenguinPatrolBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Penguin_Ambient"

		[PenguinSearchBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Penguin_Search"
		
		[PenguinCombatBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Penguin_Combat"
		
		[PenguinAttackBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Penguin_Attack"

		[PenguinDamagedBarkPE]
		PEType	= "ConstantString"
		Value	= "VO_Penguin_Damaged"

[Azathoth]
#ShouldDebugRender	= true
EldTransform	= "."
EldParticles	= "AzathothParticles"
EldSound		= "AzathothSound"
EldAIMotion		= "AzathothAIMotion"
Label			= "AzathothLabel"
Reactions		= "AzathothReactions"

	[AzathothParticles]
	NumParticleSystems	= &
	@ ParticleSystem
	@@&					= "PS_Azathoth1"
	@@&					= "PS_Azathoth1b"
	@@&					= "PS_Azathoth2"
	@@&					= "PS_Azathoth3"
	@@&					= "PS_Azathoth4"

	[AzathothSound]
	Sound	= "AzathothAmbientSound"

	[AzathothAIMotion]
	AirAcceleration			= 6.0
	TurnSpeed				= 180.0		# Degrees per second
	FollowValidateTime		= 1.0
	StepReachedThreshold	= 0.1
	TurnReachedThreshold	= 5.0		# Degrees
	IsFlying				= true
	MaxPathSteps			= 200

	[AzathothLabel]
	Label	= "Azathoth"

	[AzathothReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "AzathothOnSpawnedReaction"
	@@&				= "AzathothOnInitializedQueuedReaction"
	@@&				= "AzathothOnMovedReaction"

		[AzathothOnSpawnedReaction]
		Rule		= "OnSpawnedRule"
		NumActions	= &
		@ Action
		@@&			= "SendOnAzathothSpawnedEvent"

			[SendOnAzathothSpawnedEvent]
			ActionType	= "SendEvent"
			EventName	= "OnAzathothSpawned"

		[AzathothOnMovedReaction]
		Rule		= "OnMovedRule"
		NumActions	= &
		@ Action
		@@&			= "ConditionalKillPlayerAction"

			[OnMovedRule]
			Event	= "OnMoved"

			# It really didn't work to give Azathoth collision (it would run
			# into walls, etc., so just do a radial test here).
			[ConditionalKillPlayerAction]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "IsWithinKillRadiusOfPlayerPE"
			@@^Action		= "KillPlayerAction"

				[IsWithinKillRadiusOfPlayerPE]
				PEType	= "Conditional"
				Op		= "LTE"
				InputA	= "DistanceToPlayerPE"
				InputB	= "AzathothKillRadiusPE"

					[DistanceToPlayerPE]
					PEType	= "EldDistance"
					InputA	= "SelfPE"
					InputB	= "PlayerPE"

					[AzathothKillRadiusPE]
					PEType	= "ConstantFloat"
					Value	= 1.0

				[KillPlayerAction]
				ActionType		= "SendEvent"
				EventName		= "TakeDamage"
				Recipient		= "PlayerPE"
				NumParameters	= &
				@ Parameter
				@@&Name			= "DamageAmount"
				@@^Value		= "AzathothKillDamageAmountPE"
				@@&Name			= "Damager"
				@@^Value		= "SelfPE"
				@@&Name			= "DamageType"
				@@^Value		= "KillDamageTypePE"

					[AzathothKillDamageAmountPE]
					PEType	= "ConstantInt"
					Value	= 100000

					[KillDamageTypePE]
					PEType	= "ConstantString"
					Value	= "Kill"

		[AzathothOnInitializedQueuedReaction]
		Rule		= "OnInitializedQueuedRule"
		NumActions	= &
		@ Action
		@@&			= "AzathothFollowPlayerAction"

				[AzathothFollowPlayerAction]
				ActionType		= "SendEvent"
				EventName		= "Follow"
				Recipient		= "SelfPE"
				NumParameters	= &
				@ Parameter
				@@&Name			= "FollowEntity"
				@@^Value		= "PlayerPE"

[AzathothSpawner]
EldAzathoth		= "AzathothSpawnerAzathoth"
EldTransform	= "AzathothSpawnerTransform"
EldMapMarker	= "AzathothSpawnerMapMarker"
EldParticles	= "AzathothSpawnerParticles"
EldSound		= "."
EldLight		= "AzathothSpawnerLight"
Reactions		= "AzathothSpawnerReactions"

	[AzathothSpawnerTransform]
	CanMove	= false

	[AzathothSpawnerAzathoth]
	AzathothSpawnTime	= 180.0

	[AzathothSpawnerMapMarker]
	MarkAsRoom	= true
	Texture		= "Textures/Minimap/azathoth_NODXT.tga"

	[AzathothSpawnerParticles]
	Particles	= "PS_AzathothSpawner"

	[AzathothSpawnerLight]
	Radius	= 9.0
	ColorR	= 2.25
	ColorG	= 0.375
	ColorB	= 3.0

	[AzathothSpawnerReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "AzathothSpawnerOnInitializedReaction"
	@@&				= "AzathothSpawnerSpawnAzathothReaction"
	@@&				= "AzathothSpawnerAwardAzathothAchievementReaction"

		[AzathothSpawnerOnInitializedReaction]
		Rule		= "OnInitializedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayAzathothSound"

			[PlayAzathothSound]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "AzathothSoundPE"
			@@&Name			= "Attached"
			@@^Value		= "TruePE"

				[AzathothSoundPE]
				PEType	= "ConstantString"
				Value	= "AzathothAmbientSound"

		[AzathothSpawnerSpawnAzathothReaction]
		Rule		= "SpawnAzathothRule"
		NumActions	= &
		@ Action
		@@&			= "ConditionalShowAzathothBook"
		@@&			= "SpawnAzathothAction"
		@@&			= "RemoveLightAction"
		@@&			= "HideSelfAction"
		@@&			= "StopSFXAction"
		@@&			= "QueueAzathothAchievement"

			[SpawnAzathothRule]
			Event	= "SpawnAzathoth"

			[ConditionalShowAzathothBook]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "HasNotReadAzathothBook"
			@@^Action		= "TeachAzathothBook"

				[HasNotReadAzathothBook]
				PEType	= "NOT"
				Input	= "HasReadAzathothBook"

					[HasReadAzathothBook]
					PEType	= "EldGetPersistentVar"
					Key		= "HasReadAzathothBook"

				[TeachAzathothBook]
				ActionType	= "Composite"
				NumActions	= &
				@ Action
				@@&			= "ShowAzathothBook"
				@@&			= "MarkAzathothBookRead"

					[ShowAzathothBook]
					ActionType	= "EldShowBook"
					BookString	= "Book_Azathoth"

					[MarkAzathothBookRead]
					ActionType	= "EldSetPersistentVar"
					Key			= "HasReadAzathothBook"
					ValuePE		= "TruePE"

			[SpawnAzathothAction]
			ActionType	= "EldSpawnEntity"
			Entity		= "Azathoth"

			[StopSFXAction]
			ActionType		= "SendEvent"
			EventName		= "StopSound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Category"
			@@^Value		= "SFXPE"

			[QueueAzathothAchievement]
			ActionType		= "SendEvent"
			EventName		= "AwardAzathothAchievement"
			Recipient		= "SelfPE"
			DispatchDelay	= 180.0		# Three minutes

		[AzathothSpawnerAwardAzathothAchievementReaction]
		Rule		= "AwardAzathothAchievementRule"
		NumActions	= &
		@ Action
		@@&			= "Award_ACH_Azathoth"

			[AwardAzathothAchievementRule]
			Event			= "AwardAzathothAchievement"
			NumConditions	= &
			@ Condition
			@@&				= "IsPlayerAlivePE"

				[IsPlayerAlivePE]
				PEType		= "PushContext"
				EntityPE	= "PlayerPE"
				Input		= "IsAlivePE"

			[Award_ACH_Azathoth]
			ActionType		= "NeonAwardAchievement"
			AchievementTag	= ""