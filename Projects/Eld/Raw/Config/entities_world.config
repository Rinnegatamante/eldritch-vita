[SmallTorchUnlit]
EldTransform	= "SmallTorchTransform"
EldMesh			= "SmallTorchMesh"
EldAnchor		= "SmallTorchAnchor"
Reactions		= "SmallTorchReactions"

	[SmallTorchTransform]
	CanMove	= false

	[SmallTorchMesh]
	Mesh					= "Meshes/sconce.cms"
	UseBlendedIrradiance	= false

	[SmallTorchAnchor]
	AnchorDirectionY	= -1.0

	[SmallTorchReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "DestroyOnUnanchoredReaction"

[SmallTorch]
Extends			= "SmallTorchUnlit"
EldLight		= "SmallTorchLight"
EldParticles	= "SmallTorchParticles"

	[SmallTorchLight]
	Radius = 3.0
	ColorR = 1.25
	ColorG = 0.75
	ColorB = 0.25

	[SmallTorchParticles]
	CullDistance		= 45.0
	NumParticleSystems	= &
	@ ParticleSystem
	@@&					= "PS_Torch"

[AsylumEndLamp]
Extends		= "SmallLamp"
EldLight	= "AsylumEndLamp_Light"

	[AsylumEndLamp_Light]
	Radius = 16.0
	ColorR = 0.9
	ColorG = 0.3
	ColorB = 0.1

[SmallLamp]
Extends			= "SmallTorchUnlit"
EldMesh			= "SmallLampMesh"
EldLight		= "SmallLampLight"

	[SmallLampMesh]
	Mesh					= "Meshes/lantern.cms"
	UseBlendedIrradiance	= false
	ConstantIrradianceR		= 0.3
	ConstantIrradianceG		= 0.3
	ConstantIrradianceB		= 0.3

	[SmallLampLight]
	Radius = 6.0
	ColorR = 1.1
	ColorG = 0.9
	ColorB = 0.7

[ControlRoomLight]
EldTransform	= "."
EldLight		= "ControlRoomLightLight"

	[ControlRoomLightLight]
	Radius = 6.0
	ColorR = 0.4
	ColorG = 0.2
	ColorB = 0.5

[Mushrooms]
EldTransform	= "MushroomsTransform"
EldMesh			= "MushroomsMesh"
EldAnchor		= "MushroomsAnchor"
EldLight		= "MushroomsLight"
Reactions		= "MushroomsReactions"

	[MushroomsTransform]
	CanMove	= false

	[MushroomsMesh]
	Mesh					= "Meshes/mushrooms.cms"
	UseBlendedIrradiance	= false
	OffsetZ					= -0.5

	[MushroomsAnchor]
	AnchorDirectionZ	= -1.0

	[MushroomsLight]
	Radius = 2.5
	ColorR = 0.4
	ColorG = 1.2
	ColorB = 2.0

	[MushroomsReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "DestroyOnUnanchoredReaction"

[PatrolPoint]
EldTransform		= "."
EldMarkup			= "PatrolPointMarkup"

	[PatrolPointMarkup]
	Markup = "Patrol"

[LibraryChest]
Extends			= "Chest"
EldMapMarker	= ""

[Chest]
#ShouldDebugRender	= true
EldTransform		= "ChestTransform"
EldCollision		= "ChestCollision"
EldMesh				= "ChestMesh"
EldFrobbable		= "ChestFrobbable"
EldMapMarker		= "ChestMapMarker"
Reactions			= "ChestReactions"

	[ChestTransform]
	CanMove	= false

	[ChestCollision]
	IsStatic		= true
	HalfExtentsX	= 0.875
	HalfExtentsY	= 0.375
	HalfExtentsZ	= 0.375
	BlocksEntities	= true
	BlocksTrace		= true

	[ChestMesh]
	Mesh			= "Meshes/chest.cms"

	[ChestFrobbable]
	UseMeshExtents	= true
	ExtentsFatten	= 0.05
	FriendlyName	= "Chest"
	FrobVerb		= "Open"

	[ChestMapMarker]
	MarkAsRoom	= true
	Texture		= "Textures/Minimap/bank_NODXT.tga"

	[ChestReactions]
	NumReactions = &
	@ Reaction
	@@& = "ChestOnFrobbedReaction"

		[ChestOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "ChestOnFrobbedShowUI"
		@@&			= "ChestPlayOpenAnim"
		@@&			= "ConditionalShowChestBook"

			[ConditionalShowChestBook]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "HasNotReadChestBook"
			@@^Action		= "TeachChestBook"

				[HasNotReadChestBook]
				PEType	= "NOT"
				Input	= "HasReadChestBook"

					[HasReadChestBook]
					PEType	= "EldGetPersistentVar"
					Key		= "HasReadChestBook"

				[TeachChestBook]
				ActionType	= "Composite"
				NumActions	= &
				@ Action
				@@&			= "ShowChestBook"
				@@&			= "MarkChestBookRead"

					[MarkChestBookRead]
					ActionType	= "EldSetPersistentVar"
					Key			= "HasReadChestBook"
					ValuePE		= "TruePE"

			[ChestOnFrobbedShowUI]
			ActionType	= "UIPushScreen"
			Screen		= "BankScreen"

			[ChestPlayOpenAnim]
			ActionType	= "EldPlayAnim"
			Animation	= "Close"

[AsylumPortal]
ShouldDebugCheckSpawnClearance	= false
EldTransform	= "AsylumPortal_Transform"
EldCollision	= "AsylumPortal_Collision"
EldLight		= "AsylumPortal_Light"
EldParticles	= "AsylumPortal_Particles"
EldSound		= "AsylumPortal_Sound"
EldHUDMarker	= "ExitDoorDownHUDMarker"
EldMapMarker	= "ExitDoorDownMapMarker"
Reactions		= "AsylumPortal_Reactions"

	[AsylumPortal_Transform]
	CanMove	= false

	[AsylumPortal_Collision]
	HalfExtentsXY	= 0.5
	HalfExtentsZ	= 1.0

	[AsylumPortal_Light]
	Radius	= 6.0
	ColorR	= 2.27
	ColorG	= 1.05
	ColorB	= 0.31

	[AsylumPortal_Particles]
	NumParticleSystems	= &
	@ ParticleSystem
	@@&					= "PS_AsylumPortal_Smoke"
	@@&					= "PS_AsylumPortal_Sparkles"

	[AsylumPortal_Sound]
	Sound	= "AsylumPortal_Sound"

	[AsylumPortal_Reactions]
	NumReactions	= &
	@ Reaction
	@@&				= "LevelEndTriggerOnTouchedPlayerReaction"

		[LevelEndTriggerOnTouchedPlayerReaction]
		Rule		= "OnTouchedPlayerRule"
		NumActions	= &
		@ Action
		@@&			= "ExitDoorDownGoToLevel"

			[OnTouchedPlayerRule]
			Event		= "OnTouched"
			NumCriteria	= &
			@ Criterion
			@@&Name		= "Touched"
			@@^Min		= "PlayerPE"

[ExitDoorDown]
ShouldDebugCheckSpawnClearance	= false
EldTransform		= "."
EldMesh				= "ExitDoorDownMesh"
EldCollision		= "ExitDoorDownCollision"
EldFrobbable		= "ExitDoorDownFrobbable"
EldHUDMarker		= "ExitDoorDownHUDMarker"
EldMapMarker		= "ExitDoorDownMapMarker"
Reactions			= "ExitDoorDownReactions"

	[ExitDoorDownMesh]
	Mesh				= "Meshes/exit-door.cms"
	IrradianceOffsetZ	= 1.0

	[ExitDoorDownCollision]
	IsStatic		= true
	HalfExtentsXY	= 0.625
	HalfExtentsZ	= 0.625
	BlocksEntities	= true
	BlocksTrace		= true

	[ExitDoorDownFrobbable]
	UseMeshExtents	= true
	ExtentsFatten	= 0.05
	FriendlyName	= "ExitDoor"
	FrobVerb		= "Go"

	[ExitDoorDownHUDMarker]
	UIScreenName	= "HUD"
	UIWidgetName	= "ExitImage"
	OccludedImage	= "Textures/UI/exit-hud_NODXT.tga"
	UnoccludedImage	= "Textures/UI/exit-hud-2_NODXT.tga"
	FalloffRadius	= 20.0
	OffsetZ			= 1.0

	[ExitDoorDownMapMarker]
	MarkAsRoom	= true
	Texture		= "Textures/Minimap/exit_NODXT.tga"

	[ExitDoorDownReactions]
	NumReactions = &
	@ Reaction
	@@& = "ExitDoorDownOnFrobbedReaction"
	#@@&	= "ExitDoorDownOnSpawnedReaction"	# Direction book has been cut (for now)

		[ExitDoorDownOnFrobbedReaction]
		Rule = "OnFrobbedRule"
		NumActions = &
		@ Action
		@@& = "ExitDoorDownGoToLevel"

			[OnFrobbedRule]
			Event = "OnFrobbed"

			[ExitDoorDownGoToLevel]
			ActionType		= "EldGoToLevel"
			GoToNextLevel	= true

		[ExitDoorDownOnSpawnedReaction]
		Rule		= "OnSpawnedRule"
		NumActions	= &
		@ Action
		@@&			= "ConditionalShowDirectionBook"

			[ConditionalShowDirectionBook]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "HasNotReadDirectionBook"
			@@^Action		= "TeachDirectionBook"

				[HasNotReadDirectionBook]
				PEType	= "NOT"
				Input	= "HasReadDirectionBook"

					[HasReadDirectionBook]
					PEType	= "EldGetPersistentVar"
					Key		= "HasReadDirectionBook"

				[TeachDirectionBook]
				ActionType	= "Composite"
				NumActions	= &
				@ Action
				@@&			= "ShowDirectionBook"
				@@&			= "MarkDirectionBookRead"

					[ShowDirectionBook]
					ActionType	= "EldShowBook"
					BookString	= "Book_Direction"

					[MarkDirectionBookRead]
					ActionType	= "EldSetPersistentVar"
					Key			= "HasReadDirectionBook"
					ValuePE		= "TruePE"

[ExitDoorUp_MoMBoss]
Extends			= "ExitDoorUp"
EldHUDMarker	= "ExitDoorDownHUDMarker"

[ExitDoorUp]
Extends			= "ExitDoorDown"
EldMesh			= "ExitDoorUpMesh"
EldFrobbable	= "ExitDoorUpFrobbable"
EldHUDMarker	= ""
EldMapMarker	= "ExitDoorUpMapMarker"
Reactions		= "ExitDoorUpReactions"

	[ExitDoorUpMesh]
	Extends				= "ExitDoorDownMesh"
	IrradianceOffsetZ	= -1.0

	[ExitDoorUpFrobbable]
	Extends			= "ExitDoorDownFrobbable"
	FriendlyName	= "ExitDoorUp"
	FrobVerb		= "Return"

	[ExitDoorUpMapMarker]
	MarkAsRoom	= true
	Texture		= "Textures/Minimap/return_NODXT.tga"

	[ExitDoorUpReactions]
	NumReactions = &
	@ Reaction
	@@& = "ExitDoorUpOnFrobbedReaction"

		[ExitDoorUpOnFrobbedReaction]
		Rule = "OnFrobbedRule"
		NumActions = &
		@ Action
		@@& = "GoToPrevLevelAction"

			[GoToPrevLevelAction]
			ActionType		= "EldGoToLevel"
			GoToPrevLevel	= true

[WebSiteBook]
Extends			= "ReturnBook"
EldFrobbable	= "WebSiteBookFrobbable"
Reactions		= "WebSiteBookReactions"

	[WebSiteBookFrobbable]
	UseMeshExtents	= true
	ExtentsFatten	= 0.05
	FriendlyName	= "FullGame"
	FrobVerb		= "Buy"

	[WebSiteBookReactions]
	NumReactions = &
	@ Reaction
	@@& = "ReturnBookOnSpawnedReaction"
	@@& = "WebSiteBookOnFrobbedReaction"

		[WebSiteBookOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "LaunchWebSiteAction"

			[LaunchWebSiteAction]
			ActionType	= "EldLaunchWebSite"

[ReturnBook]
EldTransform		= "."
EldMesh				= "ReturnBookMesh"
EldFrobbable		= "ReturnBookFrobbable"
EldHUDMarker		= "ReturnBookHUDMarker"
EldMapMarker		= "ReturnBookMapMarker"
EldLight			= "ReturnBookLight"
EldParticles		= "ReturnBookParticles"
Reactions			= "ReturnBookReactions"

	[ReturnBookMesh]
	Mesh			= "Meshes/book.cms"

	[ReturnBookFrobbable]
	UseMeshExtents	= true
	ExtentsFatten	= 0.05
	FriendlyName	= "WorldBook"
	FrobVerb		= "ReturnToHub"

	[ReturnBookHUDMarker]
	UIScreenName	= "HUD"
	UIWidgetName	= "ExitImage"
	OccludedImage	= "Textures/UI/exit-hud_NODXT.tga"
	UnoccludedImage	= "Textures/UI/exit-hud-2_NODXT.tga"
	FalloffRadius	= 20.0
	OffsetZ			= 1.0

	[ReturnBookMapMarker]
	MarkAsRoom	= true
	Texture		= "Textures/Minimap/exit_NODXT.tga"

	[ReturnBookLight]
	Radius = 5.0
	ColorR = 1.0
	ColorG = 0.5
	ColorB = 1.25

	[ReturnBookParticles]
	Particles		= "PS_BookSparklesReturn"

	[ReturnBookReactions]
	NumReactions = &
	@ Reaction
	@@& = "ReturnBookOnSpawnedReaction"
	@@& = "ReturnBookOnFrobbedReaction"

		[ReturnBookOnSpawnedReaction]
		Rule		= "OnSpawnedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayOpenAnim"

		[ReturnBookOnFrobbedReaction]
		Rule = "OnFrobbedRule"
		NumActions = &
		@ Action
		@@& = "ReturnBookReturnToHub"

			[ReturnBookReturnToHub]
			ActionType	= "EldGoToLevel"
			ReturnToHub	= true

# Rm
[SanctuaryReturnBook]
Extends			= "ReturnBook"
EldHUDMarker	= ""
EldMapMarker	= "SanctuaryReturnBookMapMarker"

	[SanctuaryReturnBookMapMarker]
	MarkAsRoom	= true
	Texture		= "Textures/Minimap/sanctuary_NODXT.tga"
# Rm

[ReturnEntranceBook]
Extends				= "ReturnBook"
EldHUDMarker		= ""
EldMapMarker		= "ReturnEntranceBookMapMarker"

	[ReturnEntranceBookMapMarker]
	MarkAsRoom	= true
	Texture		= "Textures/Minimap/book_NODXT.tga"

[ResurrectBook]
Extends		= "ReturnEntranceBook"
Reactions	= "ResurrectBookReactions"

	[ResurrectBookReactions]
	NumReactions = &
	@ Reaction
	@@& = "ReturnBookOnSpawnedReaction"
	@@& = "ResurrectBookOnFrobbedReaction"

		[ResurrectBookOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "ResurrectAction"

[SubspaceBookBase]
EldTransform		= "."
EldMesh				= "SubspaceBookMesh"
EldFrobbable		= "SubspaceBookFrobbable"
EldMapMarker		= "SubspaceBookMapMarker"
EldLight			= "SubspaceBookLight"
EldParticles		= "SubspaceBookParticles"

	[SubspaceBookMesh]
	Mesh			= "Meshes/book.cms"

	[SubspaceBookFrobbable]
	UseMeshExtents	= true
	ExtentsFatten	= 0.05
	FriendlyName	= "SubspaceBook"
	FrobVerb		= "Examine"

	[SubspaceBookMapMarker]
	MarkAsRoom	= true
	Texture		= "Textures/Minimap/book_NODXT.tga"

	[SubspaceBookLight]
	Radius = 5.0
	ColorR = 1.0
	ColorG = 0.5
	ColorB = 1.25

	[SubspaceBookParticles]
	Particles		= "PS_BookSparklesReturn"

	# Common reaction
	[SubspaceBookOnSpawnedReaction]
	Rule		= "OnSpawnedRule"
	NumActions	= &
	@ Action
	@@&			= "PlayOpenAnim"

[SubspaceEnterBook1]
Extends		= "SubspaceBookBase"
Reactions	= "SubspaceEnterBook1Reactions"

	[SubspaceEnterBook1Reactions]
	NumReactions	= &
	@ Reaction
	@@&				= "SubspaceBookOnSpawnedReaction"
	@@&				= "SubspaceEnterBook1OnFrobbedReaction"

		[SubspaceEnterBook1OnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "GoToSubspace1"

			[GoToSubspace1]
			ActionType	= "EldGoToLevel"
			Level		= "Subspace-1"

[SubspaceEnterBook2]
Extends		= "SubspaceBookBase"
Reactions	= "SubspaceEnterBook2Reactions"

	[SubspaceEnterBook2Reactions]
	NumReactions	= &
	@ Reaction
	@@&				= "SubspaceBookOnSpawnedReaction"
	@@&				= "SubspaceEnterBook2OnFrobbedReaction"

		[SubspaceEnterBook2OnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "GoToSubspace2"

			[GoToSubspace2]
			ActionType	= "EldGoToLevel"
			Level		= "Subspace-2"

[SubspaceEnterBook3]
Extends		= "SubspaceBookBase"
Reactions	= "SubspaceEnterBook3Reactions"

	[SubspaceEnterBook3Reactions]
	NumReactions	= &
	@ Reaction
	@@&				= "SubspaceBookOnSpawnedReaction"
	@@&				= "SubspaceEnterBook3OnFrobbedReaction"

		[SubspaceEnterBook3OnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "GoToSubspace3"

			[GoToSubspace3]
			ActionType	= "EldGoToLevel"
			Level		= "Subspace-3"

[SubspaceExitBook]
Extends			= "SubspaceBookBase"
EldHUDMarker	= "SubspaceExitBookHUDMarker"
Reactions		= "SubspaceExitBookReactions"

	[SubspaceExitBookHUDMarker]
	UIScreenName	= "HUD"
	UIWidgetName	= "ExitImage"
	OccludedImage	= "Textures/UI/exit-hud_NODXT.tga"
	UnoccludedImage	= "Textures/UI/exit-hud-2_NODXT.tga"
	FalloffRadius	= 20.0
	OffsetZ			= 1.0

	[SubspaceExitBookReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "SubspaceBookOnSpawnedReaction"
	@@&				= "SubspaceExitBookOnFrobbedReaction"

		[SubspaceExitBookOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "GoToPrevLevelAction"

[MoMEntrance]
EldTransform		= "."
EldMesh				= "MoMEntranceMesh"
EldFrobbable		= "MoMEntranceFrobbable"
EldMapMarker		= "MoMEntranceMapMarker"
EldLight			= "MoMEntranceLight"
EldParticles		= "."
Reactions			= "MoMEntranceReactions"

	[MoMEntranceMesh]
	Mesh			= "Meshes/book.cms"
	
	[MoMEntranceFrobbable]
	ExtentsX		= 0.375
	ExtentsY		= 0.375
	ExtentsZ		= 0.375
	OffsetZ			= -0.125
	FriendlyName	= "WorldBook"
	FrobVerb		= "Examine"

	[MoMEntranceMapMarker]
	MarkAsRoom	= true
	Texture		= "Textures/Minimap/book_NODXT.tga"

	[MoMEntranceLight]
	DeferAddLight	= true
	Radius			= 6.0
	ColorR			= 0.8
	ColorG			= 1.7
	ColorB			= 2.0

	[MoMEntranceReactions]
	NumReactions = &
	@ Reaction
	@@& = "MoMEntranceOnSpawnedReaction"
	@@& = "MoMEntranceOnFrobbedReaction"
	@@& = "MoMEntranceGoToMoMReaction"

		[MoMEntranceOnSpawnedReaction]
		Rule		= "OnSpawnedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayOpenAnim"
		@@&			= "AddLightAction"
		@@&			= "PlayMoMEntranceVFX"

			[PlayMoMEntranceVFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "MoMEntranceVFXPE"
			@@&Name			= "Attached"
			@@^Value		= "TruePE"

				[MoMEntranceVFXPE]
				PEType		= "ConstantString"
				Value		= "PS_BookSparklesMoM"

		[MoMEntranceOnFrobbedReaction]
		Rule = "OnFrobbedRule"
		NumActions = &
		@ Action
		@@&	= "ConditionalShowMoMEntranceBook"
		@@& = "GoToMoMAction"

			[ConditionalShowMoMEntranceBook]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "HasNotReadMoMEntranceBook"
			@@^Action		= "TeachMoMEntranceBook"

				[HasNotReadMoMEntranceBook]
				PEType	= "NOT"
				Input	= "HasReadMoMEntranceBook"

					[HasReadMoMEntranceBook]
					PEType	= "EldGetPersistentVar"
					Key		= "HasReadMoMEntranceBook"

				[TeachMoMEntranceBook]
				ActionType	= "Composite"
				NumActions	= &
				@ Action
				@@&			= "ShowMoMEntranceBook"
				@@&			= "MarkMoMEntranceBookRead"

					[ShowMoMEntranceBook]
					ActionType	= "EldShowBook"
					BookString	= "Book_MoM"

					[MarkMoMEntranceBookRead]
					ActionType	= "EldSetPersistentVar"
					Key			= "HasReadMoMEntranceBook"
					ValuePE		= "TruePE"

			[GoToMoMAction]
			ActionType	= "SendEvent"
			EventName	= "GoToMoM"
			Recipient	= "SelfPE"
			QueueEvent	= true

		[MoMEntranceGoToMoMReaction]
		Rule		= "GoToMoMRule"
		NumActions	= &
		@ Action
		@@&			= "ConfirmMoMAction"

			[GoToMoMRule]
			Event	= "GoToMoM"

			[ConfirmMoMAction]
			ActionType		= "UIShowYesNoDialog"
			YesNoString		= "ConfirmMoM"
			NumYesActions	= &
			@ YesAction
			@@&				= "MoMEntranceGoToWorld"

				[MoMEntranceGoToWorld]
				ActionType		= "Selector"
				NumSelections	= &
				@ Selection
				@@&Condition	= "PlayerHasAirplaneKeysPE"
				@@^Action		= "MoMEntranceGoToBossLevel"
				@@&Condition	= "TruePE"
				@@^Action		= "MoMEntranceGoToStartLevel"

					[PlayerHasAirplaneKeysPE]
					PEType			= "GetVariable"
					EntityPE		= "PlayerPE"
					VariableName	= "AirplaneKeys"

					[MoMEntranceGoToStartLevel]
					ActionType	= "EldGoToLevel"
					Level		= "MoM-Start"

					[MoMEntranceGoToBossLevel]
					ActionType	= "EldGoToLevel"
					Level		= "MoM-Boss"

[AsylumEntrance]
EldTransform		= "."
EldMesh				= "AsylumEntranceMesh"
EldFrobbable		= "AsylumEntranceFrobbable"
EldMapMarker		= "AsylumEntranceMapMarker"
EldLight			= "AsylumEntranceLight"
EldParticles		= "."
Reactions			= "AsylumEntranceReactions"

	[AsylumEntranceMesh]
	Mesh			= "Meshes/book.cms"
	
	[AsylumEntranceFrobbable]
	ExtentsX		= 0.375
	ExtentsY		= 0.375
	ExtentsZ		= 0.375
	OffsetZ			= -0.125
	FriendlyName	= "WorldBook"
	FrobVerb		= "Examine"

	[AsylumEntranceMapMarker]
	MarkAsRoom	= true
	Texture		= "Textures/Minimap/book_NODXT.tga"

	[AsylumEntranceLight]
	DeferAddLight	= true
	Radius			= 6.0
	ColorR			= 2.27
	ColorG			= 1.05
	ColorB			= 0.31

	[AsylumEntranceReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "AsylumEntranceOnSpawnedReaction"
	@@&				= "AsylumEntranceOnFrobbedReaction"
	@@&				= "AsylumEntranceGoToAsylumReaction"

		[AsylumEntranceOnSpawnedReaction]
		Rule		= "OnSpawnedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayOpenAnim"
		@@&			= "AddLightAction"
		@@&			= "PlayAsylumEntranceVFX"

			[PlayAsylumEntranceVFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "AsylumEntranceVFXPE"
			@@&Name			= "Attached"
			@@^Value		= "TruePE"

				[AsylumEntranceVFXPE]
				PEType		= "ConstantString"
				Value		= "PS_BookSparklesAsylum"

		# ASYTODO Notify the player that there is no return and they will lose their gear
		[AsylumEntranceOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "ConditionalShowAsylumEntranceBook"
		@@&			= "GoToAsylumAction"

			[ConditionalShowAsylumEntranceBook]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "HasNotReadAsylumEntranceBook"
			@@^Action		= "TeachAsylumEntranceBook"

				[HasNotReadAsylumEntranceBook]
				PEType	= "NOT"
				Input	= "HasReadAsylumEntranceBook"

					[HasReadAsylumEntranceBook]
					PEType	= "EldGetPersistentVar"
					Key		= "HasReadAsylumEntranceBook"

				[TeachAsylumEntranceBook]
				ActionType	= "Composite"
				NumActions	= &
				@ Action
				@@&			= "ShowAsylumEntranceBook"
				@@&			= "MarkAsylumEntranceBookRead"

					[ShowAsylumEntranceBook]
					ActionType	= "EldShowBook"
					BookString	= "Book_Asylum"

					[MarkAsylumEntranceBookRead]
					ActionType	= "EldSetPersistentVar"
					Key			= "HasReadAsylumEntranceBook"
					ValuePE		= "TruePE"

			[GoToAsylumAction]
			ActionType	= "SendEvent"
			EventName	= "GoToAsylum"
			Recipient	= "SelfPE"
			QueueEvent	= true

		[AsylumEntranceGoToAsylumReaction]
		Rule		= "GoToAsylumRule"
		NumActions	= &
		@ Action
		@@&			= "ConfirmAsylumAction"

			[GoToAsylumRule]
			Event	= "GoToAsylum"

			[ConfirmAsylumAction]
			ActionType		= "UIShowYesNoDialog"
			YesNoString		= "ConfirmAsylum"
			NumYesActions	= &
			@ YesAction
			@@&				= "AsylumEntranceGoToWorld"

				[AsylumEntranceGoToWorld]
				ActionType			= "EldGoToLevel"
				ReturnToAsylumHub	= true

[WaterBook]
#ShouldDebugRender	= true
EldTransform		= "."
EldMesh				= "WaterBookMesh"
EldFrobbable		= "WaterBookFrobbable"
EldMapMarker		= "WaterBookMapMarker"
EldLight			= "WaterBookLight"
EldParticles		= "."
Reactions			= "WaterBookReactions"

	[WaterBookMesh]
	Mesh			= "Meshes/book.cms"
	
	[WaterBookFrobbable]
	ExtentsX		= 0.375
	ExtentsY		= 0.375
	ExtentsZ		= 0.375
	OffsetZ			= -0.125
	FriendlyName	= "WorldBook"
	FrobVerb		= "Examine"

	[WaterBookMapMarker]
	MarkAsRoom	= true
	Texture		= "Textures/Minimap/book_NODXT.tga"

	[WaterBookLight]
	DeferAddLight	= true
	Radius			= 6.0
	ColorR			= 0.8
	ColorG			= 0.8
	ColorB			= 1.6

	[WaterBookReactions]
	NumReactions = &
	@ Reaction
	@@& = "WaterBookOnSpawnedReaction"
	@@& = "WaterBookOnFrobbedReaction"

		[WaterBookOnSpawnedReaction]
		Rule		= "OnSpawnedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayOpenAnim"
		@@&			= "AddLightAction"
		@@&			= "PlayWaterBookVFX"

			[PlayOpenAnim]
			ActionType	= "EldPlayAnim"
			Animation	= "Open"

			[PlayWaterBookVFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "WaterBookVFXPE"
			@@&Name			= "Attached"
			@@^Value		= "TruePE"

				[WaterBookVFXPE]
				PEType		= "ConstantString"
				Value		= "PS_BookSparklesWater"

		[WaterBookOnFrobbedReaction]
		Rule = "OnFrobbedRule"
		NumActions = &
		@ Action
		@@&	= "ConditionalShowWaterBook"
		@@& = "WaterBookGoToWaterWorld"

			[ConditionalShowWaterBook]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "HasNotReadWaterBook"
			@@^Action		= "TeachWaterBook"

				[HasNotReadWaterBook]
				PEType	= "NOT"
				Input	= "HasReadWaterBook"

					[HasReadWaterBook]
					PEType	= "EldGetPersistentVar"
					Key		= "HasReadWaterBook"

				[TeachWaterBook]
				ActionType	= "Composite"
				NumActions	= &
				@ Action
				@@&			= "ShowWaterBook"
				@@&			= "MarkWaterBookRead"

					[ShowWaterBook]
					ActionType	= "EldShowBook"
					BookString	= "Book_Water"

					[MarkWaterBookRead]
					ActionType	= "EldSetPersistentVar"
					Key			= "HasReadWaterBook"
					ValuePE		= "TruePE"

			[WaterBookGoToWaterWorld]
			ActionType	= "EldGoToLevel"
			Level		= "Water-1"

[SandBook]
Extends			= "WaterBook"
EldLight		= "SandBookLight"
EldLock			= "SandBookLock"
Reactions		= "SandBookReactions"

	[SandBookLight]
	Extends	= "WaterBookLight"
	ColorR	= 1.6
	ColorG	= 0.8
	ColorB	= 0.8

	[SandBookLock]
	Key		= "WaterSoul"	# NOT A TYPO; Sand book is locked by Water key
	Locked	= true

	[SandBookReactions]
	NumReactions = &
	@ Reaction
	@@& = "SandBookOnSpawnedReaction"
	@@& = "SandBookOnFrobbedLockedReaction_WithKey"
	@@& = "SandBookOnFrobbedLockedReaction_WithoutKey"
	@@& = "SandBookOnFrobbedReaction"
	@@& = "SandBookOnUnlockedReaction"
	@@&	= "SandBookShowWorldUnlockBookReaction"
	
		[SandBookOnSpawnedReaction]
		Rule		= "OnSpawnedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayIdleAnim"
		@@&			= "PlaySandBookLockedVFX"

			[PlayIdleAnim]
			ActionType	= "EldPlayAnim"
			Animation	= "Idle"

			[PlaySandBookLockedVFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "SandBookLockedVFXPE"
			@@&Name			= "Attached"
			@@^Value		= "TruePE"

				[SandBookLockedVFXPE]
				PEType		= "ConstantString"
				Value		= "PS_BookSparklesSandLocked"

		[SandBookOnFrobbedLockedReaction_WithKey]
		Rule		= "SandBookOnFrobbedLockedRule_WithKey"
		NumActions	= &
		@ Action
		@@&			= "BookUnlockAction"

			[SandBookOnFrobbedLockedRule_WithKey]
			Event			= "OnFrobbed"
			NumCriteria		= &
			@ Criterion
			@@&Name			= "Locked"
			@@^Min			= "TruePE"
			NumConditions	= &
			@ Condition
			@@&				= "FrobberHasSandKeyPE"

				[FrobberHasSandKeyPE]
				PEType			= "GetVariable"
				EntityPE		= "FrobberPE"
				VariableName	= "SandKey"

			[BookUnlockAction]
			ActionType		= "SendEvent"
			EventName		= "Unlock"
			Recipient		= "SelfPE"

		[SandBookOnFrobbedLockedReaction_WithoutKey]
		Rule		= "OnFrobbedLockedRule_WithoutKey"
		NumActions	= &
		@ Action
		@@&			= "ShowSandLockedBook"
		
			[OnFrobbedLockedRule_WithoutKey]
			Event			= "OnFrobbed"
			NumCriteria		= &
			@ Criterion
			@@&Name			= "Locked"
			@@^Min			= "TruePE"

			[ShowSandLockedBook]
			ActionType	= "EldShowBook"
			BookString	= "Book_SandLocked"

		[SandBookOnFrobbedReaction]
		Rule = "OnFrobbedRule"
		NumActions = &
		@ Action
		@@& = "SandBookGoToSandWorld"

			[SandBookGoToSandWorld]
			ActionType	= "EldGoToLevel"
			Level		= "Sand-1"

		[SandBookOnUnlockedReaction]
		Rule		= "OnUnlockedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayOpenAnim"
		@@&			= "AddLightAction"
		@@&			= "StopSandBookLockedVFX"
		@@&			= "PlaySandBookVFX"
		@@&			= "ConditionalShowSandBook"
		@@&			= "QueueConditionalShowWorldUnlockBook"

			[OnUnlockedRule]
			Event	= "OnUnlocked"

			[StopSandBookLockedVFX]
			ActionType		= "SendEvent"
			EventName		= "StopParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "SandBookLockedVFXPE"

			[PlaySandBookVFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "SandBookVFXPE"
			@@&Name			= "Attached"
			@@^Value		= "TruePE"

				[SandBookVFXPE]
				PEType		= "ConstantString"
				Value		= "PS_BookSparklesSand"

			[ConditionalShowSandBook]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "HasNotReadSandBook"
			@@^Action		= "TeachSandBook"

				[HasNotReadSandBook]
				PEType	= "NOT"
				Input	= "HasReadSandBook"

					[HasReadSandBook]
					PEType	= "EldGetPersistentVar"
					Key		= "HasReadSandBook"

				[TeachSandBook]
				ActionType	= "Composite"
				NumActions	= &
				@ Action
				@@&			= "ShowSandBook"
				@@&			= "MarkSandBookRead"

					[ShowSandBook]
					ActionType	= "EldShowBook"
					BookString	= "Book_Sand"

					[MarkSandBookRead]
					ActionType	= "EldSetPersistentVar"
					Key			= "HasReadSandBook"
					ValuePE		= "TruePE"

			[QueueConditionalShowWorldUnlockBook]
			ActionType		= "SendEvent"
			EventName		= "OnShowWorldUnlockBook"
			Recipient		= "SelfPE"
			QueueEvent		= true

		[SandBookShowWorldUnlockBookReaction]
		Rule		= "OnShowWorldUnlockBookRule"
		NumActions	= &
		@ Action
		@@&			= "ConditionalShowWorldUnlockBook"

			[OnShowWorldUnlockBookRule]
			Event	= "OnShowWorldUnlockBook"

			[ConditionalShowWorldUnlockBook]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "HasNotReadWorldUnlockBook"
			@@^Action		= "TeachWorldUnlockBook"

				[HasNotReadWorldUnlockBook]
				PEType	= "NOT"
				Input	= "HasReadWorldUnlockBook"

					[HasReadWorldUnlockBook]
					PEType	= "EldGetPersistentVar"
					Key		= "HasReadWorldUnlockBook"

				[TeachWorldUnlockBook]
				ActionType	= "Composite"
				NumActions	= &
				@ Action
				@@&			= "ShowWorldUnlockBook"
				@@&			= "MarkWorldUnlockBookRead"

					[ShowWorldUnlockBook]
					ActionType	= "EldShowBook"
					BookString	= "Book_WorldUnlock"

					[MarkWorldUnlockBookRead]
					ActionType	= "EldSetPersistentVar"
					Key			= "HasReadWorldUnlockBook"
					ValuePE		= "TruePE"

[SwampBook]
Extends			= "WaterBook"
EldLight		= "SwampBookLight"
EldLock			= "SwampBookLock"
Reactions		= "SwampBookReactions"

	[SwampBookLight]
	Extends	= "WaterBookLight"
	ColorR	= 0.8
	ColorG	= 1.6
	ColorB	= 0.8

	[SwampBookLock]
	Key		= "SandSoul"	# NOT A TYPO; Swamp book is locked by Sand key
	Locked	= true

	[SwampBookReactions]
	NumReactions = &
	@ Reaction
	@@& = "SwampBookOnSpawnedReaction"
	@@& = "SwampBookOnFrobbedLockedReaction_WithKey"
	@@& = "SwampBookOnFrobbedLockedReaction_WithoutKey"
	@@& = "SwampBookOnFrobbedReaction"
	@@& = "SwampBookOnUnlockedReaction"

		[SwampBookOnSpawnedReaction]
		Rule		= "OnSpawnedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayIdleAnim"
		@@&			= "PlaySwampBookLockedVFX"

			[PlaySwampBookLockedVFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "SwampBookLockedVFXPE"
			@@&Name			= "Attached"
			@@^Value		= "TruePE"

				[SwampBookLockedVFXPE]
				PEType		= "ConstantString"
				Value		= "PS_BookSparklesSwampLocked"

		[SwampBookOnFrobbedLockedReaction_WithKey]
		Rule		= "SwampBookOnFrobbedLockedRule_WithKey"
		NumActions	= &
		@ Action
		@@&			= "BookUnlockAction"

			[SwampBookOnFrobbedLockedRule_WithKey]
			Event			= "OnFrobbed"
			NumCriteria		= &
			@ Criterion
			@@&Name			= "Locked"
			@@^Min			= "TruePE"
			NumConditions	= &
			@ Condition
			@@&				= "FrobberHasSwampKeyPE"

				[FrobberHasSwampKeyPE]
				PEType			= "GetVariable"
				EntityPE		= "FrobberPE"
				VariableName	= "SwampKey"

		[SwampBookOnFrobbedLockedReaction_WithoutKey]
		Rule		= "OnFrobbedLockedRule_WithoutKey"
		NumActions	= &
		@ Action
		@@&			= "ShowSwampLockedBook"

			[ShowSwampLockedBook]
			ActionType	= "EldShowBook"
			BookString	= "Book_SwampLocked"

		[SwampBookOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "SwampBookGoToSwampWorld"

			[SwampBookGoToSwampWorld]
			ActionType	= "EldGoToLevel"
			Level		= "Swamp-1"

		[SwampBookOnUnlockedReaction]
		Rule		= "OnUnlockedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayOpenAnim"
		@@&			= "AddLightAction"
		@@&			= "StopSwampBookLockedVFX"
		@@&			= "PlaySwampBookVFX"
		@@&			= "ConditionalShowSwampBook"

			[StopSwampBookLockedVFX]
			ActionType		= "SendEvent"
			EventName		= "StopParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "SwampBookLockedVFXPE"

			[PlaySwampBookVFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "SwampBookVFXPE"
			@@&Name			= "Attached"
			@@^Value		= "TruePE"

				[SwampBookVFXPE]
				PEType		= "ConstantString"
				Value		= "PS_BookSparklesSwamp"

			[ConditionalShowSwampBook]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "HasNotReadSwampBook"
			@@^Action		= "TeachSwampBook"

				[HasNotReadSwampBook]
				PEType	= "NOT"
				Input	= "HasReadSwampBook"

					[HasReadSwampBook]
					PEType	= "EldGetPersistentVar"
					Key		= "HasReadSwampBook"

				[TeachSwampBook]
				ActionType	= "Composite"
				NumActions	= &
				@ Action
				@@&			= "ShowSwampBook"
				@@&			= "MarkSwampBookRead"

					[ShowSwampBook]
					ActionType	= "EldShowBook"
					BookString	= "Book_Swamp"

					[MarkSwampBookRead]
					ActionType	= "EldSetPersistentVar"
					Key			= "HasReadSwampBook"
					ValuePE		= "TruePE"

[Door]
#ShouldDebugRender = true
ShouldDebugCheckSpawnClearance	= false
EldTransform		= "DoorTransform"
EldCollision		= "DoorCollision"
EldMesh				= "DoorMesh"
EldParticles		= "."
EldSound			= "."
EldFrobbable		= "DoorFrobbable"
EldDoor				= "DoorDoor"
EldHealth			= "DoorHealth"
EldAnchor			= "DoorAnchor"
Reactions			= "DoorReactions"

	[DoorTransform]
	CanMove	= false

	# Units:
	# 1 texel = 1/16 meter = 0.0625
	# 1/8 texel = 0.0078125
	[DoorCollision]
	IsStatic		= true
	HalfExtentsX	= 0.4921875
	HalfExtentsY	= 0.0546875
	HalfExtentsZ	= 0.9921875
	BlocksEntities	= true
	BlocksTrace		= true
	BlocksOcclusion	= true

	[DoorMesh]
	Mesh = "Meshes/door.cms"
	IrradianceOffsetZ = 0.5
	UseTwoPointIrradiance = true
	
	[DoorFrobbable]
	FrobVerb	= "Open"
	HoldVerb	= "LockDoor"

	[DoorDoor]
	InterpTime		= 0.25
	ClosedOffsetX	= -0.4375
	ClosedFrobBoxX	= 0.5
	ClosedFrobBoxY	= 0.0625
	ClosedFrobBoxZ	= 1.0
	ClosedIrrY		= -0.125
	OpenOffsetX		= -0.4375
	OpenAngle		= 90.0
	OpenFrobOffsetY	= 0.4375
	OpenFrobBoxX	= 0.5
	OpenFrobBoxY	= 0.5
	OpenFrobBoxZ	= 1.0
	OpenIrrX		= -0.5625
	OpenIrrY		= 0.4375
	UnlockedTexture			= "Textures/door_NODXT.tga"
	LockedTexture			= "Textures/door-locked_NODXT.tga"
	UnlockedFriendlyName	= "Door"
	LockedFriendlyName		= "LockedDoor"

	[DoorHealth]
	Health				= 8
	NumDamageTypeMods	= &
	@ DamageTypeMod
	@@&Type				= "Blunt"
	@@^Mul				= 0.0
	@@&Type				= "Thrown"
	@@^Mul				= 0.0
	@@&Type				= "Slashing"
	@@^Mul				= 0.5
	@@&Type				= "Hacking"
	@@^Mul				= 2.0
	@@&Type				= "Explosive"
	@@^Mul				= 4.0

	[DoorAnchor]
	AnchorDirectionZ	= -1.0

	[DoorReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "DoorOnBecameFrobTargetReaction"
	@@&				= "DoorOnFrobbedReaction"
	@@&				= "DoorOnFrobbedHeldReaction"
	@@&				= "DoorOnPushedReaction"
	@@&				= "DoorOnDamagedReaction"
	@@&				= "DoorOnDiedReaction"
	@@&				= "DoorTryToggleFailedReaction"
	@@&				= "DestroyOnUnanchoredReaction"
	@@&				= "DoorOnOpenedReaction"
	@@&				= "DoorOnClosedReaction"
	@@&				= "DoorOnLockedReaction"
	@@&				= "DoorOnUnlockedReaction"

		[DoorOnOpenedReaction]
		Rule		= "OnOpenedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayDoorOpenSFX"

			[OnOpenedRule]
			Event	= "OnOpened"

			[PlayDoorOpenSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "DoorOpenSFXPE"

				[DoorOpenSFXPE]
				PEType	= "ConstantString"
				Value	= "DoorOpenSound"

		[DoorOnClosedReaction]
		Rule		= "OnClosedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayDoorCloseSFX"

			[OnClosedRule]
			Event	= "OnClosed"

			[PlayDoorCloseSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "DoorCloseSFXPE"

				[DoorCloseSFXPE]
				PEType	= "ConstantString"
				Value	= "DoorCloseSound"

		[DoorOnLockedReaction]
		Rule		= "OnLockedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayDoorLockSFX"

			[OnLockedRule]
			Event	= "OnLocked"

			[PlayDoorLockSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "DoorLockSFXPE"

				[DoorLockSFXPE]
				PEType	= "ConstantString"
				Value	= "DoorLockSound"

		[DoorOnUnlockedReaction]
		Rule		= "OnUnlockedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayDoorUnlockSFX"

			[PlayDoorUnlockSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "DoorUnlockSFXPE"

				[DoorUnlockSFXPE]
				PEType	= "ConstantString"
				Value	= "DoorUnlockSound"

		[DoorOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "TryFrobbedToggleAction"

			[TryFrobbedToggleAction]
			ActionType		= "SendEvent"
			EventName		= "TryToggle"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Frobber"
			@@^Value		= "FrobberPE"

		[DoorTryToggleFailedReaction]
		Rule		= "TryToggleFailedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayDoorLockedSFX"

			[TryToggleFailedRule]
			Event	= "TryToggleFailed"

			[PlayDoorLockedSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "DoorLockedSFXPE"

				[DoorLockedSFXPE]
				PEType	= "ConstantString"
				Value	= "DoorLockedSound"

		[DoorOnBecameFrobTargetReaction]
		Rule		= "OnBecameFrobTargetRule"
		NumActions	= &
		@ Action
		@@&			= "SetDoorFrobVerb"
		@@&			= "SetDoorHoldReleaseMode"
		@@&			= "SetDoorHoldVerbDisabledStatus"

			[OnBecameFrobTargetRule]
			Event		= "OnBecameFrobTarget"
			NumCriteria	= &
			@ Criterion
			@@&Name		= "IsFrobTarget"
			@@^Min		= "TruePE"

			[SetDoorHoldVerbDisabledStatus]
			ActionType		= "SendEvent"
			EventName		= "SetWidgetDisabled"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Screen"
			@@^Value		= "HUDScreenPE"
			@@&Name			= "Widget"
			@@^Value		= "FrobHoldPE"
			@@&Name			= "Disabled"
			@@^Value		= "CannotAffordLockPE"

				[HUDScreenPE]
				PEType	= "ConstantString"
				Value	= "HUD"

				[FrobHoldPE]
				PEType	= "ConstantString"
				Value	= "FrobHold"

				[CannotAffordLockPE]
				PEType	= "Conditional"
				Op		= "LT"
				InputA	= "FrobberMoneyPE"
				InputB	= "LocksmithKitCostPE"

					[FrobberMoneyPE]
					PEType		= "PushContext"
					EntityPE	= "FrobberPE"
					Input		= "MoneyPE"

					[LocksmithKitCostPE]
					PEType	= "ConstantInt"
					Value	= 5

					# Also satisfy the UI string lookup.
					[LocksmithKit]
					LockPriceTag	= 5

			[SetDoorFrobVerb]
			ActionType		= "SendEvent"
			EventName		= "SetFrobVerb"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "FrobVerb"
			@@^Value		= "DoorFrobVerbPE"

				[DoorFrobVerbPE]
				PEType			= "Selector"
				NumSelections	= &
				@ Selection
				@@&Condition	= "IsOpenPE"
				@@^Value		= "CloseVerbPE"
				@@&Condition	= "TruePE"
				@@^Value		= "OpenVerbPE"

					[IsOpenPE]
					PEType	= "QueryActionStack"
					Key		= "Open"

					[OpenVerbPE]
					PEType	= "ConstantString"
					Value	= "Open"

					[CloseVerbPE]
					PEType	= "ConstantString"
					Value	= "Close"

			[SetDoorHoldReleaseMode]
			ActionType		= "SendEvent"
			EventName		= "SetHoldReleaseMode"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "HoldReleaseMode"
			@@^Value		= "ShouldShowLocksmithScreen"

				[ShouldShowLocksmithScreen]
				PEType		= "AND"
				InputA		= "IsClosedAndUnlockedPE"
				InputB		= "CanShowLocksmithScreen"

					[IsClosedAndUnlockedPE]
					PEType	= "AND"
					InputA	= "IsClosedPE"
					InputB	= "IsUnlockedPE"

						[IsClosedPE]
						PEType	= "NOT"
						Input	= "IsOpenPE"

						[IsUnlockedPE]
						PEType	= "NOT"
						Input	= "IsLockedPE"

							[IsLockedPE]
							PEType	= "QueryActionStack"
							Key		= "Locked"

					[CanShowLocksmithScreen]
					PEType		= "StatMod"
					EntityPE	= "FrobberPE"
					StatName	= "ShowLocksmithScreen"
					Input		= "FloatZeroPE"

		[DoorOnDamagedReaction]
		Rule		= "OnDamagedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayDoorDamagedFX"

			[PlayDoorDamagedFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "WoodSplintersFXPE"

				[WoodSplintersFXPE]
				PEType		= "ConstantString"
				Value		= "PS_WoodSplintersBreak"

		[DoorOnDiedReaction]
		Rule		= "OnDiedRule"
		NumActions	= &
		@ Action
		@@&			= "DestroySelfAction"

		# Let AIs push doors to open them
		[DoorOnPushedReaction]
		Rule		= "OnPushedCanOpenDoorsRule"
		NumActions	= &
		@ Action
		@@&			= "TryPushedToggleAction"

			# Don't bother checking CanUnlockDoors; that's actually all handled
			# in TryToggle. This just makes sure that things won't even try
			# (and thereby invoke failed SFX) if they don't have the capacity
			# to open doors.
			[OnPushedCanOpenDoorsRule]
			Event			= "OnPushed"
			NumConditions	= &
			@ Condition
			@@&				= "PusherCanOpenDoors"

				[PusherCanOpenDoors]
				PEType		= "PushContext"
				EntityPE	= "PusherPE"
				Input		= "CanOpenDoorsPE"

					[CanOpenDoorsPE]
					PEType	= "QueryActionStack"
					Key		= "CanOpenDoors"

			[TryPushedToggleAction]
			ActionType		= "SendEvent"
			EventName		= "TryToggle"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Frobber"
			@@^Value		= "PusherPE"

				[PusherPE]
				PEType	= "QueryActionStack"
				Key		= "Pusher"

		# Add lock to unlocked door
		[DoorOnFrobbedHeldReaction]
		Rule		= "OnFrobbedHeldRule"
		NumActions	= &
		@ Action
		@@&			= "ConditionalAddLock"

			[OnFrobbedHeldRule]
			Event	= "OnFrobbedHeld"

			[ConditionalAddLock]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "CanAffordLockPE"
			@@^Action		= "AddLockCompositeAction"

				[CanAffordLockPE]
				PEType	= "Conditional"
				Op		= "GTE"
				InputA	= "FrobberMoneyPE"
				InputB	= "LocksmithKitCostPE"

				[AddLockCompositeAction]
				ActionType	= "Composite"
				NumActions	= &
				@ Action
				@@&			= "RemoveLocksmithMoney"
				@@&			= "LockDoorAction"

					[RemoveLocksmithMoney]
					ActionType		= "SendEvent"
					EventName		= "RemoveMoney"
					Recipient		= "FrobberPE"
					NumParameters	= &
					@ Parameter
					@@&Name			= "Money"
					@@^Value		= "LocksmithKitCostPE"

					[LockDoorAction]
					ActionType	= "SendEvent"
					EventName	= "Lock"
					Recipient	= "SelfPE"

[LockedDoor]
Extends			= "Door"
EldMesh			= "LockedDoorMesh"
EldDoor			= "LockedDoorDoor"

	[LockedDoorMesh]
	Extends				= "DoorMesh"
	TextureOverride	= "Textures/door-locked_NODXT.tga"

	[LockedDoorDoor]
	Extends	= "DoorDoor"
	Locked	= true

# Indestructible, locked door
[GateDoor]
Extends			= "LockedDoor"
EldMesh			= "GateDoorMesh"
EldCollision	= "GateDoorCollision"
EldDoor			= "GateDoorDoor"
EldHealth		= "GateDoorHealth"

	[GateDoorMesh]
	Extends		= "DoorMesh"
	Mesh		= "Meshes/gatedoor.cms"

	[GateDoorCollision]
	Extends			= "DoorCollision"
	BlocksOcclusion	= false

	[GateDoorDoor]
	Extends					= "LockedDoorDoor"
	UnlockedMesh			= "Meshes/gatedoor-unlocked.cms"
	LockedMesh				= "Meshes/gatedoor.cms"
	UnlockedTexture			= ""
	LockedTexture			= ""
	UnlockedFriendlyName	= "UnlockedGateDoor"
	LockedFriendlyName		= "GateDoor"

	# Gates can be blown up with explosives
	[GateDoorHealth]
	Health				= 1
	DefaultDamageModMul	= 0.0
	NumDamageTypeMods	= &
	@ DamageTypeMod
	@@&Type				= "Explosive"
	@@^Mul				= 1.0

[Ladder5]
#ShouldDebugRender	= true
ShouldDebugCheckSpawnClearance	= false
Extends			= "ClimbableBase"
EldClimbable	= "Ladder5Climbable"
EldCollision	= "Ladder5Collision"
EldMesh			= "Ladder5Mesh"
EldAnchor		= "Ladder5Anchor"
Reactions		= "Ladder5Reactions"

	[Ladder5Climbable]
	UseSnapPlane	= true

	[Ladder5Collision]
	HalfExtentsX	= 0.4921875
	HalfExtentsY	= 0.0546875
	HalfExtentsZ	= 2.4921875
	
	[Ladder5Mesh]
	OffsetZ = -2.5
	Mesh = "Meshes/ladder5.cms"

	[Ladder5Anchor]
	AnchorDirectionY	= -1.0

	[Ladder5Reactions]
	NumReactions	= &
	@ Reaction
	@@&				= "DestroyOnUnanchoredReaction"

[Ladder4]
Extends			= "Ladder5"
EldCollision	= "Ladder4Collision"
EldMesh			= "Ladder4Mesh"

	[Ladder4Collision]
	Extends			= "Ladder5Collision"
	HalfExtentsZ	= 1.9921875

	[Ladder4Mesh]
	OffsetZ	= -2.0
	Mesh	= "Meshes/ladder4.cms"

[Ladder3]
Extends			= "Ladder5"
EldCollision	= "Ladder3Collision"
EldMesh			= "Ladder3Mesh"

	[Ladder3Collision]
	Extends			= "Ladder5Collision"
	HalfExtentsZ	= 1.4921875

	[Ladder3Mesh]
	OffsetZ	= -1.5
	Mesh	= "Meshes/ladder3.cms"

[LibraryReturnDoor]
ShouldDebugCheckSpawnClearance	= false
EldTransform		= "LibraryExitDoorTransform"
EldCollision		= "LibraryExitDoorCollision"
EldMesh				= "LibraryReturnDoorMesh"
EldFrobbable		= "LibraryReturnDoorFrobbable"
EldMapMarker		= "LibraryReturnDoorMapMarker"
Reactions			= "LibraryReturnDoorReactions"

	[LibraryReturnDoorMesh]
	Mesh	= "Meshes/library-exit-door-static.cms"

	[LibraryReturnDoorFrobbable]
	UseMeshExtents	= true
	ExtentsFatten	= 0.05
	FriendlyName	= "ExitDoorUp"
	FrobVerb		= "Go"

	[LibraryReturnDoorMapMarker]
	MarkAsRoom	= true
	Texture		= "Textures/Minimap/return_NODXT.tga"

	[LibraryReturnDoorReactions]
	NumReactions = &
	@ Reaction
	@@& = "LibraryReturnDoorOnFrobbedReaction"

		[LibraryReturnDoorOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "LibraryReturnDoorReturnToHub"

			[LibraryReturnDoorReturnToHub]
			ActionType	= "EldGoToLevel"
			ReturnToHub	= true

[LibraryExitDoor]
ShouldDebugCheckSpawnClearance	= false
EldTransform		= "LibraryExitDoorTransform"
EldCollision		= "LibraryExitDoorCollision"
EldMesh				= "LibraryExitDoorMesh"
EldFrobbable		= "LibraryExitDoorFrobbable"
EldHUDMarker		= "LibraryExitDoorHUDMarker"
EldMapMarker		= "LibraryExitDoorMapMarker"
EldSound			= "."
Label				= "LibraryExitDoorLabel"
VariableMap			= "."
State				= "LibraryExitDoorState"
Reactions			= "LibraryExitDoorReactions"

	[LibraryExitDoorTransform]
	CanMove			= false

	[LibraryExitDoorCollision]
	IsStatic		= true
	HalfExtentsX	= 0.9375
	HalfExtentsY	= 0.4375
	HalfExtentsZ	= 1.4375
	BlocksEntities	= true
	BlocksTrace		= true

	[LibraryExitDoorMesh]
	Mesh	= "Meshes/library-exit-door.cms"

	[LibraryExitDoorFrobbable]
	IsFrobbable		= false
	UseMeshExtents	= true
	ExtentsFatten	= 0.05
	FriendlyName	= "ExitDoor"
	FrobVerb		= "Go"

	[LibraryExitDoorHUDMarker]
	UIScreenName	= "HUD"
	UIWidgetName	= "ExitImage"
	OccludedImage	= "Textures/UI/exit-hud_NODXT.tga"
	UnoccludedImage	= "Textures/UI/exit-hud-2_NODXT.tga"
	FalloffRadius	= 20.0

	[LibraryExitDoorMapMarker]
	MarkAsRoom	= true
	Texture		= "Textures/Minimap/exit_NODXT.tga"

	[LibraryExitDoorLabel]
	Label	= "LibraryExitDoor"

	[LibraryExitDoorState]
	InitialState	= "Closed"

	[LibraryExitDoorReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "LibraryExitDoorOnSpawnedReaction"
	@@&				= "LibraryExitDoorOnLockedReaction"
	@@&				= "LibraryExitDoorOnUnlockedReaction_LT2"
	@@&				= "LibraryExitDoorOnUnlockedReaction_GTE2"
	@@&				= "LibraryExitDoorOnFrobbedReaction"

		[LibraryExitDoorOnSpawnedReaction]
		Rule		= "OnSpawnedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayIdleAnim"
		@@&			= "InitializeUnlockCount"

			[InitializeUnlockCount]
			ActionType		= "SendEvent"
			EventName		= "SetVariable"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Name"
			@@^Value		= "UnlockCountNamePE"
			@@&Name			= "Value"
			@@^Value		= "IntZeroPE"

				[UnlockCountNamePE]
				PEType	= "ConstantString"
				Value	= "UnlockCount"

		[LibraryExitDoorOnLockedReaction]
		Rule		= "LibraryExitDoorOnLockedRule"
		NumActions	= &
		@ Action
		@@&			= "DecrementUnlockCount"

			[LibraryExitDoorOnLockedRule]
			Event			= "Lock"
			NumCriteria		= &
			@ Criterion
			@@&Name			= "State"
			@@^Min			= "ClosedPE"

				[ClosedPE]
				PEType	= "ConstantString"
				Value	= "Closed"

			[DecrementUnlockCount]
			ActionType		= "SendEvent"
			EventName		= "SetVariable"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Name"
			@@^Value		= "UnlockCountNamePE"
			@@&Name			= "Value"
			@@^Value		= "DecrementedUnlockCountPE"

				[DecrementedUnlockCountPE]
				PEType	= "Sub"
				InputA	= "CurrentUnlockCountPE"
				InputB	= "IntOnePE"

		[LibraryExitDoorOnUnlockedReaction_LT2]
		Rule		= "LibraryExitDoorOnUnlockedRule_LT2"
		NumActions	= &
		@ Action
		@@&			= "IncrementUnlockCount"

			[LibraryExitDoorOnUnlockedRule_LT2]
			Event			= "Unlock"
			NumCriteria		= &
			@ Criterion
			@@&Name			= "State"
			@@^Min			= "ClosedPE"
			NumConditions	= &
			@ Condition
			@@&				= "UnlockCountLT2"

				[UnlockCountLT2]
				PEType	= "Conditional"
				Op		= "LT"
				InputA	= "CurrentUnlockCountPE"
				InputB	= "IntTwoPE"

					[CurrentUnlockCountPE]
					PEType			= "GetVariable"
					EntityPE		= "SelfPE"
					VariableName	= "UnlockCount"

			[IncrementUnlockCount]
			ActionType		= "SendEvent"
			EventName		= "SetVariable"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Name"
			@@^Value		= "UnlockCountNamePE"
			@@&Name			= "Value"
			@@^Value		= "IncrementedUnlockCountPE"

				[IncrementedUnlockCountPE]
				PEType	= "Add"
				InputA	= "CurrentUnlockCountPE"
				InputB	= "IntOnePE"

		[LibraryExitDoorOnUnlockedReaction_GTE2]
		Rule		= "LibraryExitDoorOnUnlockedRule_GTE2"
		NumActions	= &
		@ Action
		@@&			= "SetOpenState"
		@@&			= "PlayOpenAnim"
		@@&			= "PlayLibraryExitSFX"
		@@&			= "BecomeFrobbable"
		# This interrupts the music and kind of sucks.
		# @@&			= "ConditionalShowExitLibraryBook"

			[LibraryExitDoorOnUnlockedRule_GTE2]
			Event			= "Unlock"
			NumCriteria		= &
			@ Criterion
			@@&Name			= "State"
			@@^Min			= "ClosedPE"
			NumConditions	= &
			@ Condition
			@@&				= "UnlockCountGTE2"

				[UnlockCountGTE2]
				PEType	= "Conditional"
				Op		= "GTE"
				InputA	= "CurrentUnlockCountPE"
				InputB	= "IntTwoPE"

			[SetOpenState]
			ActionType		= "SendEvent"
			EventName		= "SetState"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "NewState"
			@@^Value		= "OpenPE"

				[OpenPE]
				PEType	= "ConstantString"
				Value	= "Open"

			[PlayLibraryExitSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "LibraryExitSFXPE"

				[LibraryExitSFXPE]
				PEType	= "ConstantString"
				Value	= "LibraryExitSound"

			[ConditionalShowExitLibraryBook]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "HasNotReadExitLibraryBook"
			@@^Action		= "TeachExitLibraryBook"

				[HasNotReadExitLibraryBook]
				PEType	= "NOT"
				Input	= "HasReadExitLibraryBook"

					[HasReadExitLibraryBook]
					PEType	= "EldGetPersistentVar"
					Key		= "HasReadExitLibraryBook"

				[TeachExitLibraryBook]
				ActionType	= "Composite"
				NumActions	= &
				@ Action
				@@&			= "ShowExitLibraryBook"
				@@&			= "MarkExitLibraryBookRead"

					[ShowExitLibraryBook]
					ActionType	= "EldShowBook"
					BookString	= "Book_ExitLibrary"

					[MarkExitLibraryBookRead]
					ActionType	= "EldSetPersistentVar"
					Key			= "HasReadExitLibraryBook"
					ValuePE		= "TruePE"

		[LibraryExitDoorOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "GoToEndgameWorld"

			[GoToEndgameWorld]
			ActionType	= "EldGoToLevel"
			Level		= "Endgame-1"

[ColumnHard]
EldTransform	= "ColumnBaseTransform"
EldCollision	= "ColumnBaseCollision"
EldMesh			= "ColumnBaseMesh"
Reactions		= "ColumnHardReactions"

	[ColumnHardReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "OnSpawnSpawnHardSoulReaction"
	@@&				= "OnSpawnDestroySelfReaction"

		[OnSpawnSpawnHardSoulReaction]
		Rule		= "OnSpawnedQueuedAndPlayerHasFinishedGameRule"
		NumActions	= &
		@ Action
		@@&			= "SpawnHardSoulAction"

			[OnSpawnedQueuedAndPlayerHasFinishedGameRule]
			Event			= "OnSpawnedQueued"
			NumConditions	= &
			@ Condition
			@@&				= "PlayerHasFinishedGamePE"

				[PlayerHasFinishedGamePE]
				PEType	= "EldGetPersistentVar"
				Key		= "HasFinishedGame"

			[SpawnHardSoulAction]
			ActionType		= "EldSpawnEntity"
			Entity			= "HardSoulPickup"
			SpawnOffsetZ	= 1.0

		[OnSpawnDestroySelfReaction]
		Rule		= "OnSpawnedQueuedRule"
		NumActions	= &
		@ Action
		@@&			= "DestroySelfAction"

[Column_Base]
EldTransform	= "ColumnBaseTransform"
EldCollision	= "ColumnBaseCollision"
EldMesh			= "ColumnBaseMesh"
EldFrobbable	= "ColumnBaseFrobbable"
Reactions		= "ColumnBaseReactions"

	[ColumnBaseTransform]
	CanMove			= false

	[ColumnBaseCollision]
	IsStatic		= true
	HalfExtentsXY	= 0.4375
	HalfExtentsZ	= 0.4375
	BlocksEntities	= true
	BlocksTrace		= true

	[ColumnBaseMesh]
	Mesh			= "Meshes/column.cms"

	[ColumnBaseFrobbable]
	UseMeshExtents	= true
	ExtentsFatten	= 0.05
	FriendlyName	= "Pedestal"
	FrobVerb		= "Examine"

	[ColumnBaseReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "ColumnOnFrobbedReaction_WithKey"
	@@&				= "ColumnOnFrobbedReaction_WithoutKey"
	@@&				= "ColumnOnSoulRemovedReaction"

		[ColumnOnFrobbedReaction_WithKey]
		Rule		= "ColumnOnFrobbedRule_WithKey"
		NumActions	= &
		@ Action
		@@&			= "BecomeNonFrobbable"
		@@&			= "ColumnUnlockExitDoor"
		@@&			= "ColumnRemoveSoul"
		@@&			= "ColumnSpawnSoul"
		@@&			= "PlaySpawnSoulSFX"

			[ColumnOnFrobbedRule_WithKey]
			Event			= "OnFrobbed"
			NumConditions	= &
			@ Condition
			@@&				= "FrobberHasColumnKeyPE"

				[FrobberHasColumnKeyPE]
				PEType		= "EldGetItem"
				EntityPE	= "FrobberPE"
				SlotPE		= "ColumnKeyNamePE"
				
					[ColumnKeyNamePE]
					PEType	= "Lookup"
					Key		= "KeyName"

			[ColumnUnlockExitDoor]
			ActionType		= "SendEvent"
			EventName		= "Unlock"
			EventOwner		= "LibraryExitDoorPE"
			Recipient		= "LibraryExitDoorPE"

				[LibraryExitDoorPE]
				PEType	= "GetEntityByLabel"
				Label	= "LibraryExitDoor"

			[ColumnRemoveSoul]
			ActionType		= "SendEvent"
			EventName		= "RemoveItem"
			Recipient		= "FrobberPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Slot"
			@@^Value		= "ColumnKeyNamePE"

			[ColumnSpawnSoul]
			ActionType		= "EldSpawnEntity"
			EntityPE		= "ColumnPickupNamePE"
			SpawnOffsetZ	= 1.0

					[ColumnPickupNamePE]
					PEType	= "Lookup"
					Key		= "PickupName"

			[PlaySpawnSoulSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "FrobberPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "SpawnSoulSFXPE"

				[SpawnSoulSFXPE]
				PEType	= "Lookup"
				Key		= "SoulSoundName"

		[ColumnOnFrobbedReaction_WithoutKey]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "ShowColumnBook"

			[ShowColumnBook]
			ActionType	= "EldShowBook"
			BookString	= "Book_Column"

		[ColumnOnSoulRemovedReaction]
		Rule		= "ColumnOnSoulRemovedRule"
		NumActions	= &
		@ Action
		@@&			= "ColumnLockExitDoor"
		@@&			= "BecomeFrobbable"

			[ColumnOnSoulRemovedRule]
			Event		= "OnSoulRemoved"
			NumCriteria	= &
			@ Criterion
			# This rule prevents bugs if I debug spawn souls in hub
			@@&Name		= "IsFrobbable"
			@@^Min		= "FalsePE"

			[ColumnLockExitDoor]
			ActionType		= "SendEvent"
			EventName		= "Lock"
			EventOwner		= "LibraryExitDoorPE"
			Recipient		= "LibraryExitDoorPE"

[ColumnWater]
Extends		= "Column_Base"
EldMesh		= "ColumnWaterMesh"
PEMap		= "ColumnWaterPEMap"
Label		= "ColumnWaterLabel"

	[ColumnWaterMesh]
	Extends				= "ColumnBaseMesh"
	TextureOverride	= "Textures/column-water_NODXT.tga"

	[ColumnWaterPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "KeyName"
	@@^Def	= "WaterKeyNamePE"
	@@&Key	= "PickupName"
	@@^Def	= "WaterPickupNamePE"
	@@&Key	= "SoulSoundName"
	@@^Def	= "WaterSoulSoundNamePE"

		[WaterKeyNamePE]
		PEType	= "ConstantString"
		Value	= "WaterSoul"

		[WaterPickupNamePE]
		PEType	= "ConstantString"
		Value	= "WaterSoulPickup"

		[WaterSoulSoundNamePE]
		PEType	= "ConstantString"
		Value	= "PlacedWaterSoulSound"

	[ColumnWaterLabel]
	Label	= "WaterColumn"

[ColumnSand]
Extends		= "Column_Base"
EldMesh		= "ColumnSandMesh"
PEMap		= "ColumnSandPEMap"
Label		= "ColumnSandLabel"

	[ColumnSandMesh]
	Extends				= "ColumnBaseMesh"
	TextureOverride	= "Textures/column-sand_NODXT.tga"

	[ColumnSandPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "KeyName"
	@@^Def	= "SandKeyNamePE"
	@@&Key	= "PickupName"
	@@^Def	= "SandPickupNamePE"
	@@&Key	= "SoulSoundName"
	@@^Def	= "SandSoulSoundNamePE"

		[SandKeyNamePE]
		PEType	= "ConstantString"
		Value	= "SandSoul"

		[SandPickupNamePE]
		PEType	= "ConstantString"
		Value	= "SandSoulPickup"

		[SandSoulSoundNamePE]
		PEType	= "ConstantString"
		Value	= "PlacedSandSoulSound"

	[ColumnSandLabel]
	Label	= "SandColumn"

[ColumnSwamp]
Extends		= "Column_Base"
EldMesh		= "ColumnSwampMesh"
PEMap		= "ColumnSwampPEMap"
Label		= "ColumnSwampLabel"

	[ColumnSwampMesh]
	Extends				= "ColumnBaseMesh"
	TextureOverride	= "Textures/column-swamp_NODXT.tga"

	[ColumnSwampPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "KeyName"
	@@^Def	= "SwampKeyNamePE"
	@@&Key	= "PickupName"
	@@^Def	= "SwampPickupNamePE"
	@@&Key	= "SoulSoundName"
	@@^Def	= "SwampSoulSoundNamePE"

		[SwampKeyNamePE]
		PEType	= "ConstantString"
		Value	= "SwampSoul"

		[SwampPickupNamePE]
		PEType	= "ConstantString"
		Value	= "SwampSoulPickup"

		[SwampSoulSoundNamePE]
		PEType	= "ConstantString"
		Value	= "PlacedSwampSoulSound"

	[ColumnSwampLabel]
	Label	= "SwampColumn"

[Mirror]
#ShouldDebugRender	= true
EldTransform		= "MirrorTransform"
EldCollision		= "MirrorCollision"
EldMesh				= "MirrorMesh"
EldDropShadow		= "MirrorDropShadow"
EldFrobbable		= "MirrorFrobbable"
Reactions			= "MirrorReactions"

	[MirrorTransform]
	CanMove			= false

	[MirrorCollision]
	IsStatic		= true
	HalfExtentsX	= 0.3125
	HalfExtentsY	= 0.125
	HalfExtentsZ	= 0.9375
	BlocksEntities	= true
	BlocksTrace		= true

	[MirrorMesh]
	Mesh			= "Meshes/mirror.cms"

	[MirrorDropShadow]
	Radius				= 0.5
	VoxelCheckOffsetZ	= -0.5
	Alpha				= 0.5
	ShadowFloatZ		= 0.01

	[MirrorFrobbable]
	UseMeshExtents	= true
	ExtentsFatten	= 0.05
	FriendlyName	= "Mirror"
	FrobVerb		= "Examine"

	[MirrorReactions]
	NumReactions = &
	@ Reaction
	@@& = "MirrorOnFrobbedReaction"

		[MirrorOnFrobbedReaction]
		Rule = "OnFrobbedRule"
		NumActions = &
		@ Action
		@@& = "MirrorOnFrobbedShowUI"

			[MirrorOnFrobbedShowUI]
			ActionType	= "UIPushScreen"
			Screen		= "MirrorScreen"

[Statue]
#ShouldDebugRender	= true
EldTransform		= "StatueTransform"
EldCollision		= "StatueCollision"
EldMesh				= "StatueMesh"
EldLight			= "StatueLight"
EldFrobbable		= "StatueFrobbable"
EldMapMarker		= "StatueMapMarker"

	[StatueTransform]
	CanMove	= false

	[StatueCollision]
	IsStatic		= true
	HalfExtentsXY	= 0.9375
	HalfExtentsZ	= 1.4375
	BlocksEntities	= true
	BlocksTrace		= true
	#BlocksOcclusion	= true	# Disabled because it messes with the statue's own light.

	[StatueMesh]
	Mesh			= "Meshes/statue.cms"
	OffsetZ			= -1.5
	CullDistance	= 0.0

	[StatueLight]
	Radius = 8.0
	ColorR = 0.25
	ColorG = 0.75
	ColorB = 1.25

	[StatueFrobbable]
	UseCollisionExtents = true
	FrobVerb			= "Pray"

	[StatueMapMarker]
	MarkAsRoom	= true
	Texture		= "Textures/Minimap/statue_NODXT.tga"

	# Shared statue action stuff
	[ConditionalShowStatueBook]
	ActionType		= "Selector"
	NumSelections	= &
	@ Selection
	@@&Condition	= "HasNotReadStatueBook"
	@@^Action		= "TeachStatueBook"

		[HasNotReadStatueBook]
		PEType	= "NOT"
		Input	= "HasReadStatueBook"

			[HasReadStatueBook]
			PEType	= "EldGetPersistentVar"
			Key		= "HasReadStatueBook"

		[TeachStatueBook]
		ActionType	= "Composite"
		NumActions	= &
		@ Action
		@@&			= "ShowStatueBook"
		@@&			= "MarkStatueBookRead"

			[MarkStatueBookRead]
			ActionType	= "EldSetPersistentVar"
			Key			= "HasReadStatueBook"
			ValuePE		= "TruePE"

	[StatueOnFrobbedGivePower]
	ActionType	= "EldGiveItem"
	ItemPE		= "PowerLookupPE"
	GiveTo		= "FrobberPE"

		[PowerLookupPE]
		PEType	= "Lookup"
		Key		= "Power"

[StatueHypnotize]
Extends			= "Statue"
EldFrobbable	= "StatueHypnotizeFrobbable"
EldParticles	= "StatueHypnotizeParticles"
PEMap			= "StatueHypnotizePEMap"
Reactions		= "StatueHypnotizeReactions"

	[StatueHypnotizeParticles]
	Particles		= "PS_HypnotizeStatue"
	CullDistance	= 0.0

	[StatueHypnotizeFrobbable]
	Extends			= "StatueFrobbable"
	FriendlyName	= "StatueHypnotize"

	[StatueHypnotizePEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "Power"
	@@^Def	= "HypnotizePowerPE"

		[HypnotizePowerPE]
		PEType	= "ConstantString"
		Value	= "PowerHypnotize"

	[StatueHypnotizeReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "StatueHypnotizeOnFrobbedReaction"
	@@&				= "StatueHypnotizeShowBookReaction"

		[StatueHypnotizeShowBookReaction]
		Rule		= "OnShowPowerBookRule"
		NumActions	= &
		@ Action
		@@&			= "ShowHypnotizeBook"

			[OnShowPowerBookRule]
			Event	= "OnShowPowerBook"

			[ShowHypnotizeBook]
			ActionType	= "EldShowBook"
			BookString	= "Book_Hypnotize"
			IsDynamic	= true

		[StatueHypnotizeOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "ConditionalShowStatueBook"
		@@&			= "QueueShowPowerBook"
		@@&			= "StatueOnFrobbedGivePower"

			[QueueShowPowerBook]
			ActionType	= "SendEvent"
			EventName	= "OnShowPowerBook"
			Recipient	= "SelfPE"
			QueueEvent	= true

# Rm
[StatueBlast]
Extends			= "Statue"
EldLight		= "StatueBlastLight"
EldFrobbable	= "StatueBlastFrobbable"
EldParticles	= "StatueBlastParticles"
PEMap			= "StatueBlastPEMap"
Reactions		= "StatueBlastReactions"

	[StatueBlastLight]
	Extends	= "StatueLight"
	ColorR = 1.25
	ColorG = 0.50
	ColorB = 0.25

	[StatueBlastParticles]
	Particles		= "PS_BlastStatue"
	CullDistance	= 0.0

	[StatueBlastFrobbable]
	Extends			= "StatueFrobbable"
	FriendlyName	= "StatueBlast"

	[StatueBlastPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "Power"
	@@^Def	= "BlastPowerPE"

		[BlastPowerPE]
		PEType	= "ConstantString"
		Value	= "PowerBlast"

	[StatueBlastReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "StatueBlastOnFrobbedReaction"
	@@&				= "StatueBlastShowBookReaction"

		[StatueBlastShowBookReaction]
		Rule		= "OnShowPowerBookRule"
		NumActions	= &
		@ Action
		@@&			= "ShowBlastBook"

			[ShowBlastBook]
			ActionType	= "EldShowBook"
			BookString	= "Book_Blast"
			IsDynamic	= true

		[StatueBlastOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "ConditionalShowStatueBook"
		@@&			= "QueueShowPowerBook"
		@@&			= "StatueOnFrobbedGivePower"
# Rm

[StatueSoulTrap]
Extends			= "Statue"
EldLight		= "StatueSoulTrapLight"
EldFrobbable	= "StatueSoulTrapFrobbable"
EldParticles	= "StatueSoulTrapParticles"
PEMap			= "StatueSoulTrapPEMap"
Reactions		= "StatueSoulTrapReactions"

	[StatueSoulTrapParticles]
	Particles		= "PS_SoulTrapStatue"
	CullDistance	= 0.0

	[StatueSoulTrapFrobbable]
	Extends			= "StatueFrobbable"
	FriendlyName	= "StatueSoulTrap"

	[StatueSoulTrapLight]
	Extends	= "StatueLight"
	ColorR	= 1.1
	ColorG	= 1.1
	ColorB	= 1.1

	[StatueSoulTrapPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "Power"
	@@^Def	= "SoulTrapPowerPE"

		[SoulTrapPowerPE]
		PEType	= "ConstantString"
		Value	= "PowerSoulTrap"

	[StatueSoulTrapReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "StatueSoulTrapOnFrobbedReaction"
	@@&				= "StatueSoulTrapShowBookReaction"

		[StatueSoulTrapShowBookReaction]
		Rule		= "OnShowPowerBookRule"
		NumActions	= &
		@ Action
		@@&			= "ShowSoulTrapBook"

			[ShowSoulTrapBook]
			ActionType	= "EldShowBook"
			BookString	= "Book_SoulTrap"
			IsDynamic	= true

		[StatueSoulTrapOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "ConditionalShowStatueBook"
		@@&			= "QueueShowPowerBook"
		@@&			= "StatueOnFrobbedGivePower"

[StatueCloak]
Extends			= "Statue"
EldLight		= "StatueCloakLight"
EldFrobbable	= "StatueCloakFrobbable"
EldParticles	= "StatueCloakParticles"
PEMap			= "StatueCloakPEMap"
Reactions		= "StatueCloakReactions"

	[StatueCloakParticles]
	Particles		= "PS_CloakStatue"
	CullDistance	= 0.0

	[StatueCloakFrobbable]
	Extends			= "StatueFrobbable"
	FriendlyName	= "StatueCloak"

	[StatueCloakLight]
	Extends	= "StatueLight"
	ColorR = 1.1
	ColorG = 0.25
	ColorB = 1.1

	[StatueCloakPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "Power"
	@@^Def	= "CloakPowerPE"

		[CloakPowerPE]
		PEType	= "ConstantString"
		Value	= "PowerCloak"

	[StatueCloakReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "StatueCloakOnFrobbedReaction"
	@@&				= "StatueCloakShowBookReaction"

		[StatueCloakShowBookReaction]
		Rule		= "OnShowPowerBookRule"
		NumActions	= &
		@ Action
		@@&			= "ShowCloakBook"

			[ShowCloakBook]
			ActionType	= "EldShowBook"
			BookString	= "Book_Cloak"
			IsDynamic	= true

		[StatueCloakOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "ConditionalShowStatueBook"
		@@&			= "QueueShowPowerBook"
		@@&			= "StatueOnFrobbedGivePower"

[StatueSummon]
Extends			= "Statue"
EldLight		= "StatueSummonLight"
EldFrobbable	= "StatueSummonFrobbable"
EldParticles	= "StatueSummonParticles"
PEMap			= "StatueSummonPEMap"
Reactions		= "StatueSummonReactions"

	[StatueSummonParticles]
	Particles		= "PS_SummonStatue"
	CullDistance	= 0.0

	[StatueSummonFrobbable]
	Extends			= "StatueFrobbable"
	FriendlyName	= "StatueSummon"

	[StatueSummonLight]
	Extends	= "StatueLight"
	ColorR = 1.0
	ColorG = 0.25
	ColorB = 1.25

	[StatueSummonPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "Power"
	@@^Def	= "SummonPowerPE"

		[SummonPowerPE]
		PEType	= "ConstantString"
		Value	= "PowerSummon"

	[StatueSummonReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "StatueSummonOnFrobbedReaction"
	@@&				= "StatueSummonShowBookReaction"

		[StatueSummonShowBookReaction]
		Rule		= "OnShowPowerBookRule"
		NumActions	= &
		@ Action
		@@&			= "ShowSummonBook"

			[ShowSummonBook]
			ActionType	= "EldShowBook"
			BookString	= "Book_Summon"
			IsDynamic	= true

		[StatueSummonOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "ConditionalShowStatueBook"
		@@&			= "QueueShowPowerBook"
		@@&			= "StatueOnFrobbedGivePower"

[StatueLift]
Extends			= "Statue"
EldLight		= "StatueLiftLight"
EldFrobbable	= "StatueLiftFrobbable"
EldParticles	= "StatueLiftParticles"
PEMap			= "StatueLiftPEMap"
Reactions		= "StatueLiftReactions"

	[StatueLiftParticles]
	Particles		= "PS_LiftStatue"
	CullDistance	= 0.0

	[StatueLiftFrobbable]
	Extends			= "StatueFrobbable"
	FriendlyName	= "StatueLift"

	[StatueLiftLight]
	Extends	= "StatueLight"
	ColorR = 1.25
	ColorG = 1.0
	ColorB = 0.25

	[StatueLiftPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "Power"
	@@^Def	= "LiftPowerPE"

		[LiftPowerPE]
		PEType	= "ConstantString"
		Value	= "PowerLift"

	[StatueLiftReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "StatueLiftOnFrobbedReaction"
	@@&				= "StatueLiftShowBookReaction"

		[StatueLiftShowBookReaction]
		Rule		= "OnShowPowerBookRule"
		NumActions	= &
		@ Action
		@@&			= "ShowLiftBook"

			[ShowLiftBook]
			ActionType	= "EldShowBook"
			BookString	= "Book_Lift"
			IsDynamic	= true

		[StatueLiftOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "ConditionalShowStatueBook"
		@@&			= "QueueShowPowerBook"
		@@&			= "StatueOnFrobbedGivePower"

[StatueBuild]
Extends			= "Statue"
EldLight		= "StatueBuildLight"
EldFrobbable	= "StatueBuildFrobbable"
EldParticles	= "StatueBuildParticles"
PEMap			= "StatueBuildPEMap"
Reactions		= "StatueBuildReactions"

	[StatueBuildParticles]
	Particles		= "PS_BuildStatue"
	CullDistance	= 0.0

	[StatueBuildFrobbable]
	Extends			= "StatueFrobbable"
	FriendlyName	= "StatueBuild"

	[StatueBuildLight]
	Extends	= "StatueLight"
	ColorR = 1.25
	ColorG = 0.75
	ColorB = 0.25

	[StatueBuildPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "Power"
	@@^Def	= "BuildPowerPE"

		[BuildPowerPE]
		PEType	= "ConstantString"
		Value	= "PowerBuild"

	[StatueBuildReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "StatueBuildOnFrobbedReaction"
	@@&				= "StatueBuildShowBookReaction"

		[StatueBuildShowBookReaction]
		Rule		= "OnShowPowerBookRule"
		NumActions	= &
		@ Action
		@@&			= "ShowBuildBook"

			[ShowBuildBook]
			ActionType	= "EldShowBook"
			BookString	= "Book_Build"
			IsDynamic	= true

		[StatueBuildOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "ConditionalShowStatueBook"
		@@&			= "QueueShowPowerBook"
		@@&			= "StatueOnFrobbedGivePower"

[StatueKnock]
Extends			= "Statue"
EldLight		= "StatueKnockLight"
EldFrobbable	= "StatueKnockFrobbable"
EldParticles	= "StatueKnockParticles"
PEMap			= "StatueKnockPEMap"
Reactions		= "StatueKnockReactions"

	[StatueKnockParticles]
	Particles		= "PS_KnockStatue"
	CullDistance	= 0.0

	[StatueKnockFrobbable]
	Extends			= "StatueFrobbable"
	FriendlyName	= "StatueKnock"

	[StatueKnockLight]
	Extends	= "StatueLight"
	ColorR = 0.25
	ColorG = 0.75
	ColorB = 1.25

	[StatueKnockPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "Power"
	@@^Def	= "KnockPowerPE"

		[KnockPowerPE]
		PEType	= "ConstantString"
		Value	= "PowerKnock"

	[StatueKnockReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "StatueKnockOnFrobbedReaction"
	@@&				= "StatueKnockShowBookReaction"

		[StatueKnockShowBookReaction]
		Rule		= "OnShowPowerBookRule"
		NumActions	= &
		@ Action
		@@&			= "ShowKnockBook"

			[ShowKnockBook]
			ActionType	= "EldShowBook"
			BookString	= "Book_Knock"
			IsDynamic	= true

		[StatueKnockOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "ConditionalShowStatueBook"
		@@&			= "QueueShowPowerBook"
		@@&			= "StatueOnFrobbedGivePower"

[StatueFlare]
Extends			= "Statue"
EldLight		= "StatueFlareLight"
EldFrobbable	= "StatueFlareFrobbable"
EldParticles	= "StatueFlareParticles"
PEMap			= "StatueFlarePEMap"
Reactions		= "StatueFlareReactions"

	[StatueFlareParticles]
	Particles		= "PS_FlareStatue"
	CullDistance	= 0.0

	[StatueFlareFrobbable]
	Extends			= "StatueFrobbable"
	FriendlyName	= "StatueFlare"

	[StatueFlareLight]
	Extends	= "StatueLight"
	ColorR	= 1.4
	ColorG	= 0.7
	ColorB	= 0.4

	[StatueFlarePEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "Power"
	@@^Def	= "FlarePowerPE"

		[FlarePowerPE]
		PEType	= "ConstantString"
		Value	= "PowerFlare"

	[StatueFlareReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "StatueFlareOnFrobbedReaction"
	@@&				= "StatueFlareShowBookReaction"

		[StatueFlareShowBookReaction]
		Rule		= "OnShowPowerBookRule"
		NumActions	= &
		@ Action
		@@&			= "ShowFlareBook"

			[ShowFlareBook]
			ActionType	= "EldShowBook"
			BookString	= "Book_Flare"
			IsDynamic	= true

		[StatueFlareOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "ConditionalShowStatueBook"
		@@&			= "QueueShowPowerBook"
		@@&			= "StatueOnFrobbedGivePower"

[StatueTeleport]
Extends			= "Statue"
EldLight		= "StatueTeleportLight"
EldFrobbable	= "StatueTeleportFrobbable"
EldParticles	= "StatueTeleportParticles"
PEMap			= "StatueTeleportPEMap"
Reactions		= "StatueTeleportReactions"

	[StatueTeleportParticles]
	Particles		= "PS_TeleportStatue"
	CullDistance	= 0.0

	[StatueTeleportFrobbable]
	Extends			= "StatueFrobbable"
	FriendlyName	= "StatueTeleport"

	[StatueTeleportLight]
	Extends	= "StatueLight"
	ColorR	= 0.5
	ColorG	= 1.4
	ColorB	= 0.5

	[StatueTeleportPEMap]
	NumPEs	= &
	@ PE
	@@&Key	= "Power"
	@@^Def	= "TeleportPowerPE"

		[TeleportPowerPE]
		PEType	= "ConstantString"
		Value	= "PowerTeleport"

	[StatueTeleportReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "StatueTeleportOnFrobbedReaction"
	@@&				= "StatueTeleportShowBookReaction"

		[StatueTeleportShowBookReaction]
		Rule		= "OnShowPowerBookRule"
		NumActions	= &
		@ Action
		@@&			= "ShowTeleportBook"

			[ShowTeleportBook]
			ActionType	= "EldShowBook"
			BookString	= "Book_Teleport"
			IsDynamic	= true

		[StatueTeleportOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "ConditionalShowStatueBook"
		@@&			= "QueueShowPowerBook"
		@@&			= "StatueOnFrobbedGivePower"

[BarnacleWall]
Extends			= "BarnacleFloor"
EldCollision	= "BarnacleWallCollision"
EldMesh			= "BarnacleWallMesh"
EldAnchor		= "BarnacleWallAnchor"

	# TODO: I actually want two extents; one for touching and one for tracing.
	[BarnacleWallCollision]
	# Trace extents
	#HalfExtentsX	= 0.25
	#HalfExtentsY	= 0.1
	#HalfExtentsZ	= 0.25
	# Touch extents
	HalfExtentsXY	= 0.45
	HalfExtentsZ	= 0.45
	BlocksTrace		= true

	[BarnacleWallMesh]
	Mesh	= "Meshes/barnacle-wall.cms"

	[BarnacleWallAnchor]
	AnchorDirectionY	= -1.0

[BarnacleFloor]
#ShouldDebugRender	= true
ShouldDebugCheckSpawnClearance	= false
EldTransform	= "BarnacleTransform"
EldCollision	= "BarnacleFloorCollision"
EldMesh			= "BarnacleFloorMesh"
EldAnchor		= "BarnacleFloorAnchor"
EldHealth		= "BarnacleHealth"
EldSound		= "."
EldParticles	= "."
State			= "BarnacleState"
Reactions		= "BarnacleReactions"
Owner			= "."

	[BarnacleTransform]
	CanMove	= false

	# TODO: I actually want two extents; one for touching and one for tracing.
	[BarnacleFloorCollision]
	# Trace extents
	#HalfExtentsXY	= 0.25
	#HalfExtentsZ	= 0.1
	# Touch extents
	HalfExtentsXY	= 0.45
	HalfExtentsZ	= 0.45
	BlocksTrace		= true

	[BarnacleFloorMesh]
	Mesh	= "Meshes/barnacle-floor.cms"

	[BarnacleFloorAnchor]
	AnchorDirectionZ	= -1.0

	[BarnacleHealth]
	Health	= 1

	[BarnacleState]
	InitialState	= "Primed"

	[BarnacleReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "BarnacleSphereCheckReaction"
	@@&				= "BarnacleExplodeReaction"
	@@&				= "BarnacleOnDiedReaction"
	@@&				= "BarnacleOnTouchedReaction"
	@@&				= "BarnacleOnSpawnedReaction"
	@@&				= "BarnacleOnUnanchoredReaction"

		[BarnacleOnSpawnedReaction]
		Rule		= "OnSpawnedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayBarnacleAnim"

			[PlayBarnacleAnim]
			ActionType	= "EldPlayAnim"
			Animation	= "Idle"
			Loop		= true
			PlayRatePE	= "BarnaclePlayRatePE"

				[BarnaclePlayRatePE]
				PEType	= "RandomFloat"
				ValueA	= 0.8
				ValueB	= 1.25

		[BarnacleSphereCheckReaction]
		Rule		= "ExplodeSphereCheckRule"	# From dynamite
		NumActions	= &
		@ Action
		@@&			= "BarnacleDealDamage"

			[BarnacleDealDamage]
			ActionType		= "SendEvent"
			EventName		= "TakeDamage"
			Recipient		= "CheckedPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "DamageAmount"
			@@^Value		= "BarnacleDamagePE"
			@@&Name			= "Damager"
			@@^Value		= "SelfPE"
			@@&Name			= "DamageType"
			@@^Value		= "PoisonDamageTypePE"

				[BarnacleDamagePE]
				PEType	= "ConstantInt"
				Value	= 2

		[BarnacleExplodeReaction]
		Rule		= "OnExplodeAndNotExplodedRule"	# From dynamite
		NumActions	= &
		@ Action
		@@&			= "SetExplodedState"
		@@&			= "HideMeshAction"
		@@&			= "StopTouchingAction"
		@@&			= "BarnacleSphereCheck"
		@@&			= "PlayBarnacleAINoise"
		@@&			= "PlayBarnacleBurstVFX"
		@@&			= "PlayBarnacleGasVFX"
		@@&			= "PlayBarnacleBurstSFX"
		@@&			= "BarnacleQueueDestroySelf"

			[BarnacleSphereCheck]
			ActionType	= "EldCheckSphere"
			Radius		= 1.5
			CheckTag	= "Explode"

			[PlayBarnacleAINoise]
			ActionType		= "SendEvent"
			EventName		= "OnAINoise"
			NumParameters	= &
			@ Parameter
			@@&Name			= "NoiseEntity"
			@@^Value		= "OwnerPE"
			@@&Name			= "NoiseLocation"
			@@^Value		= "LocationPE"
			@@&Name			= "NoiseRadius"
			@@^Value		= "BarnacleNoiseRadiusPE"

				[BarnacleNoiseRadiusPE]
				PEType	= "ConstantFloat"
				Value	= 8.0

			[PlayBarnacleBurstVFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "BarnacleBurstVFXPE"

				[BarnacleBurstVFXPE]
				PEType		= "ConstantString"
				Value		= "PS_BarnacleDirt"

			[PlayBarnacleGasVFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "BarnacleGasVFXPE"

				[BarnacleGasVFXPE]
				PEType		= "ConstantString"
				Value		= "PS_BarnacleGas"

			[PlayBarnacleBurstSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "BarnacleBurstSFXPE"

				[BarnacleBurstSFXPE]
				PEType	= "ConstantString"
				Value	= "BarnacleBurstSound"

			# Give the FX time to play
			[BarnacleQueueDestroySelf]
			ActionType		= "SendEvent"
			EventName		= "Destroy"
			Recipient		= "SelfPE"
			QueueEvent		= true
			DispatchDelay	= 4.0

		[BarnacleOnDiedReaction]
		Rule		= "OnDiedAndNotExplodedRule"	# From dynamite
		NumActions	= &
		@ Action
		@@&			= "BarnacleOnDiedSetOwner"
		@@&			= "ExplodeAction"

			[BarnacleOnDiedSetOwner]
			ActionType		= "SendEvent"
			EventName		= "SetOwner"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "NewOwner"
			@@^Value		= "KillerPE"

		[BarnacleOnTouchedReaction]
		Rule		= "OnTouchedAndNotExplodedRule"
		NumActions	= &
		@ Action
		@@&			= "BarnacleOnTouchedSetOwner"
		@@&			= "ExplodeAction"

			[OnTouchedAndNotExplodedRule]
			Event			= "OnTouched"
			NumConditions	= &
			@ Condition
			@@&				= "IsNotExplodedPE"

			[BarnacleOnTouchedSetOwner]
			ActionType		= "SendEvent"
			EventName		= "SetOwner"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "NewOwner"
			@@^Value		= "TouchedPE"

		[BarnacleOnUnanchoredReaction]
		Rule		= "OnUnanchoredAndNotExplodedRule"
		NumActions	= &
		@ Action
		@@&			= "ExplodeAction"

			[OnUnanchoredAndNotExplodedRule]
			Event			= "OnUnanchored"
			NumConditions	= &
			@ Condition
			@@&				= "IsNotExplodedPE"

[Spikes]
#ShouldDebugRender = true
EldTransform	= "SpikesTransform"
EldMesh			= "SpikesMesh"
EldDropShadow	= "SpikesDropShadow"
EldCollision	= "SpikesCollision"
EldAnchor		= "SpikesAnchor"
EldSpikes		= "SpikesSpikes"
Reactions		= "SpikesReactions"

	[SpikesTransform]
	CanMove	= false

	[SpikesMesh]
	Mesh	= "Meshes/spikes.cms"

	[SpikesCollision]
	HalfExtentsXY	= 0.375
	HalfExtentsZ	= 0.375

	[SpikesDropShadow]
	Radius = 0.625
	VoxelCheckOffsetZ = 0.0
	Alpha = 0.25
	ShadowFloatZ = 0.06

	[SpikesAnchor]
	AnchorDirectionZ	= -1.0

	[SpikesSpikes]
	SpeedThreshold			= 2.85
	CheckMovingDown			= true
	RecentlyLandedThreshold	= 0.15	# This makes crouch-dropping into a field of spikes safe(r), and lets you drop down one step onto spikes safely.

	[SpikesReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "SpikesOnSpawnedReaction"
	@@&				= "SpikesOnSpikedReaction"
	@@&				= "DestroyOnUnanchoredReaction"

		[DestroyOnUnanchoredReaction]
		Rule		= "OnUnanchoredRule"
		NumActions	= &
		@ Action
		@@&			= "DestroySelfAction"

			[OnUnanchoredRule]
			Event	= "OnUnanchored"

		[SpikesOnSpawnedReaction]
		Rule		= "OnSpawnedRule"
		NumActions	= &
		@ Action
		@@&			= "PlaySpikesAnim"

			[PlaySpikesAnim]
			ActionType	= "EldPlayAnim"
			Animation	= "Idle"
			Loop		= true
			PlayRatePE	= "SpikesPlayRatePE"

				[SpikesPlayRatePE]
				PEType	= "RandomFloat"
				ValueA	= 0.8
				ValueB	= 1.25

		[SpikesOnSpikedReaction]
		Rule		= "OnSpikedRule"
		NumActions	= &
		@ Action
		@@&			= "SpikesOnSpikedDamageToucher"

			[OnSpikedRule]
			Event			= "OnSpiked"

			[SpikesOnSpikedDamageToucher]
			ActionType		= "SendEvent"
			EventName		= "TakeDamage"
			Recipient		= "TouchedPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "DamageAmount"
			@@^Value		= "SpikesDamagePE"
			@@&Name			= "Damager"
			@@^Value		= "SelfPE"
			@@&Name			= "DamageType"
			@@^Value		= "PiercingDamageTypePE"

				[SpikesDamagePE]
				PEType	= "EldHardSwitch"
				Normal	= "SpikesDamageNormalPE"
				Hard	= "SpikesDamageHardPE"

					[SpikesDamageNormalPE]
					PEType	= "ConstantInt"
					Value	= 2

					[SpikesDamageHardPE]
					PEType	= "ConstantInt"
					Value	= 5

[WallSpikes]
#ShouldDebugRender = true
ShouldDebugCheckSpawnClearance	= false
EldTransform	= "WallSpikesTransform"
EldMesh			= "WallSpikesMesh"
EldCollision	= "WallSpikesCollision"
EldAnchor		= "WallSpikesAnchor"
EldSpikes		= "WallSpikesSpikes"
Reactions		= "WallSpikesReactions"

	[WallSpikesTransform]
	CanMove	= false

	[WallSpikesMesh]
	Mesh	= "Meshes/wall-spikes.cms"

	[WallSpikesCollision]
	HalfExtentsX	= 0.4921875
	HalfExtentsY	= 0.2421875
	HalfExtentsZ	= 0.9921875

	[WallSpikesAnchor]
	AnchorDirectionY	= -1.0

	[WallSpikesSpikes]
	SpeedThreshold	= 2.85
	CheckMovingDown	= false

	[WallSpikesReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "SpikesOnSpikedReaction"
	@@&				= "DestroyOnUnanchoredReaction"

[Fountain]
#ShouldDebugRender	= true
EldTransform		= "FountainTransform"
EldCollision		= "FountainCollision"
EldMesh				= "FountainMesh"
EldLight			= "FountainLight"
EldSound			= "."
EldParticles		= "."
EldFrobbable		= "FountainFrobbable"
Reactions			= "FountainReactions"
State				= "FountainState"

	[FountainTransform]
	CanMove	= false

	[FountainCollision]
	IsStatic		= true
	HalfExtentsXY	= 0.25
	HalfExtentsZ	= 0.5546875	# 0.5 + .0625 - 0.0078125
	BlocksEntities	= true
	BlocksTrace		= true

	[FountainMesh]
	Mesh	= "Meshes/fountain.cms"
	OffsetZ	= -0.5625

	[FountainLight]
	Radius	= 5.0
	ColorR	= 0.3
	ColorG	= 0.3
	ColorB	= 1.2

	[FountainFrobbable]
	UseMeshExtents	= true
	ExtentsFatten	= 0.05
	FriendlyName	= "Fountain"
	FrobVerb		= "Quaff"

	[FountainState]
	InitialState	= "Full"

	[FountainReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "FountainOnInitializedAndFullReaction"
	@@&				= "FountainOnFrobbedReaction"
	@@&				= "ShowFountainBookReaction"

		[FountainOnInitializedAndFullReaction]
		Rule		= "OnInitializedAndFullRule"
		NumActions	= &
		@ Action
		@@&			= "PlayFountainAmbientSFX"
		@@&			= "PlayFountainAmbientVFX"

			[OnInitializedAndFullRule]
			Event			= "OnInitialized"
			NumCriteria		= &
			@ Criterion
			@@&Name			= "State"
			@@^Min			= "FullPE"

			[PlayFountainAmbientSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "FountainAmbientSFXPE"
			@@&Name			= "Attached"
			@@^Value		= "TruePE"

				[FountainAmbientSFXPE]
				PEType	= "ConstantString"
				Value	= "FountainAmbientSound"

			[PlayFountainAmbientVFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "FountainAmbientVFXPE"
			@@&Name			= "Attached"
			@@^Value		= "TruePE"

				[FountainAmbientVFXPE]
				PEType		= "ConstantString"
				Value		= "PS_Fountain"

		[ShowFountainBookReaction]
		Rule		= "ShowFountainBookRule"
		NumActions	= &
		@ Action
		@@&			= "ConditionalShowFountainBook"

			[ShowFountainBookRule]
			Event	= "ShowFountainBook"

			[ConditionalShowFountainBook]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "HasNotReadFountainBook"
			@@^Action		= "TeachFountainBook"

				[HasNotReadFountainBook]
				PEType	= "NOT"
				Input	= "HasReadFountainBook"

					[HasReadFountainBook]
					PEType	= "EldGetPersistentVar"
					Key		= "HasReadFountainBook"

				[TeachFountainBook]
				ActionType	= "Composite"
				NumActions	= &
				@ Action
				@@&			= "ShowFountainBook"
				@@&			= "MarkFountainBookRead"

					[MarkFountainBookRead]
					ActionType	= "EldSetPersistentVar"
					Key			= "HasReadFountainBook"
					ValuePE		= "TruePE"

		[FountainOnFrobbedReaction]
		Rule		= "OnFrobbedAndFullRule"
		NumActions	= &
		@ Action
		@@&			= "QueueShowFountainBook"
		@@&			= "SetStateEmpty"
		@@&			= "BecomeNonFrobbable"
		@@&			= "SetFountainEmptyMesh"
		@@&			= "RemoveLightAction"
		@@&			= "FountainGiveHealth"
		@@&			= "PlayFountainSFX"
		@@&			= "StopFountainAmbientSFX"
		@@&			= "StopFountainAmbientVFX"

			[OnFrobbedAndFullRule]
			Event			= "OnFrobbed"
			NumCriteria		= &
			@ Criterion
			@@&Name			= "State"
			@@^Min			= "FullPE"

				[FullPE]
				PEType	= "ConstantString"
				Value	= "Full"

			[QueueShowFountainBook]
			ActionType		= "SendEvent"
			EventName		= "ShowFountainBook"
			Recipient		= "SelfPE"
			QueueEvent		= true

			[SetStateEmpty]
			ActionType		= "SendEvent"
			EventName		= "SetState"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "NewState"
			@@^Value		= "EmptyPE"

				[EmptyPE]
				PEType	= "ConstantString"
				Value	= "Empty"

			[SetFountainEmptyMesh]
			ActionType		= "SendEvent"
			EventName		= "SetMesh"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Mesh"
			@@^Value		= "FountainEmptyMeshPE"

				[FountainEmptyMeshPE]
				PEType	= "ConstantString"
				Value	= "Meshes/fountain-empty.cms"

			[RemoveLightAction]
			ActionType	= "SendEvent"
			EventName	= "RemoveLight"
			Recipient	= "SelfPE"

			[FountainGiveHealth]
			ActionType		= "SendEvent"
			EventName		= "GiveMaxHealth"
			Recipient		= "FrobberPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "MaxHealthAmount"
			@@^Value		= "FountainMaxHealthPE"
			@@&Name			= "HealthAmount"
			@@^Value		= "FountainHealthPE"

				[FountainMaxHealthPE]
				PEType	= "ConstantInt"
				Value	= 1

				[FountainHealthPE]
				PEType	= "EldHardSwitch"
				Normal	= "FountainHealthNormalPE"
				Hard	= "FountainHealthHardPE"

					[FountainHealthNormalPE]
					PEType	= "ConstantInt"
					Value	= 2

					[FountainHealthHardPE]
					PEType	= "ConstantInt"
					Value	= 1

			[PlayFountainSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "FrobberPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "FountainSFXPE"

				[FountainSFXPE]
				PEType	= "ConstantString"
				Value	= "FountainSound"

			[StopFountainAmbientSFX]
			ActionType		= "SendEvent"
			EventName		= "StopSound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Category"
			@@^Value		= "SFXPE"

			[StopFountainAmbientVFX]
			ActionType		= "SendEvent"
			EventName		= "StopParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "FountainAmbientVFXPE"

[EmptyFountain]
EldTransform		= "FountainTransform"
EldCollision		= "FountainCollision"
EldMesh				= "EmptyFountainMesh"

	[EmptyFountainMesh]
	Mesh	= "Meshes/fountain-empty.cms"
	OffsetZ	= -0.5625

# Rm
[FountainBlood]
Extends				= "Fountain"
#ShouldDebugRender	= true
EldMesh				= "FountainBloodMesh"
EldLight			= "FountainBloodLight"
EldSound			= "."
EldParticles		= "."
EldFrobbable		= "FountainBloodFrobbable"
EldMapMarker		= "FountainBloodMapMarker"
Reactions			= "FountainBloodReactions"
State				= ""

	[FountainBloodMesh]
	Extends			= "FountainMesh"
	TextureOverride	= "Textures/fountain-blood_NODXT.tga"

	[FountainBloodLight]
	Extends	= "FountainLight"
	ColorR	= 1.2
	ColorG	= 0.0
	ColorB	= 0.0

	[FountainBloodFrobbable]
	UseMeshExtents	= true
	ExtentsFatten	= 0.05
	FriendlyName	= "FountainBlood"
	FrobVerb		= "Examine"

	[FountainBloodMapMarker]
	MarkAsRoom	= true
	Texture		= "Textures/Minimap/fountain-blood_NODXT.tga"

	[FountainBloodReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "FountainBloodOnInitializedReaction"
	@@&				= "FountainBloodOnFrobbedReaction"

		[FountainBloodOnInitializedReaction]
		Rule		= "OnInitializedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayFountainBloodSFX"

			[PlayFountainBloodSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "FountainBloodSFXPE"
			@@&Name			= "Attached"
			@@^Value		= "TruePE"

				[FountainBloodSFXPE]
				PEType	= "ConstantString"
				Value	= "FountainBloodSound"

		[FountainBloodOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "ConfirmFountainBloodAction"

			[ConfirmFountainBloodAction]
			ActionType		= "UIShowYesNoDialog"
			YesNoString		= "ConfirmFountainBlood"
			NumYesActions	= &
			@ YesAction
			@@&				= "FountainBloodGiveMoney"
			@@&				= "FountainBloodBecomeVulnerable"	# So we can't exploit cross
			@@&				= "FountainBloodTakeDamage"

				[FountainBloodGiveMoney]
				ActionType		= "SendEvent"
				EventName		= "AddMoney"
				Recipient		= "PlayerPE"	# FrobberPE doesn't work here
				QueueEvent		= true
				NumParameters	= &
				@ Parameter
				@@&Name			= "Money"
				@@^Value		= "FountainBloodMoneyPE"
				@@&Name			= "ShowPickupScreen"
				@@^Value		= "TruePE"
				
					[FountainBloodMoneyPE]
					PEType	= "EldHardSwitch"
					Normal	= "FountainBloodMoneyNormalPE"
					Hard	= "FountainBloodMoneyHardPE"

						# A medkit restores 3 health at 50 artifacts, or 16.6~ artifacts/HP
						# If this trades at a higher rate, that could be exploited
						[FountainBloodMoneyNormalPE]
						PEType	= "ConstantInt"
						Value	= 15

						[FountainBloodMoneyHardPE]
						PEType	= "ConstantInt"
						Value	= 10

				[FountainBloodBecomeVulnerable]
				ActionType	= "SendEvent"
				EventName	= "SetVulnerable"
				Recipient	= "PlayerPE"
				QueueEvent	= true

				[FountainBloodTakeDamage]
				ActionType		= "SendEvent"
				EventName		= "TakeDamage"
				Recipient		= "PlayerPE"	# FrobberPE doesn't work here
				QueueEvent		= true
				NumParameters	= &
				@ Parameter
				@@&Name			= "DamageAmount"
				@@^Value		= "IntOnePE"
				@@&Name			= "Damager"
				@@^Value		= "PlayerPE"	# FrobberPE doesn't work here
				@@&Name			= "DamageType"
				@@^Value		= "PiercingDamageTypePE"
# Rm

# Rm
[Cross]
#ShouldDebugRender	= true
EldTransform		= "CrossTransform"
EldCollision		= "CrossCollision"
EldMesh				= "CrossMesh"
EldFrobbable		= "CrossFrobbable"
Reactions			= "CrossReactions"
State				= "CrossState"

	[CrossTransform]
	CanMove	= false

	[CrossCollision]
	IsStatic		= true
	HalfExtentsX	= 0.375
	HalfExtentsY	= 0.125
	HalfExtentsZ	= 0.6171875	# 0.625 - 0.0078125
	BlocksEntities	= true
	BlocksTrace		= true

	[CrossMesh]
	Mesh	= "Meshes/cross.cms"

	[CrossLight]
	Radius	= 5.0
	ColorR	= 0.3
	ColorG	= 0.3
	ColorB	= 1.2

	[CrossFrobbable]
	UseMeshExtents	= true
	ExtentsFatten	= 0.05
	FriendlyName	= "Cross"
	FrobVerb		= "Pray"

	[CrossState]
	InitialState	= "Full"

	[CrossReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "CrossOnFrobbedReaction"
	@@&				= "ShowCrossBookReaction"

		[ShowCrossBookReaction]
		Rule		= "ShowCrossBookRule"
		NumActions	= &
		@ Action
		@@&			= "ConditionalShowCrossBook"

			[ShowCrossBookRule]
			Event	= "ShowCrossBook"

			[ConditionalShowCrossBook]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "HasNotReadCrossBook"
			@@^Action		= "TeachCrossBook"

				[HasNotReadCrossBook]
				PEType	= "NOT"
				Input	= "HasReadCrossBook"

					[HasReadCrossBook]
					PEType	= "EldGetPersistentVar"
					Key		= "HasReadCrossBook"

				[TeachCrossBook]
				ActionType	= "Composite"
				NumActions	= &
				@ Action
				@@&			= "ShowCrossBook"
				@@&			= "MarkCrossBookRead"

					[MarkCrossBookRead]
					ActionType	= "EldSetPersistentVar"
					Key			= "HasReadCrossBook"
					ValuePE		= "TruePE"

		[CrossOnFrobbedReaction]
		Rule		= "OnFrobbedAndFullRule"
		NumActions	= &
		@ Action
		@@&			= "QueueShowCrossBook"
		@@&			= "SetStateEmpty"
		@@&			= "BecomeNonFrobbable"
		@@&			= "CrossOnFrobbedAction"

			[QueueShowCrossBook]
			ActionType	= "SendEvent"
			EventName	= "ShowCrossBook"
			Recipient	= "SelfPE"
			QueueEvent	= true

			[CrossOnFrobbedAction]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "CrossChancePE"
			@@^Action		= "MakeFrobberInvulnerable"

				# 1:3 chance to get invulnerability
				[CrossChancePE]
				PEType		= "RandomBool"
				Probability	= 0.333

				[MakeFrobberInvulnerable]
				ActionType	= "SendEvent"
				EventName	= "SetInvulnerable"
				Recipient	= "FrobberPE"
# Rm

[Campfire]
#ShouldDebugRender	= true
EldTransform		= "CampfireTransform"
EldMesh				= "CampfireMesh"
EldLight			= "CampfireLight"
EldSound			= "."
EldParticles		= "."
EldFrobbable		= "CampfireFrobbable"
EldAnchor			= "CampfireAnchor"
Reactions			= "CampfireReactions"
State				= "CampfireState"

	[CampfireTransform]
	CanMove	= false

	[CampfireMesh]
	Mesh	= "Meshes/campfire.cms"

	[CampfireLight]
	Radius	= 5.0
	ColorR	= 1.5
	ColorG	= 0.65
	ColorB	= 0.375

	[CampfireFrobbable]
	UseMeshExtents	= true
	ExtentsFatten	= 0.05
	FriendlyName	= "Campfire"
	FrobVerb		= "Rest"
	HoldVerb		= "StokeCampfire"

	[CampfireAnchor]
	AnchorDirectionZ	= -1.0

	[CampfireState]
	InitialState	= "Lit"

	[CampfireReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "CampfireOnInitializedAndLitReaction"
	@@&				= "CampfireOnInitializedAndStokedReaction"
	@@&				= "CampfireOnFrobbedAndLitReaction"
	@@&				= "CampfireOnFrobbedAndStokedReaction"
	@@&				= "CampfireOnFrobbedHeldReaction"
	@@&				= "CampfireOnBecameFrobTargetReaction"

		[CampfireOnFrobbedHeldReaction]
		Rule		= "OnFrobbedHeldRule"
		NumActions	= &
		@ Action
		@@&			= "CampfireConditionalStoke"

			[CampfireConditionalStoke]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "CanAffordStokePE"
			@@^Action		= "CampfireStokeComposite"

				[CanAffordStokePE]
				PEType	= "Conditional"
				Op		= "GTE"
				InputA	= "FrobberMoneyPE"
				InputB	= "CampingKitCostPE"

				[CampfireStokeComposite]
				ActionType	= "Composite"
				NumActions	= &
				@ Action
				@@&			= "SetStateStoked"
				@@&			= "SetCampfireStokedFrobName"
				@@&			= "RemoveFrobberStokeMoney"
				@@&			= "StopCampfireAmbientVFX"
				@@&			= "PlayCampfireStokedVFX"

					[SetStateStoked]
					ActionType		= "SendEvent"
					EventName		= "SetState"
					Recipient		= "SelfPE"
					NumParameters	= &
					@ Parameter
					@@&Name			= "NewState"
					@@^Value		= "StokedPE"

					[SetCampfireStokedFrobName]
					ActionType		= "SendEvent"
					EventName		= "SetFriendlyName"
					Recipient		= "SelfPE"
					NumParameters	= &
					@ Parameter
					@@&Name			= "FriendlyName"
					@@^Value		= "CampfireStokedPE"

						[CampfireStokedPE]
						PEType	= "ConstantString"
						Value	= "CampfireStoked"

					[RemoveFrobberStokeMoney]
					ActionType		= "SendEvent"
					EventName		= "RemoveMoney"
					Recipient		= "FrobberPE"
					NumParameters	= &
					@ Parameter
					@@&Name			= "Money"
					@@^Value		= "CampingKitCostPE"

					[PlayCampfireStokedVFX]
					ActionType		= "SendEvent"
					EventName		= "PlayParticleSystem"
					Recipient		= "SelfPE"
					NumParameters	= &
					@ Parameter
					@@&Name			= "ParticleSystem"
					@@^Value		= "CampfireStokedVFXPE"
					@@&Name			= "Attached"
					@@^Value		= "TruePE"

						[CampfireStokedVFXPE]
						PEType		= "ConstantString"
						Value		= "PS_Campfire_Stoked"

		[CampfireOnBecameFrobTargetReaction]
		Rule		= "OnBecameFrobTargetRule"
		NumActions	= &
		@ Action
		@@&			= "SetCampfireHoldReleaseMode"
		@@&			= "SetCampfireHoldVerbDisabledStatus"

			[SetCampfireHoldReleaseMode]
			ActionType		= "SendEvent"
			EventName		= "SetWidgetDisabled"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Screen"
			@@^Value		= "HUDScreenPE"
			@@&Name			= "Widget"
			@@^Value		= "FrobHoldPE"
			@@&Name			= "Disabled"
			@@^Value		= "CannotAffordStokePE"

				[CannotAffordStokePE]
				PEType	= "Conditional"
				Op		= "LT"
				InputA	= "FrobberMoneyPE"
				InputB	= "CampingKitCostPE"

					[CampingKitCostPE]
					PEType	= "ConstantInt"
					Value	= 10

					# Also satisfy the UI string lookup.
					[CampingKit]
					StokePriceTag	= 10

			[SetCampfireHoldVerbDisabledStatus]
			ActionType		= "SendEvent"
			EventName		= "SetHoldReleaseMode"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "HoldReleaseMode"
			@@^Value		= "CanBeStokedPE"

				[CanBeStokedPE]
				PEType		= "AND"
				InputA		= "IsLitPE"
				InputB		= "CanFrobberStokePE"

					[IsLitPE]
					PEType	= "Conditional"
					Op		= "E"
					InputA	= "StatePE"
					InputB	= "LitPE"

					[CanFrobberStokePE]
					PEType		= "StatMod"
					EntityPE	= "FrobberPE"
					StatName	= "CanStokeCampfire"
					Input		= "FloatZeroPE"

		[CampfireOnInitializedAndStokedReaction]
		Rule		= "OnInitializedAndStokedRule"
		NumActions	= &
		@ Action
		@@&			= "PlayCampfireAmbientSFX"
		@@&			= "PlayCampfireStokedVFX"

			[OnInitializedAndStokedRule]
			Event			= "OnInitialized"
			NumCriteria		= &
			@ Criterion
			@@&Name			= "State"
			@@^Min			= "StokedPE"

		[CampfireOnInitializedAndLitReaction]
		Rule		= "OnInitializedAndLitRule"
		NumActions	= &
		@ Action
		@@&			= "PlayCampfireAmbientSFX"
		@@&			= "PlayCampfireAmbientVFX"

			[OnInitializedAndLitRule]
			Event			= "OnInitialized"
			NumCriteria		= &
			@ Criterion
			@@&Name			= "State"
			@@^Min			= "LitPE"

			[PlayCampfireAmbientSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "CampfireAmbientSFXPE"
			@@&Name			= "Attached"
			@@^Value		= "TruePE"

				[CampfireAmbientSFXPE]
				PEType	= "ConstantString"
				Value	= "CampfireAmbientSound"

			[PlayCampfireAmbientVFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "CampfireAmbientVFXPE"
			@@&Name			= "Attached"
			@@^Value		= "TruePE"

				[CampfireAmbientVFXPE]
				PEType		= "ConstantString"
				Value		= "PS_Campfire"

		[CampfireOnFrobbedAndStokedReaction]
		Rule		= "OnFrobbedAndStokedRule"
		NumActions	= &
		@ Action
		@@&			= "SetStateUnlit"
		@@&			= "BecomeNonFrobbable"
		@@&			= "RemoveLightAction"
		@@&			= "CampfireGiveStokedHealth"
		@@&			= "StopCampfireAmbientSFX"
		@@&			= "StopCampfireAmbientVFX"
		@@&			= "StopCampfireStokedVFX"

			[OnFrobbedAndStokedRule]
			Event			= "OnFrobbed"
			NumCriteria		= &
			@ Criterion
			@@&Name			= "State"
			@@^Min			= "StokedPE"

				[StokedPE]
				PEType	= "ConstantString"
				Value	= "Stoked"

			[CampfireGiveStokedHealth]
			ActionType		= "SendEvent"
			EventName		= "GiveHealth"
			Recipient		= "FrobberPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "HealthAmount"
			@@^Value		= "CampfireStokedHealthPE"

				[CampfireStokedHealthPE]
				PEType	= "EldHardSwitch"
				Normal	= "CampfireStokedHealthNormalPE"
				Hard	= "CampfireStokedHealthHardPE"

					[CampfireStokedHealthNormalPE]
					PEType	= "ConstantInt"
					Value	= 3

					[CampfireStokedHealthHardPE]
					PEType	= "ConstantInt"
					Value	= 2

		[CampfireOnFrobbedAndLitReaction]
		Rule		= "OnFrobbedAndLitRule"
		NumActions	= &
		@ Action
		@@&			= "SetStateUnlit"
		@@&			= "BecomeNonFrobbable"
		@@&			= "RemoveLightAction"
		@@&			= "CampfireGiveHealth"
		@@&			= "StopCampfireAmbientSFX"
		@@&			= "StopCampfireAmbientVFX"
		@@&			= "StopCampfireStokedVFX"

			[OnFrobbedAndLitRule]
			Event			= "OnFrobbed"
			NumCriteria		= &
			@ Criterion
			@@&Name			= "State"
			@@^Min			= "LitPE"

			[SetStateUnlit]
			ActionType		= "SendEvent"
			EventName		= "SetState"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "NewState"
			@@^Value		= "UnlitPE"

			[CampfireGiveHealth]
			ActionType		= "SendEvent"
			EventName		= "GiveHealth"
			Recipient		= "FrobberPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "HealthAmount"
			@@^Value		= "CampfireHealthPE"

				[CampfireHealthPE]
				PEType	= "ConstantInt"
				Value	= 1

			[StopCampfireAmbientSFX]
			ActionType		= "SendEvent"
			EventName		= "StopSound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Category"
			@@^Value		= "SFXPE"

			[StopCampfireAmbientVFX]
			ActionType		= "SendEvent"
			EventName		= "StopParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "CampfireAmbientVFXPE"

			[StopCampfireStokedVFX]
			ActionType		= "SendEvent"
			EventName		= "StopParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "CampfireStokedVFXPE"

[Throne]
EldTransform		= "ThroneTransform"
EldCollision		= "ThroneCollision"
EldMesh				= "ThroneMesh"

	[ThroneTransform]
	CanMove	= false

	[ThroneCollision]
	IsStatic		= true
	HalfExtentsXY	= 0.4921875	# 0.5 - 0.0078125
	HalfExtentsZ	= 0.9921875	# 1.0 - 0.0078125
	BlocksEntities	= true
	BlocksTrace		= true
	BlocksOcclusion	= true

	[ThroneMesh]
	Mesh	= "Meshes/throne.cms"
	OffsetZ	= -1.0

[MistDeco]
EldTransform	= "."
EldParticles	= "MistDecoParticles"

	[MistDecoParticles]
	NumParticleSystems	= &
	@ ParticleSystem
	@@&					= "PS_GraveyardMistFloaters"
	@@&					= "PS_GraveyardMist"

[DustDeco]
EldTransform	= "."
EldParticles	= "DustDecoParticles"

	[DustDecoParticles]
	NumParticleSystems	= &
	@ ParticleSystem
	@@&					= "PS_CryptDust"
	@@&					= "PS_HangingDust"

[HangingDustDeco]
EldTransform	= "."
EldParticles	= "HangingDustDecoParticles"

	[HangingDustDecoParticles]
	NumParticleSystems	= &
	@ ParticleSystem
	@@&					= "PS_HangingDust"

[HangingIceDeco]
EldTransform	= "."
EldParticles	= "HangingIceDecoParticles"

	[HangingIceDecoParticles]
	NumParticleSystems	= &
	@ ParticleSystem
	@@&					= "PS_HangingIceMist"
	@@&					= "PS_HangingIce"

[Fence3x3]
#ShouldDebugRender	= true
ShouldDebugCheckSpawnClearance	= false
EldTransform		= "FenceTransform"
EldCollision		= "Fence3x3Collision"
EldMesh				= "Fence3x3Mesh"
EldAnchor			= "FenceAnchor"
Reactions			= "FenceReactions"

	[FenceTransform]
	CanMove	= false

	[Fence3x3Collision]
	IsStatic		= true
	HalfExtentsX	= 1.4921875
	HalfExtentsY	= 0.0546875
	HalfExtentsZ	= 1.4921875
	BlocksEntities	= true
	BlocksTrace		= true

	[Fence3x3Mesh]
	Mesh	= "Meshes/fence-3x3.cms"
	OffsetZ	= -1.5

	[FenceAnchor]
	AnchorDirectionZ	= -1.0

	[FenceReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "DestroyOnUnanchoredReaction"

[Fence1x1]
#ShouldDebugRender	= true
ShouldDebugCheckSpawnClearance	= false
EldTransform		= "FenceTransform"
EldCollision		= "Fence1x1Collision"
EldMesh				= "Fence1x1Mesh"
EldAnchor			= "FenceAnchor"
Reactions			= "FenceReactions"

	[Fence1x1Collision]
	IsStatic		= true
	HalfExtentsX	= 0.4921875
	HalfExtentsY	= 0.0546875
	HalfExtentsZ	= 0.4921875
	BlocksEntities	= true
	BlocksTrace		= true

	[Fence1x1Mesh]
	Mesh	= "Meshes/fence-1x1.cms"
	OffsetZ	= -0.5

[LooseTile]
EldTransform	= "LooseTileTransform"
EldCollision	= "LooseTileCollision"
EldMesh			= "LooseTileMesh"
EldSound		= "."
EldParticles	= "."
EldHealth		= "LooseTileHealth"
State			= "LooseTileState"
Reactions		= "LooseTileReactions"

	[LooseTileTransform]
	CanMove	= false

	[LooseTileCollision]
	IsStatic		= true
	HalfExtentsXY	= 0.4921875
	HalfExtentsZ	= 0.125
	BlocksEntities	= true
	BlocksTrace		= true
	BlocksOcclusion	= true

	[LooseTileMesh]
	Mesh	= "Meshes/loose-tile.cms"
	OffsetZ	= 0.0625	# So it hovers slightly over voxels but doesn't interfere with collision

	[LooseTileHealth]
	Health	= 1

	[LooseTileState]
	InitialState	= "Intact"

	[LooseTileReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "CollisionBreakReaction"
	@@&				= "DamageBreakReaction"
	@@&				= "BreakReaction"

		[BreakReaction]
		Rule		= "LooseTileBreakRule"
		NumActions	= &
		@ Action
		@@&			= "PlayLooseTileDustFX"
		@@&			= "PlayLooseTileSFX"
		@@&			= "HideMeshAction"
		@@&			= "DisableCollisionAction"
		@@&			= "LooseTileQueueDestroySelf"

			[LooseTileBreakRule]
			Event	= "Break"

			[DisableCollisionAction]
			ActionType	= "SendEvent"
			EventName	= "DisableCollision"
			Recipient	= "SelfPE"

			[LooseTileQueueDestroySelf]
			ActionType		= "SendEvent"
			EventName		= "Destroy"
			Recipient		= "SelfPE"
			QueueEvent		= true
			DispatchDelay	= 3.0

		[DamageBreakReaction]
		Rule		= "LooseTileIntactOnDiedRule"
		NumActions	= &
		@ Action
		@@&			= "GoToBreakingState"
		@@&			= "QueueBreakEvent"
		@@&			= "SetBrokenTileTexture"
		@@&			= "PlayLooseTileDustFX"
		@@&			= "PlayLooseTileSFX"

			[LooseTileIntactOnDiedRule]
			Event	= "OnDied"
			NumCriteria		= &
			@ Criterion
			@@&Name			= "State"
			@@^Min			= "IntactPE"

		[CollisionBreakReaction]
		Rule		= "LooseTileIntactOnAnyCollisionRule"
		NumActions	= &
		@ Action
		@@&			= "GoToBreakingState"
		@@&			= "QueueBreakEvent"
		@@&			= "SetBrokenTileTexture"
		@@&			= "PlayLooseTileDustFX"
		@@&			= "PlayLooseTileSFX"

			[LooseTileIntactOnAnyCollisionRule]
			Event			= "OnAnyCollision"
			NumCriteria		= &
			@ Criterion
			@@&Name			= "State"
			@@^Min			= "IntactPE"

				[IntactPE]
				PEType	= "ConstantString"
				Value	= "Intact"

			[GoToBreakingState]
			ActionType		= "SendEvent"
			EventName		= "SetState"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "NewState"
			@@^Value		= "BreakingPE"

				[BreakingPE]
				PEType	= "ConstantString"
				Value	= "Breaking"

			[QueueBreakEvent]
			ActionType		= "SendEvent"
			EventName		= "Break"
			Recipient		= "SelfPE"
			QueueEvent		= true
			DispatchDelay	= 1.0

			[SetBrokenTileTexture]
			ActionType		= "SendEvent"
			EventName		= "SetTexture"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Texture"
			@@^Value		= "BrokenTileTexturePE"

				[BrokenTileTexturePE]
				PEType	= "ConstantString"
				Value	= "Textures/loose-tile-broken_NODXT.tga"

			[PlayLooseTileDustFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "LooseTileDustFXPE"

				[LooseTileDustFXPE]
				PEType		= "ConstantString"
				Value		= "PS_LooseTileDust"

			[PlayLooseTileSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "LooseTileSFXPE"

				[LooseTileSFXPE]
				PEType	= "ConstantString"
				Value	= "LooseTileSound"

[ShopMarkup]
EldTransform	= "."
EldMapMarker	= "ShopMarkupMapMarker"

	[ShopMarkupMapMarker]
	MarkAsRoom	= true
	Texture		= "Textures/Minimap/shop_NODXT.tga"

[Plant]
#ShouldDebugRender	= true
EldTransform		= "."
EldMesh				= "PlantMesh"
EldFrobbable		= "PlantFrobbable"
EldAnchor			= "PlantAnchor"
Reactions			= "PlantReactions"
State				= "PlantState"

	[PlantAnchor]
	AnchorDirectionZ	= -1.0

	[PlantMesh]
	Mesh				= "Meshes/plant.cms"
	MaterialOverride	= "Material_EntityStaticAlphaTest"
	OffsetZ				= -0.5

	[PlantFrobbable]
	UseMeshExtents	= true
	ExtentsFatten	= 0.05
	FriendlyName	= "Plant"
	FrobVerb		= "Eat"

	[PlantState]
	InitialState	= "Full"

	[PlantReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "PlantOnFrobbedReaction"
	@@&				= "ShowFoodBookReaction"
	@@&				= "DestroyOnUnanchoredReaction"

		[ShowFoodBookReaction]
		Rule		= "ShowFoodBookRule"
		NumActions	= &
		@ Action
		@@&			= "ConditionalShowFoodBook"

			[ShowFoodBookRule]
			Event	= "ShowFoodBook"

		[PlantOnFrobbedReaction]
		Rule		= "OnFrobbedAndFullRule"
		NumActions	= &
		@ Action
		@@&			= "QueueShowFoodBook"
		@@&			= "SetStateEmpty"
		@@&			= "BecomeNonFrobbable"
		@@&			= "SetPlantEmptyTexture"
		@@&			= "PlantGiveHealth"
		@@&			= "PlayPlantSFX"

			[QueueShowFoodBook]
			ActionType		= "SendEvent"
			EventName		= "ShowFoodBook"
			Recipient		= "SelfPE"
			QueueEvent		= true

			[SetPlantEmptyTexture]
			ActionType		= "SendEvent"
			EventName		= "SetTexture"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Texture"
			@@^Value		= "PlantEmptyTexturePE"

				[PlantEmptyTexturePE]
				PEType	= "ConstantString"
				Value	= "Textures/plant-empty_NODXT.tga"

			[PlantGiveHealth]
			ActionType		= "SendEvent"
			EventName		= "GiveHealth"
			Recipient		= "FrobberPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "HealthAmount"
			@@^Value		= "PlantHealthStatModPE"	# Rm

				# Rm
				[PlantHealthStatModPE]
				PEType		= "StatMod"
				EntityPE	= "FrobberPE"
				StatName	= "FoodHealth"
				Input		= "PlantHealthPE"
				# Rm

					[PlantHealthPE]
					PEType	= "ConstantInt"
					Value	= 1

			[PlayPlantSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "FrobberPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "PlantSFXPE"

				[PlantSFXPE]
				PEType	= "ConstantString"
				Value	= "PlantSound"

[PlantEmpty]
EldTransform	= "."
EldMesh			= "PlantEmptyMesh"
EldAnchor		= "PlantAnchor"
Reactions		= "PlantEmptyReactions"

	[PlantEmptyMesh]
	Extends				= "PlantMesh"
	TextureOverride	= "Textures/plant-empty_NODXT.tga"

	[PlantEmptyReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "DestroyOnUnanchoredReaction"

[PlantToxic]
Extends			= "Plant"
EldMesh			= "PlantToxicMesh"
EldFrobbable	= "PlantToxicFrobbable"
EldAnchor		= "PlantAnchor"
Reactions		= "PlantToxicReactions"

	[PlantToxicMesh]
	Extends				= "PlantMesh"
	TextureOverride	= "Textures/plant-toxic_NODXT.tga"

	[PlantToxicFrobbable]
	Extends			= "PlantFrobbable"
	FriendlyName	= "PlantToxic"
	FrobVerb		= "EatUnsure"

	[PlantToxicReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "PlantToxicOnFrobbedReaction"
	@@&				= "ShowFoodBookReaction"
	@@&				= "DestroyOnUnanchoredReaction"

		[PlantToxicOnFrobbedReaction]
		Rule		= "OnFrobbedAndFullRule"
		NumActions	= &
		@ Action
		@@&			= "QueueShowFoodBook"
		@@&			= "SetStateEmpty"
		@@&			= "BecomeNonFrobbable"
		@@&			= "SetPlantToxicEmptyTexture"
		@@&			= "PlantToxicSelectResult"
		@@&			= "PlayPlantSFX"

			[SetPlantToxicEmptyTexture]
			ActionType		= "SendEvent"
			EventName		= "SetTexture"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Texture"
			@@^Value		= "PlantToxicEmptyTexturePE"

				[PlantToxicEmptyTexturePE]
				PEType	= "ConstantString"
				Value	= "Textures/plant-toxic-empty_NODXT.tga"

			[PlantToxicSelectResult]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "PlantToxicPoisonChancePE"
			@@^Action		= "PlantToxicApplyDamage"
			@@&Condition	= "TruePE"
			@@^Action		= "PlantGiveHealth"

				[PlantToxicPoisonChancePE]
				PEType	= "EldHardSwitch"
				Normal	= "PlantToxicPoisonChanceNormalPE"
				Hard	= "PlantToxicPoisonChanceHardPE"

					[PlantToxicPoisonChanceNormalPE]
					PEType		= "RandomBool"
					Probability	= 0.333

					[PlantToxicPoisonChanceHardPE]
					PEType		= "RandomBool"
					Probability	= 0.4

				[PlantToxicApplyDamage]
				ActionType		= "SendEvent"
				EventName		= "TakeDamage"
				Recipient		= "FrobberPE"
				NumParameters	= &
				@ Parameter
				@@&Name			= "DamageAmount"
				@@^Value		= "PlantDamagePE"
				@@&Name			= "Damager"
				@@^Value		= "SelfPE"
				@@&Name			= "DamageType"
				@@^Value		= "PoisonDamageTypePE"

					[PlantDamagePE]
					PEType	= "ConstantInt"
					Value	= 1

[Web]
EldTransform	= "WebTransform"
EldMesh			= "WebMesh"
EldAnchor		= "WebAnchor"
Reactions		= "WebReactions"

	[WebTransform]
	CanMove	= false

	[WebAnchor]
	AnchorDirectionY	= -1.0

	[WebMesh]
	Mesh				= "Meshes/web.cms"
	MaterialOverride	= "Material_EntityStaticAlphaTest"

	[WebReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "DestroyOnUnanchoredReaction"

[WebTop]
EldTransform	= "WebTransform"
EldMesh			= "WebTopMesh"
EldAnchor		= "WebAnchor"
Reactions		= "WebReactions"

	[WebTopMesh]
	Mesh				= "Meshes/web-top.cms"
	MaterialOverride	= "Material_EntityStaticAlphaTest"

[Candle]
EldTransform		= "."
EldMesh				= "CandleMesh"
EldFrobbable		= "CandleFrobbable"
EldLight			= "CandleLight"
EldParticles		= "."
EldMapMarker		= "CandleMapMarker"
Reactions			= "CandleReactions"
State				= "CandleState"

	[CandleMesh]
	Mesh			= "Meshes/candle.cms"

	[CandleFrobbable]
	UseMeshExtents	= true
	ExtentsFatten	= 0.05
	FriendlyName	= "Candle"
	FrobVerb		= "Light"

	[CandleLight]
	DeferAddLight	= true
	Radius			= 4.0
	ColorR			= 1.5
	ColorG			= 0.9
	ColorB			= 0.3

	[CandleMapMarker]
	MarkAsRoom	= true
	Texture		= "Textures/Minimap/candle_NODXT.tga"

	[CandleState]
	InitialState	= "Unlit"

	[CandleReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "CandleOnFrobbedReaction"

		[CandleOnFrobbedReaction]
		Rule		= "OnFrobbedAndUnlitRule"
		NumActions	= &
		@ Action
		@@&			= "SetLitState"
		@@&			= "BecomeNonFrobbable"
		@@&			= "AddLightAction"
		@@&			= "PlayCandleVFX"
		@@&			= "PlayCandleSFX"
		@@&			= "IncrementEndgameCountAction"

			[OnFrobbedAndUnlitRule]
			Event			= "OnFrobbed"
			NumCriteria		= &
			@ Criterion
			@@&Name			= "State"
			@@^Min			= "UnlitPE"

			[PlayCandleVFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "CandleVFXPE"

				[CandleVFXPE]
				PEType		= "ConstantString"
				Value		= "PS_Candle"

			[PlayCandleSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "FrobberPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "CandleSFXPE"

				[CandleSFXPE]
				PEType	= "ConstantString"
				Value	= "CandleSound"

			[IncrementEndgameCountAction]
			ActionType	= "SendEvent"
			EventName	= "IncrementEndgameCount"
			Recipient	= "PlayerPE"

[RitualBook]
EldTransform	= "."
EldMesh			= "RitualBookMesh"
EldFrobbable	= "RitualBookFrobbable"
EldLight		= "RitualBookLight"
EldParticles	= "RitualBookParticles"
EldHUDMarker	= "ReturnBookHUDMarker"
EldMapMarker	= "ReturnBookMapMarker"
Reactions		= "RitualBookReactions"

	[RitualBookMesh]
	Mesh	= "Meshes/book-static.cms"

	[RitualBookFrobbable]
	UseMeshExtents	= true
	ExtentsFatten	= 0.05
	FriendlyName	= "RitualBook"
	FrobVerb		= "Read"

	[RitualBookLight]
	Radius			= 6.0
	ColorR			= 1.5
	ColorG			= 0.5
	ColorB			= 1.0

	[RitualBookParticles]
	Particles	= "PS_BookSparklesRitual"

	[RitualBookReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "RitualBookOnFrobbedTrueEndingReaction"
	@@&				= "RitualBookOnFrobbedNormalEndingReaction"
	@@&				= "RitualBookOnFrobbedNeedCandlesReaction"

		[RitualBookOnFrobbedTrueEndingReaction]
		Rule	= "RitualBookOnFrobbedTrueEndingRule"
		NumActions	= &
		@ Action
		@@&			= "PostPlayTimeScore"
		@@&			= "UpdateGenerationsCounterConfig"
		@@&			= "UpdatePlayTimeConfig"
		@@&			= "Award_ACH_End_True"
		@@&			= "AwardEndingAchievements"
		@@&			= "ShowTrueEndingBook"
		@@&			= "QueuePlayerEnding"

			[RitualBookOnFrobbedTrueEndingRule]
			Event			= "OnFrobbed"
			NumConditions	= &
			@ Condition
			@@&				= "TrueEndingConditionPE"
			@@&				= "EndingConditionPE"

				[TrueEndingConditionPE]
				PEType	= "Conditional"
				Op		= "GTE"
				InputA	= "TrueEndingPlayerStatModPE"
				InputB	= "IntThreePE"

					[TrueEndingPlayerStatModPE]
					PEType		= "StatMod"
					StatName	= "TrueEnding"
					EntityPE	= "PlayerPE"
					Input		= "IntZeroPE"

				[EndingConditionPE]
				PEType	= "Conditional"
				Op		= "GTE"
				InputA	= "PlayerEndgameCountPE"
				InputB	= "IntThreePE"

					[PlayerEndgameCountPE]
					PEType		= "PushContext"
					EntityPE	= "PlayerPE"
					Input		= "EndgameCountPE"

						[EndgameCountPE]
						PEType	= "QueryActionStack"
						Key		= "EndgameCount"

			[PostPlayTimeScore]
			ActionType		= "EldPostScore"
			LeaderboardTag	= ""
			ScorePE			= "PlayTimePE"

				[PlayTimePE]
				PEType	= "EldGetPlayTime"

			[UpdateGenerationsCounterConfig]
			ActionType	= "SetConfigVar"
			VarContext	= "HUD"
			VarName		= "GenerationsCounter"
			ValuePE		= "GenerationsCounterPE"

			[UpdatePlayTimeConfig]
			ActionType	= "Composite"
			NumActions	= &
			@ Action
			@@&			= "UpdatePlayTimeM"
			@@&			= "UpdatePlayTimeS"

				[UpdatePlayTimeM]
				ActionType	= "SetConfigVar"
				VarContext	= "HUD"
				VarName		= "PlayTimeM"
				ValuePE		= "PlayTimeMPE"

					[PlayTimeMPE]
					PEType	= "EldGetPlayTime"
					Minutes	= true

				[UpdatePlayTimeS]
				ActionType	= "SetConfigVar"
				VarContext	= "HUD"
				VarName		= "PlayTimeS"
				ValuePE		= "PlayTimeSPE"

					[PlayTimeSPE]
					PEType	= "EldGetPlayTime"
					Seconds	= true

			[Award_ACH_End_True]
			ActionType		= "NeonAwardAchievement"
			AchievementTag	= ""

			[AwardEndingAchievements]
			ActionType	= "Composite"
			NumActions	= &
			@ Action
			@@&			= "Conditional_Award_ACH_End_NGP"
			@@&			= "Conditional_Award_ACH_End_Speed"
			@@&			= "Conditional_Award_ACH_End_Unhurt"
			@@&			= "Award_ACH_End"

				[Conditional_Award_ACH_End_NGP]
				ActionType		= "Selector"
				NumSelections	= &
				@ Selection
				@@&Condition	= "IsHardModePE"
				@@^Action		= "Award_ACH_End_NGP"

					[Award_ACH_End_NGP]
					ActionType		= "NeonAwardAchievement"
					AchievementTag	= ""

				[Conditional_Award_ACH_End_Speed]
				ActionType		= "Selector"
				NumSelections	= &
				@ Selection
				@@&Condition	= "SpeedRunConditionPE"
				@@^Action		= "Award_ACH_End_Speed"

					[SpeedRunConditionPE]
					PEType	= "Conditional"
					Op		= "LT"
					InputA	= "PlayTimeMPE"
					InputB	= "SpeedRunTimeMPE"

						[SpeedRunTimeMPE]
						PEType	= "ConstantInt"
						Value	= 10

					[Award_ACH_End_Speed]
					ActionType		= "NeonAwardAchievement"
					AchievementTag	= ""

				[Conditional_Award_ACH_End_Unhurt]
				ActionType		= "Selector"
				NumSelections	= &
				@ Selection
				@@&Condition	= "NoDamageTakenPE"
				@@^Action		= "Award_ACH_End_Unhurt"

					[NoDamageTakenPE]
					PEType	= "NOT"
					Input	= "DamageTakenPE"

						[DamageTakenPE]
						PEType	= "EldGetPersistentVar"
						Key		= "DamageTaken"

					[Award_ACH_End_Unhurt]
					ActionType		= "NeonAwardAchievement"
					AchievementTag	= ""

				[Award_ACH_End]
				ActionType		= "NeonAwardAchievement"
				AchievementTag	= ""

			[ShowTrueEndingBook]
			ActionType	= "EldShowBook"
			BookString	= "Book_TrueEnd"
			IsDynamic	= true

			[QueuePlayerEnding]
			ActionType	= "SendEvent"
			EventName	= "OnEnding"
			Recipient	= "PlayerPE"
			EventOwner	= "PlayerPE"
			QueueEvent	= true

		[RitualBookOnFrobbedNormalEndingReaction]
		Rule		= "RitualBookOnFrobbedNormalEndingRule"
		NumActions	= &
		@ Action
		@@&			= "PostPlayTimeScore"
		@@&			= "UpdateGenerationsCounterConfig"
		@@&			= "UpdatePlayTimeConfig"
		@@&			= "AwardEndingAchievements"
		@@&			= "ShowNormalEndingBook"
		@@&			= "QueuePlayerEnding"

			[RitualBookOnFrobbedNormalEndingRule]
			Event			= "OnFrobbed"
			NumConditions	= &
			@ Condition
			@@&				= "EndingConditionPE"

			[ShowNormalEndingBook]
			ActionType	= "EldShowBook"
			BookString	= "Book_GoodEnd"
			IsDynamic	= true
		
		[RitualBookOnFrobbedNeedCandlesReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "PostPlayTimeScore"
		@@&			= "UpdateGenerationsCounterConfig"
		@@&			= "UpdatePlayTimeConfig"
		@@&			= "AwardEndingAchievements"
		@@&			= "ShowBadEndingBook"
		@@&			= "QueuePlayerEnding"

			[ShowBadEndingBook]
			ActionType	= "EldShowBook"
			BookString	= "Book_BadEnd"
			IsDynamic	= true

[Table]
EldTransform		= "TableTransform"
EldCollision		= "TableCollision"
EldMesh				= "TableMesh"
EldDropShadow		= "TableDropShadow"
EldAnchor			= "TableAnchor"
Reactions			= "TableReactions"

	[TableTransform]
	CanMove	= false

	[TableCollision]
	IsStatic		= true
	HalfExtentsXY	= 0.9375
	HalfExtentsZ	= 0.4921875
	BlocksEntities	= true
	BlocksTrace		= true

	[TableMesh]
	Mesh	= "Meshes/table.cms"

	[TableDropShadow]
	Radius			= 1.5
	Alpha			= 0.5
	ShadowFloatZ	= 0.06

	[TableAnchor]
	AnchorDirectionZ	= -1.0

	[TableReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "DestroyOnUnanchoredReaction"

[Chair]
#ShouldDebugRender	= true
EldTransform		= "ChairTransform"
EldCollision		= "ChairCollision"
EldMesh				= "ChairMesh"
EldDropShadow		= "ChairDropShadow"
EldAnchor			= "ChairAnchor"
Reactions			= "ChairReactions"

	[ChairTransform]
	CanMove	= false

	[ChairCollision]
	IsStatic		= true
	HalfExtentsXY	= 0.25
	HalfExtentsZ	= 0.6171875
	BlocksEntities	= true
	BlocksTrace		= true

	[ChairMesh]
	Mesh	= "Meshes/chair.cms"

	[ChairDropShadow]
	Radius			= 0.4
	Alpha			= 0.5
	ShadowFloatZ	= 0.06

	[ChairAnchor]
	AnchorDirectionZ	= -1.0

	[ChairReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "DestroyOnUnanchoredReaction"

[Toilet]
#ShouldDebugRender				= true
ShouldDebugCheckSpawnClearance	= false
EldTransform		= "ToiletTransform"
EldCollision		= "ToiletCollision"
EldMesh				= "ToiletMesh"
EldDropShadow		= "ToiletDropShadow"
EldAnchor			= "ToiletAnchor"
EldSound			= "."
EldFrobbable		= "ToiletFrobbable"
Reactions			= "ToiletReactions"

	[ToiletTransform]
	CanMove	= false

	[ToiletCollision]
	IsStatic		= true
	HalfExtentsX	= 0.3125
	HalfExtentsY	= 0.5
	HalfExtentsZ	= 0.5625
	BlocksEntities	= true
	BlocksTrace		= true

	[ToiletMesh]
	Mesh	= "Meshes/toilet.cms"

	[ToiletDropShadow]
	Radius			= 0.5
	Alpha			= 0.5
	ShadowFloatZ	= 0.01

	[ToiletAnchor]
	AnchorDirectionZ	= -1.0

	[ToiletFrobbable]
	UseMeshExtents	= true
	ExtentsFatten	= 0.05
	FriendlyName	= "Toilet"
	FrobVerb		= "Flush"

	[ToiletReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "DestroyOnUnanchoredReaction"
	@@&				= "ToiletOnFrobbedReaction"

		[ToiletOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "BecomeNonFrobbable"
		@@&			= "PlayToiletSFX"
		@@&			= "QueueBecomeFrobbable"

			[PlayToiletSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "ToiletSFXPE"
			@@&Name			= "Attached"
			@@^Value		= "TruePE"

				[ToiletSFXPE]
				PEType	= "ConstantString"
				Value	= "ToiletSound"

			[QueueBecomeFrobbable]
			ActionType		= "SendEvent"
			EventName		= "BecomeFrobbable"
			Recipient		= "SelfPE"
			QueueEvent		= true
			DispatchDelay	= 5.0

[Sink]
#ShouldDebugRender				= true
ShouldDebugCheckSpawnClearance	= false
EldTransform		= "SinkTransform"
EldCollision		= "SinkCollision"
EldMesh				= "SinkMesh"
EldDropShadow		= "SinkDropShadow"
EldAnchor			= "SinkAnchor"
EldSound			= "."
EldParticles		= "."
EldFrobbable		= "SinkFrobbable"
State				= "SinkState"
Reactions			= "SinkReactions"

	[SinkTransform]
	CanMove	= false

	[SinkCollision]
	IsStatic		= true
	HalfExtentsX	= 0.375
	HalfExtentsY	= 0.3125
	HalfExtentsZ	= 0.1875
	BlocksEntities	= true
	BlocksTrace		= true

	[SinkMesh]
	Mesh	= "Meshes/sink.cms"

	[SinkDropShadow]
	Radius			= 0.5
	Alpha			= 0.5
	ShadowFloatZ	= 0.01

	[SinkAnchor]
	AnchorDirectionY	= -1.0

	[SinkFrobbable]
	UseMeshExtents	= true
	ExtentsFatten	= 0.05
	FriendlyName	= "Sink"
	FrobVerb		= "Use"

	[SinkState]
	InitialState	= "Off"

	[SinkReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "DestroyOnUnanchoredReaction"
	@@&				= "SinkOnFrobbedReaction"
	@@&				= "SinkOnInitializedReaction"

		[SinkOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "SinkFrobbedSelector"

			[SinkFrobbedSelector]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "IsOffPE"
			@@^Action		= "TurnSinkOn"
			@@&Condition	= "TruePE"
			@@^Action		= "TurnSinkOff"

				[TurnSinkOn]
				ActionType	= "Composite"
				NumActions	= &
				@ Action
				@@&			= "SetOnState"
				@@&			= "PlaySinkSFX"
				@@&			= "PlaySinkVFX"

					[PlaySinkSFX]
					ActionType		= "SendEvent"
					EventName		= "PlaySound"
					Recipient		= "SelfPE"
					NumParameters	= &
					@ Parameter
					@@&Name			= "Sound"
					@@^Value		= "SinkSFXPE"
					@@&Name			= "Attached"
					@@^Value		= "TruePE"

						[SinkSFXPE]
						PEType	= "ConstantString"
						Value	= "SinkSound"

					[PlaySinkVFX]
					ActionType		= "SendEvent"
					EventName		= "PlayParticleSystem"
					Recipient		= "SelfPE"
					NumParameters	= &
					@ Parameter
					@@&Name			= "ParticleSystem"
					@@^Value		= "SinkVFXPE"
					@@&Name			= "Attached"
					@@^Value		= "TruePE"

						[SinkVFXPE]
						PEType		= "ConstantString"
						Value		= "PS_SinkFaucet"

				[TurnSinkOff]
				ActionType	= "Composite"
				NumActions	= &
				@ Action
				@@&			= "SetOffState"
				@@&			= "StopSinkSFX"
				@@&			= "StopSinkVFX"

					[StopSinkSFX]
					ActionType		= "SendEvent"
					EventName		= "StopSound"
					Recipient		= "SelfPE"
					NumParameters	= &
					@ Parameter
					@@&Name			= "Category"
					@@^Value		= "SFXPE"

					[StopSinkVFX]
					ActionType		= "SendEvent"
					EventName		= "StopParticleSystem"
					Recipient		= "SelfPE"
					NumParameters	= &
					@ Parameter
					@@&Name			= "ParticleSystem"
					@@^Value		= "SinkVFXPE"

		[SinkOnInitializedReaction]
		Rule		= "OnInitializedAndOnRule"
		NumActions	= &
		@ Action
		@@&			= "PlaySinkSFX"

			[OnInitializedAndOnRule]
			Event			= "OnInitialized"
			NumCriteria		= &
			@ Criterion
			@@&Name			= "State"
			@@^Min			= "OnPE"

[DeskLampOff]
Extends			= "DeskLamp"
EldLight		= "DeskLampOffLight"
State			= "DeskLampOffState"

	[DeskLampOffLight]
	Extends			= "DeskLampLight"
	DeferAddLight	= true

	[DeskLampOffState]
	InitialState	= "Off"

[DeskLamp]
EldTransform	= "."
EldMesh			= "DeskLampMesh"
EldDropShadow	= "DeskLampDropShadow"
EldAnchor		= "DeskLampAnchor"
EldLight		= "DeskLampLight"
EldFrobbable	= "DeskLampFrobbable"
EldSound		= "."
Reactions		= "DeskLampReactions"
State			= "DeskLampState"

	[DeskLampMesh]
	Mesh	= "Meshes/desk-lamp.cms"

	[DeskLampDropShadow]
	Radius			= 0.25
	Alpha			= 0.5
	ShadowFloatZ	= 0.01

	[DeskLampAnchor]
	AnchorDirectionZ	= -1.0

	[DeskLampLight]
	Radius			= 3.0
	ColorR			= 1.5
	ColorG			= 1.3
	ColorB			= 1.1

	[DeskLampFrobbable]
	UseMeshExtents	= true
	ExtentsFatten	= 0.05
	FriendlyName	= "DeskLamp"
	FrobVerb		= "Switch"

	[DeskLampState]
	InitialState	= "On"

	[DeskLampReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "DestroyOnUnanchoredReaction"
	@@&				= "DeskLampOnFrobbedReaction"

		[DeskLampOnFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "DeskLampFrobbedSelector"

			[DeskLampFrobbedSelector]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "IsOffPE"
			@@^Action		= "SwitchLampOn"
			@@&Condition	= "TruePE"
			@@^Action		= "SwitchLampOff"

				[IsOffPE]
				PEType	= "Conditional"
				Op		= "Equals"
				InputA	= "StatePE"
				InputB	= "OffPE"

					[OffPE]
					PEType	= "ConstantString"
					Value	= "Off"

				[SwitchLampOn]
				ActionType	= "Composite"
				NumActions	= &
				@ Action
				@@&			= "AddLightAction"
				@@&			= "PlayDeskLampOnSFX"
				@@&			= "SetOnState"

					[PlayDeskLampOnSFX]
					ActionType		= "SendEvent"
					EventName		= "PlaySound"
					Recipient		= "SelfPE"
					NumParameters	= &
					@ Parameter
					@@&Name			= "Sound"
					@@^Value		= "DeskLampOnSFXPE"
					@@&Name			= "Attached"
					@@^Value		= "TruePE"

						[DeskLampOnSFXPE]
						PEType	= "ConstantString"
						Value	= "DeskLampOnSound"

					[SetOnState]
					ActionType		= "SendEvent"
					EventName		= "SetState"
					Recipient		= "SelfPE"
					NumParameters	= &
					@ Parameter
					@@&Name			= "NewState"
					@@^Value		= "OnPE"

						[OnPE]
						PEType	= "ConstantString"
						Value	= "On"

				[SwitchLampOff]
				ActionType	= "Composite"
				NumActions	= &
				@ Action
				@@&			= "RemoveLightAction"
				@@&			= "PlayDeskLampOffSFX"
				@@&			= "SetOffState"

					[PlayDeskLampOffSFX]
					ActionType		= "SendEvent"
					EventName		= "PlaySound"
					Recipient		= "SelfPE"
					NumParameters	= &
					@ Parameter
					@@&Name			= "Sound"
					@@^Value		= "DeskLampOffSFXPE"
					@@&Name			= "Attached"
					@@^Value		= "TruePE"

						[DeskLampOffSFXPE]
						PEType	= "ConstantString"
						Value	= "DeskLampOffSound"

					[SetOffState]
					ActionType		= "SendEvent"
					EventName		= "SetState"
					Recipient		= "SelfPE"
					NumParameters	= &
					@ Parameter
					@@&Name			= "NewState"
					@@^Value		= "OffPE"

[Tombstone]
#ShouldDebugRender	= true
ShouldDebugCheckSpawnClearance	= false
EldTransform		= "TombstoneTransform"
EldCollision		= "TombstoneCollision"
EldMesh				= "TombstoneMesh"
EldAnchor			= "TombstoneAnchor"
Reactions			= "TombstoneReactions"

	[TombstoneTransform]
	CanMove	= false

	[TombstoneCollision]
	IsStatic		= true
	HalfExtentsX	= 0.5
	HalfExtentsY	= 0.375
	HalfExtentsZ	= 1.0
	BlocksEntities	= true
	BlocksTrace		= true

	[TombstoneMesh]
	Mesh	= "Meshes/tombstone.cms"

	[TombstoneAnchor]
	AnchorDirectionZ	= -1.0

	[TombstoneReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "DestroyOnUnanchoredReaction"

[Icicles]
#ShouldDebugRender = true
EldTransform	= "IciclesTransform"
EldMesh			= "IciclesMesh"
EldCollision	= "IciclesCollision"
EldAnchor		= "IciclesAnchor"
EldHealth		= "IciclesHealth"
EldIcicles		= "IciclesIcicles"
EldParticles	= "."
EldSound		= "."
State			= "IciclesState"
Reactions		= "IciclesReactions"

	[IciclesTransform]
	CanMove			= false	# Will be turned on when icicles fall
	AllowImpulses	= false

	[IciclesMesh]
	Mesh	= "Meshes/icicles.cms"

	[IciclesCollision]
	HalfExtentsXY	= 0.375
	HalfExtentsZ	= 0.45
	BlocksTrace		= true

	[IciclesAnchor]
	AnchorDirectionZ	= 1.0

	[IciclesHealth]
	Health	= 1

	[IciclesIcicles]
	CheckDistance = 8.0

	[IciclesState]
	InitialState	= "Still"

	[IciclesReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "IciclesOnTouchedAndUnanchoredReaction"
	@@&				= "IciclesOnLandedReaction"
	@@&				= "IciclesOnUnanchoredReaction"
	@@&				= "IciclesOnDiedReaction"

		[IciclesOnLandedReaction]
		Rule		= "OnLandedRule"
		NumActions	= &
		@ Action
		@@&			= "IciclesBreakCompositeAction"

			[OnLandedRule]
			Event = "OnLanded"

			[IciclesBreakCompositeAction]
			ActionType	= "Composite"
			NumActions	= &
			@ Action
			@@&			= "StopMotionAction"
			@@&			= "HideMeshAction"
			@@&			= "HideShadowAction"
			@@&			= "StopTouchingAction"
			@@&			= "PlayIciclesBreakSFX"
			@@&			= "PlayIciclesBreakVFX"
			@@&			= "PlayIciclesDropVFX"
			@@&			= "IciclesQueueDestroySelf"
			# TODO: VFX

				[PlayIciclesBreakSFX]
				ActionType		= "SendEvent"
				EventName		= "PlaySound"
				Recipient		= "SelfPE"
				NumParameters	= &
				@ Parameter
				@@&Name			= "Sound"
				@@^Value		= "IciclesBreakSFXPE"

					[IciclesBreakSFXPE]
					PEType	= "ConstantString"
					Value	= "IcicleBreakSound"

				[PlayIciclesBreakVFX]
				ActionType		= "SendEvent"
				EventName		= "PlayParticleSystem"
				Recipient		= "SelfPE"
				NumParameters	= &
				@ Parameter
				@@&Name			= "ParticleSystem"
				@@^Value		= "IciclesBreakVFXPE"

					[IciclesBreakVFXPE]
					PEType		= "ConstantString"
					Value		= "PS_IciclesBreak"

				# Give the FX time to play
				[IciclesQueueDestroySelf]
				ActionType		= "SendEvent"
				EventName		= "Destroy"
				Recipient		= "SelfPE"
				QueueEvent		= true
				DispatchDelay	= 4.0

		[IciclesOnDiedReaction]
		Rule		= "OnDiedRule"
		NumActions	= &
		@ Action
		@@&			= "UnanchorAction"

			[UnanchorAction]
			ActionType	= "SendEvent"
			EventName	= "Unanchor"
			Recipient	= "SelfPE"

		[IciclesOnUnanchoredReaction]
		Rule		= "OnUnanchoredRule"
		NumActions	= &
		@ Action
		@@&			= "SetCanMoveAction"
		@@&			= "SetDefaultGravityAction"
		@@&			= "PlayIciclesDropSFX"
		@@&			= "PlayIciclesDropVFX"

			[SetCanMoveAction]
			ActionType		= "SendEvent"
			EventName		= "SetCanMove"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "CanMove"
			@@^Value		= "TruePE"

			[PlayIciclesDropSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "IciclesDropSFXPE"

				[IciclesDropSFXPE]
				PEType	= "ConstantString"
				Value	= "IcicleDropSound"

			[PlayIciclesDropVFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "IciclesDropVFXPE"

				[IciclesDropVFXPE]
				PEType		= "ConstantString"
				Value		= "PS_IciclesDrop"

		[IciclesOnTouchedAndUnanchoredReaction]
		Rule		= "OnTouchedAndUnanchoredRule"
		NumActions	= &
		@ Action
		@@&			= "IciclesDamageToucherAction"
		@@&			= "IciclesBreakCompositeAction"

			[OnTouchedAndUnanchoredRule]
			Event			= "OnTouched"
			NumCriteria		= &
			@ Criterion
			@@&Name			= "IsAnchored"
			@@^Min			= "FalsePE"

			[IciclesDamageToucherAction]
			ActionType		= "SendEvent"
			EventName		= "TakeDamage"
			Recipient		= "TouchedPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "DamageAmount"
			@@^Value		= "IciclesDamagePE"
			@@&Name			= "Damager"
			@@^Value		= "SelfPE"
			@@&Name			= "DamageType"
			@@^Value		= "PiercingDamageTypePE"

				[IciclesDamagePE]
				PEType	= "EldHardSwitch"
				Normal	= "IciclesDamageNormalPE"
				Hard	= "IciclesDamageHardPE"

					[IciclesDamageNormalPE]
					PEType	= "ConstantInt"
					Value	= 1

					[IciclesDamageHardPE]
					PEType	= "ConstantInt"
					Value	= 2

[Corpse]
EldTransform	= "."
EldMesh			= "CorpseMesh"

	[CorpseMesh]
	Mesh					= "Meshes/corpse.cms"

[Vase]
EldTransform	= "."
EldCollision	= "VaseCollision"
EldMesh			= "VaseMesh"
EldHealth		= "VaseHealth"
EldSound		= "."
EldParticles	= "."
EldDropShadow	= "VaseDropShadow"
State			= "VaseState"
Reactions		= "VaseReactions"
Owner			= "."

	[VaseCollision]
	HalfExtentsXY	= 0.35
	HalfExtentsZ	= 0.49
	BlocksTrace		= true

	[VaseMesh]
	Mesh	= "Meshes/vase.cms"

	[VaseDropShadow]
	UseMeshCenter		= true
	Radius				= 0.4
	VoxelCheckOffsetZ	= 0.0
	Alpha				= 0.5
	ShadowFloatZ		= 0.01

	[VaseHealth]
	Health	= 1

	[VaseState]
	InitialState	= "Primed"

	[VaseReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "VaseOnDiedReaction"

		[VaseOnDiedReaction]
		Rule		= "OnDiedAndNotExplodedRule"	# From dynamite
		NumActions	= &
		@ Action
		@@&			= "SetExplodedState"
		@@&			= "HideMeshAction"
		@@&			= "HideShadowAction"
		@@&			= "StopTouchingAction"
		@@&			= "PlayVaseAINoise"
		@@&			= "PlayVaseBurstVFX"
		@@&			= "PlayVaseDustVFX"
		@@&			= "PlayVaseBurstSFX"
		@@&			= "SpawnVaseLoot"
		@@&			= "VaseQueueDestroySelf"

			[SpawnVaseLoot]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "ShouldSpawnArtifact5PE"
			@@^Action		= "SpawnArtifact5"
			@@&Condition	= "ShouldSpawnArtifactPE"
			@@^Action		= "SpawnArtifact"
			@@&Condition	= "ShouldSpawnBugPE"
			@@^Action		= "SpawnBug"

				[ShouldSpawnArtifact5PE]
				PEType		= "RandomBool"
				Probability	= 0.4

				[ShouldSpawnArtifactPE]
				PEType		= "RandomBool"
				Probability	= 0.333

				[ShouldSpawnBugPE]
				PEType		= "RandomBool"
				Probability	= 0.5

				[SpawnArtifact5]
				ActionType	= "EldSpawnEntity"
				Entity		= "Artifact5"

				[SpawnArtifact]
				ActionType	= "EldSpawnEntity"
				Entity		= "Artifact"

				[SpawnBug]
				ActionType	= "EldSpawnEntity"
				Entity		= "MoMBug_NoRespawn"

			[PlayVaseAINoise]
			ActionType		= "SendEvent"
			EventName		= "OnAINoise"
			NumParameters	= &
			@ Parameter
			@@&Name			= "NoiseEntity"
			@@^Value		= "OwnerPE"
			@@&Name			= "NoiseLocation"
			@@^Value		= "LocationPE"
			@@&Name			= "NoiseRadius"
			@@^Value		= "VaseNoiseRadiusPE"

				[VaseNoiseRadiusPE]
				PEType	= "ConstantFloat"
				Value	= 8.0

			[PlayVaseBurstVFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "VaseBurstVFXPE"

				[VaseBurstVFXPE]
				PEType		= "ConstantString"
				Value		= "PS_VaseShards"

			[PlayVaseDustVFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "VaseDustVFXPE"

				[VaseDustVFXPE]
				PEType		= "ConstantString"
				Value		= "PS_VaseDust"

			[PlayVaseBurstSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "VaseBurstSFXPE"

				[VaseBurstSFXPE]
				PEType	= "ConstantString"
				Value	= "VaseBurstSound"

			# Give the FX time to play
			[VaseQueueDestroySelf]
			ActionType		= "SendEvent"
			EventName		= "Destroy"
			Recipient		= "SelfPE"
			QueueEvent		= true
			DispatchDelay	= 4.0

[Airplane]
#ShouldDebugRender	= true
EldTransform	= "AirplaneTransform"
EldCollision	= "AirplaneCollision"
EldMesh			= "AirplaneMesh"
EldFrobbable	= "AirplaneFrobbable"
Reactions		= "AirplaneReactions"

	[AirplaneTransform]
	CanMove	= false

	[AirplaneCollision]
	IsStatic		= true
	HalfExtentsX	= 0.875
	HalfExtentsY	= 6.5
	HalfExtentsZ	= 1.5
	BlocksEntities	= true
	BlocksTrace		= true

	[AirplaneMesh]
	Mesh	= "Meshes/airplane.cms"

	[AirplaneFrobbable]
	UseCollisionExtents	= true
	FriendlyName		= "Airplane"
	FrobVerb			= "Use"

	[AirplaneReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "AirplaneFrobbedReaction"

		[AirplaneFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "AirplaneFrobSelector"

			[AirplaneFrobSelector]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "PlayerHasAirplaneKeysPE"
			@@^Action		= "AirplaneEndingActions"
			@@&Condition	= "TruePE"
			@@^Action		= "ShowPlaneNoKeysBook"

		[AirplaneEndingActions]
		ActionType	= "Composite"
		NumActions	= &
		@ Action
		@@&			= "Award_ACH_End_MoM"
		@@&			= "ShowPlaneWithKeysBook"
		@@&			= "QueuePlayerEnding"

			[Award_ACH_End_MoM]
			ActionType		= "NeonAwardAchievement"
			AchievementTag	= ""

			[ShowPlaneWithKeysBook]
			ActionType	= "EldShowBook"
			BookString	= "Book_PlaneWithKeys"

		[ShowPlaneNoKeysBook]
		ActionType	= "EldShowBook"
		BookString	= "Book_PlaneNoKeys"

[SoulGrinder]
#ShouldDebugRender	= true
ShouldDebugCheckSpawnClearance	= false
EldTransform	= "SoulGrinderTransform"
EldCollision	= "SoulGrinderCollision"
EldMesh			= "SoulGrinderMesh"
EldFrobbable	= "SoulGrinderFrobbable"
Reactions		= "SoulGrinderReactions"

	[SoulGrinderTransform]
	CanMove	= false

	[SoulGrinderCollision]
	IsStatic		= true
	HalfExtentsX	= 1.5
	HalfExtentsY	= 2.0
	HalfExtentsZ	= 2.0
	BlocksEntities	= true
	BlocksTrace		= true

	[SoulGrinderMesh]
	Mesh	= "Meshes/soul-grinder.cms"

	[SoulGrinderFrobbable]
	UseCollisionExtents	= true
	FriendlyName		= "SoulGrinder"
	FrobVerb			= "Use"

	[SoulGrinderReactions]
	NumReactions	= &
	@ Reaction
	@@&				= "SoulGrinderFrobbedReaction"

		[SoulGrinderFrobbedReaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "Conditional_Award_ACH_Souls"
		@@&			= "PostSoulsScore"
		@@&			= "ShowSoulGrinderBook"
		@@&			= "QueuePlayerAsylumEnding"

				[Conditional_Award_ACH_Souls]
				ActionType		= "Selector"
				NumSelections	= &
				@ Selection
				@@&Condition	= "HasAchievementSoulsPE"
				@@^Action		= "Award_ACH_Souls"

					[HasAchievementSoulsPE]
					PEType	= "Conditional"
					Op		= "GTE"
					InputA	= "PlayerSoulsPE"
					InputB	= "AchievementSoulsPE"

						[AchievementSoulsPE]
						PEType	= "ConstantInt"
						Value	= 500

					[Award_ACH_Souls]
					ActionType		= "NeonAwardAchievement"
					AchievementTag	= ""

			[PostSoulsScore]
			ActionType		= "EldPostScore"
			LeaderboardTag	= ""
			ScorePE			= "PlayerSoulsPE"

				[PlayerSoulsPE]
				PEType		= "PushContext"
				EntityPE	= "PlayerPE"
				Input		= "SoulsPE"

					[SoulsPE]
					PEType	= "QueryActionStack"
					Key		= "Souls"

			[ShowSoulGrinderBook]
			ActionType	= "EldShowBook"
			BookString	= "Book_SoulGrinder"
			IsDynamic	= true

			[QueuePlayerAsylumEnding]
			ActionType	= "SendEvent"
			EventName	= "OnAsylumEnding"
			Recipient	= "PlayerPE"
			EventOwner	= "PlayerPE"
			QueueEvent	= true

[SoulGrinderHarness]
#ShouldDebugRender	= true
ShouldDebugCheckSpawnClearance	= false
EldTransform	= "SoulGrinderTransform"
EldMesh			= "SoulGrinderHarnessMesh"

	[SoulGrinderHarnessMesh]
	Mesh	= "Meshes/soul-grinder-harness.cms"

[BigJack_Return]
Extends			= "BigJack"
EldFrobbable	= "BigJack_Return_Frobbable"
Reactions		= "BigJack_Return_Reactions"
EldHUDMarker	= "ExitDoorDownHUDMarker"
EldMapMarker	= "ExitDoorDownMapMarker"

	[BigJack_Return_Frobbable]
	Extends		= "BigJack_Frobbable"
	FrobVerb	= "ReturnToHub"

	[BigJack_Return_Reactions]
	NumReactions	= &
	@ Reaction
	@@&				= "BigJack_Return_Frobbed_Reaction"

		[BigJack_Return_Frobbed_Reaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "ReturnBookReturnToHub"

[MediumJack]
Extends			= "BigJack"
EldCollision	= "LittleJack_Collision"
EldMesh			= "LittleJack_Mesh"
EldLight		= "MediumJack_Light"

	[MediumJack_Light]
	Extends	= "BigJack_Light"
	Radius	= 3.0

[BigJack]
#ShouldDebugRender	= true
ShouldDebugCheckSpawnClearance	= false
EldTransform	= "BigJack_Transform"
EldCollision	= "BigJack_Collision"
EldMesh			= "BigJack_Mesh"
EldLight		= "BigJack_Light"
EldFrobbable	= "BigJack_Frobbable"
EldMapMarker	= "BigJackMapMarker"
Reactions		= "BigJack_Reactions"

	[BigJackMapMarker]
	MarkAsRoom	= true
	Texture		= "Textures/Minimap/book_NODXT.tga"

	[BigJack_Transform]
	CanMove	= false

	[BigJack_Collision]
	IsStatic		= true
	HalfExtentsX	= 1.875
	HalfExtentsY	= 1.875
	HalfExtentsZ	= 1.5
	BlocksEntities	= true
	BlocksTrace		= true

	[BigJack_Mesh]
	Mesh	= "Meshes/jack-big.cms"
	OffsetZ	= -1.5

	[BigJack_Light]
	Radius = 6.0
	ColorR = 1.5
	ColorG = 0.75
	ColorB = 0.0

	[BigJack_Frobbable]
	UseCollisionExtents	= true
	FriendlyName		= "BigJack"
	FrobVerb			= "TrickOrTreat"

	[BigJack_Reactions]
	NumReactions	= &
	@ Reaction
	@@&				= "BigJack_Frobbed_Reaction"

		[BigJack_Frobbed_Reaction]
		Rule		= "OnFrobbedRule"
		NumActions	= &
		@ Action
		@@&			= "BigJack_GoToHalloween"

			[BigJack_GoToHalloween]
			ActionType	= "EldGoToLevel"
			Level		= "Halloween-1"

[LittleJack]
#ShouldDebugRender	= true
EldTransform	= "."
EldCollision	= "LittleJack_Collision"
EldMesh			= "LittleJack_Mesh"
EldHealth		= "LittleJack_Health"
EldSound		= "."
EldParticles	= "."
EldDropShadow	= "LittleJack_DropShadow"
State			= "LittleJack_State"
Reactions		= "LittleJack_Reactions"
Owner			= "."

	[LittleJack_Collision]
	HalfExtentsXY	= 0.25
	HalfExtentsZ	= 0.2
	BlocksTrace		= true

	[LittleJack_Mesh]
	Mesh	= "Meshes/jack.cms"
	OffsetZ	= -0.2

	[LittleJack_DropShadow]
	UseMeshCenter		= true
	Radius				= 0.375
	VoxelCheckOffsetZ	= 0.0
	Alpha				= 0.5
	ShadowFloatZ		= 0.01

	[LittleJack_Health]
	Health	= 1

	[LittleJack_State]
	InitialState	= "Primed"

	[LittleJack_Reactions]
	NumReactions	= &
	@ Reaction
	@@&				= "LittleJack_OnDiedReaction"

		[LittleJack_OnDiedReaction]
		Rule		= "OnDiedAndNotExplodedRule"	# From dynamite
		NumActions	= &
		@ Action
		@@&			= "SetExplodedState"
		@@&			= "HideMeshAction"
		@@&			= "HideShadowAction"
		@@&			= "StopTouchingAction"
		@@&			= "PlayLittleJackBurstVFX"
		@@&			= "PlayLittleJackBurstSFX"
		@@&			= "SpawnLittleJackLoot"
		@@&			= "LittleJackQueueDestroySelf"

			[SpawnLittleJackLoot]
			ActionType		= "Selector"
			NumSelections	= &
			@ Selection
			@@&Condition	= "LittleJackShouldSpawnArtifact5PE"
			@@^Action		= "SpawnArtifact5"
			@@&Condition	= "TruePE"
			@@^Action		= "SpawnArtifact"

				[LittleJackShouldSpawnArtifact5PE]
				PEType		= "RandomBool"
				Probability	= 0.75

			[PlayLittleJackBurstVFX]
			ActionType		= "SendEvent"
			EventName		= "PlayParticleSystem"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "ParticleSystem"
			@@^Value		= "LittleJackBurstVFXPE"

				[LittleJackBurstVFXPE]
				PEType		= "ConstantString"
				Value		= "PS_LittleJackShards"

			[PlayLittleJackBurstSFX]
			ActionType		= "SendEvent"
			EventName		= "PlaySound"
			Recipient		= "SelfPE"
			NumParameters	= &
			@ Parameter
			@@&Name			= "Sound"
			@@^Value		= "LittleJackBurstSFXPE"

				[LittleJackBurstSFXPE]
				PEType	= "ConstantString"
				Value	= "Sound_LittleJackBurst"

			# Give the FX time to play
			[LittleJackQueueDestroySelf]
			ActionType		= "SendEvent"
			EventName		= "Destroy"
			Recipient		= "SelfPE"
			QueueEvent		= true
			DispatchDelay	= 4.0

# Rm
[HangingIce_Spawner]
EldTransform	= "."
Reactions		= "HangingIce_Spawner_Reactions"

	[HangingIce_Spawner_Reactions]
	NumReactions	= &
	@ Reaction
	@@&				= "Reaction_OnSpawned_HangingIce_Spawner"

		[Reaction_OnSpawned_HangingIce_Spawner]
		Rule		= "Rule_OnSpawned_PlayerHasRegenerated"
		NumActions	= &
		@ Action
		@@&			= "Action_HangingIce_Spawner_Spawn"

			[Rule_OnSpawned_PlayerHasRegenerated]
			Event			= "OnSpawnedQueued"
			NumConditions	= &
			@ Condition
			@@&				= "PE_Condition_PlayerHasRegenerated"

				[PE_Condition_PlayerHasRegenerated]
				PEType	= "Conditional"
				Op		= "GT"
				InputA	= "GenerationsCounterPE"
				InputB	= "IntOnePE" # GenerationsCounter has already incremented by the time we check this, because it is not queued

			[Action_HangingIce_Spawner_Spawn]
			ActionType		= "EldSpawnEntity"
			Entity			= "HangingIceDeco"

[MoMEntrance_Spawner]
EldTransform	= "."
Reactions		= "MoMEntrance_Spawner_Reactions"

	[MoMEntrance_Spawner_Reactions]
	NumReactions	= &
	@ Reaction
	@@&				= "Reaction_OnSpawned_MoMEntrance_Spawner"

		[Reaction_OnSpawned_MoMEntrance_Spawner]
		Rule		= "Rule_OnSpawned_PlayerHasRegenerated"
		NumActions	= &
		@ Action
		@@&			= "Action_MoMEntrance_Spawner_Spawn"

			[Action_MoMEntrance_Spawner_Spawn]
			ActionType		= "EldSpawnEntity"
			Entity			= "MoMEntrance"

[AsylumEntrance_Spawner]
EldTransform	= "."
Reactions		= "AsylumEntrance_Spawner_Reactions"

	[AsylumEntrance_Spawner_Reactions]
	NumReactions	= &
	@ Reaction
	@@&				= "Reaction_OnSpawned_AsylumEntrance_Spawner"

		[Reaction_OnSpawned_AsylumEntrance_Spawner]
		Rule		= "Rule_OnSpawned_PlayerHasRegenerated"
		NumActions	= &
		@ Action
		@@&			= "Action_AsylumEntrance_Spawner_Spawn"

			[Action_AsylumEntrance_Spawner_Spawn]
			ActionType		= "EldSpawnEntity"
			Entity			= "AsylumEntrance"

[MediumJack_Spawner]
EldTransform	= "."
Reactions		= "MediumJack_Spawner_Reactions"

	[MediumJack_Spawner_Reactions]
	NumReactions	= &
	@ Reaction
	@@&				= "Reaction_OnSpawned_MediumJack_Spawner"

		[Reaction_OnSpawned_MediumJack_Spawner]
		Rule		= "Rule_OnSpawned_PlayerHasRegenerated"
		NumActions	= &
		@ Action
		@@&			= "Action_MediumJack_Spawner_Spawn"

			[Action_MediumJack_Spawner_Spawn]
			ActionType		= "EldSpawnEntity"
			Entity			= "MediumJack"
# Rm