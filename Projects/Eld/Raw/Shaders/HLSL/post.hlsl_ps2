#include "common.hlsl_psh"
#include "calibration.hlsl_psh"
#include "colorblind.hlsl_psh"

#define COLOR_GRADE			1

#if COLOR_GRADE
#include "color-grading.hlsl_psh"
#endif

sampler Sampler				: register(s0);
sampler ColorGradingSampler	: register(s1);

struct PS_INPUT
{
	float2 UV		: TEXCOORD0;
};

float4 Main( PS_INPUT In ) : COLOR
{
#if COLOR_GRADE
	const float3 GradedColor = Calibrate( ColorGrade( tex2D( Sampler, In.UV ), ColorGradingSampler ) );
#else
	const float3 GradedColor = Calibrate( tex2D( Sampler, In.UV ) );
#endif
	const float4 FinalColor = float4( GradedColor, Luma( GradedColor ) );

#if COLOR_BLIND
	return mul( COLOR_BLIND_TYPE, FinalColor );
#else
	return FinalColor;
#endif
}